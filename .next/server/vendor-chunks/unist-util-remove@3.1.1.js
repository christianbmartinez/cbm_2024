"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/unist-util-remove@3.1.1";
exports.ids = ["vendor-chunks/unist-util-remove@3.1.1"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/unist-util-remove@3.1.1/node_modules/unist-util-remove/lib/index.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/.pnpm/unist-util-remove@3.1.1/node_modules/unist-util-remove/lib/index.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   remove: () => (/* binding */ remove)\n/* harmony export */ });\n/* harmony import */ var unist_util_is__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! unist-util-is */ \"(ssr)/./node_modules/.pnpm/unist-util-is@5.2.1/node_modules/unist-util-is/lib/index.js\");\n/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n *\n * @typedef Options\n *   Configuration.\n * @property {boolean | null | undefined} [cascade=true]\n *   Whether to drop parent nodes if they had children, but all their children\n *   were filtered out.\n */\n\n\n\n/** @type {Array<unknown>} */\nconst empty = []\n\n/**\n * Change the given `tree` by removing all nodes that pass `test`.\n *\n * The tree is walked in preorder (NLR), visiting the node itself, then its\n * head, etc.\n *\n * @param tree\n *   Tree to change.\n * @param options\n *   Configuration (optional).\n * @param test\n *   `unist-util-is` compatible test.\n * @returns\n *   The given `tree` without nodes that pass `test`.\n *\n *   `null` is returned if `tree` itself didn’t pass the test or is cascaded\n *   away.\n */\n// To do: next major: don’t return `tree`.\nconst remove =\n  /**\n   * @type {(\n   *  (<Tree extends Node>(node: Tree, options: Options, test: Test) => Tree | null) &\n   *  (<Tree extends Node>(node: Tree, test: Test) => Tree | null)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Options | null | undefined} [options]\n     * @param {Test | null | undefined} [test]\n     * @returns {Node | null}\n     */\n    function (tree, options, test) {\n      const is = (0,unist_util_is__WEBPACK_IMPORTED_MODULE_0__.convert)(test || options)\n      const cascade =\n        !options || options.cascade === undefined || options.cascade === null\n          ? true\n          : options.cascade\n\n      return preorder(tree)\n\n      /**\n       * Check and remove nodes recursively in preorder.\n       * For each composite node, modify its children array in-place.\n       *\n       * @param {Node} node\n       * @param {number | null | undefined} [index]\n       * @param {Parent | null | undefined} [parent]\n       * @returns {Node | null}\n       */\n      function preorder(node, index, parent) {\n        /** @type {Array<Node>} */\n        // @ts-expect-error looks like a parent.\n        const children = node.children || empty\n        let childIndex = -1\n        let position = 0\n\n        if (is(node, index, parent)) {\n          return null\n        }\n\n        if (children.length > 0) {\n          // Move all living children to the beginning of the children array.\n          while (++childIndex < children.length) {\n            // @ts-expect-error looks like a parent.\n            if (preorder(children[childIndex], childIndex, node)) {\n              children[position++] = children[childIndex]\n            }\n          }\n\n          // Cascade delete.\n          if (cascade && !position) {\n            return null\n          }\n\n          // Drop other nodes.\n          children.length = position\n        }\n\n        return node\n      }\n    }\n  )\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vdW5pc3QtdXRpbC1yZW1vdmVAMy4xLjEvbm9kZV9tb2R1bGVzL3VuaXN0LXV0aWwtcmVtb3ZlL2xpYi9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0EsYUFBYSxzQkFBc0I7QUFDbkMsYUFBYSx3QkFBd0I7QUFDckMsYUFBYSw4QkFBOEI7QUFDM0M7QUFDQTtBQUNBO0FBQ0EsY0FBYyw0QkFBNEI7QUFDMUM7QUFDQTtBQUNBOztBQUVxQzs7QUFFckMsV0FBVyxnQkFBZ0I7QUFDM0I7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsTUFBTTtBQUNyQixlQUFlLDRCQUE0QjtBQUMzQyxlQUFlLHlCQUF5QjtBQUN4QyxpQkFBaUI7QUFDakI7QUFDQTtBQUNBLGlCQUFpQixzREFBTztBQUN4QjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixNQUFNO0FBQ3ZCLGlCQUFpQiwyQkFBMkI7QUFDNUMsaUJBQWlCLDJCQUEyQjtBQUM1QyxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBLG1CQUFtQixhQUFhO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2NibV8yMDI0Ly4vbm9kZV9tb2R1bGVzLy5wbnBtL3VuaXN0LXV0aWwtcmVtb3ZlQDMuMS4xL25vZGVfbW9kdWxlcy91bmlzdC11dGlsLXJlbW92ZS9saWIvaW5kZXguanM/OWEwMSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ3VuaXN0JykuTm9kZX0gTm9kZVxuICogQHR5cGVkZWYge2ltcG9ydCgndW5pc3QnKS5QYXJlbnR9IFBhcmVudFxuICogQHR5cGVkZWYge2ltcG9ydCgndW5pc3QtdXRpbC1pcycpLlRlc3R9IFRlc3RcbiAqXG4gKiBAdHlwZWRlZiBPcHRpb25zXG4gKiAgIENvbmZpZ3VyYXRpb24uXG4gKiBAcHJvcGVydHkge2Jvb2xlYW4gfCBudWxsIHwgdW5kZWZpbmVkfSBbY2FzY2FkZT10cnVlXVxuICogICBXaGV0aGVyIHRvIGRyb3AgcGFyZW50IG5vZGVzIGlmIHRoZXkgaGFkIGNoaWxkcmVuLCBidXQgYWxsIHRoZWlyIGNoaWxkcmVuXG4gKiAgIHdlcmUgZmlsdGVyZWQgb3V0LlxuICovXG5cbmltcG9ydCB7Y29udmVydH0gZnJvbSAndW5pc3QtdXRpbC1pcydcblxuLyoqIEB0eXBlIHtBcnJheTx1bmtub3duPn0gKi9cbmNvbnN0IGVtcHR5ID0gW11cblxuLyoqXG4gKiBDaGFuZ2UgdGhlIGdpdmVuIGB0cmVlYCBieSByZW1vdmluZyBhbGwgbm9kZXMgdGhhdCBwYXNzIGB0ZXN0YC5cbiAqXG4gKiBUaGUgdHJlZSBpcyB3YWxrZWQgaW4gcHJlb3JkZXIgKE5MUiksIHZpc2l0aW5nIHRoZSBub2RlIGl0c2VsZiwgdGhlbiBpdHNcbiAqIGhlYWQsIGV0Yy5cbiAqXG4gKiBAcGFyYW0gdHJlZVxuICogICBUcmVlIHRvIGNoYW5nZS5cbiAqIEBwYXJhbSBvcHRpb25zXG4gKiAgIENvbmZpZ3VyYXRpb24gKG9wdGlvbmFsKS5cbiAqIEBwYXJhbSB0ZXN0XG4gKiAgIGB1bmlzdC11dGlsLWlzYCBjb21wYXRpYmxlIHRlc3QuXG4gKiBAcmV0dXJuc1xuICogICBUaGUgZ2l2ZW4gYHRyZWVgIHdpdGhvdXQgbm9kZXMgdGhhdCBwYXNzIGB0ZXN0YC5cbiAqXG4gKiAgIGBudWxsYCBpcyByZXR1cm5lZCBpZiBgdHJlZWAgaXRzZWxmIGRpZG7igJl0IHBhc3MgdGhlIHRlc3Qgb3IgaXMgY2FzY2FkZWRcbiAqICAgYXdheS5cbiAqL1xuLy8gVG8gZG86IG5leHQgbWFqb3I6IGRvbuKAmXQgcmV0dXJuIGB0cmVlYC5cbmV4cG9ydCBjb25zdCByZW1vdmUgPVxuICAvKipcbiAgICogQHR5cGUgeyhcbiAgICogICg8VHJlZSBleHRlbmRzIE5vZGU+KG5vZGU6IFRyZWUsIG9wdGlvbnM6IE9wdGlvbnMsIHRlc3Q6IFRlc3QpID0+IFRyZWUgfCBudWxsKSAmXG4gICAqICAoPFRyZWUgZXh0ZW5kcyBOb2RlPihub2RlOiBUcmVlLCB0ZXN0OiBUZXN0KSA9PiBUcmVlIHwgbnVsbClcbiAgICogKX1cbiAgICovXG4gIChcbiAgICAvKipcbiAgICAgKiBAcGFyYW0ge05vZGV9IHRyZWVcbiAgICAgKiBAcGFyYW0ge09wdGlvbnMgfCBudWxsIHwgdW5kZWZpbmVkfSBbb3B0aW9uc11cbiAgICAgKiBAcGFyYW0ge1Rlc3QgfCBudWxsIHwgdW5kZWZpbmVkfSBbdGVzdF1cbiAgICAgKiBAcmV0dXJucyB7Tm9kZSB8IG51bGx9XG4gICAgICovXG4gICAgZnVuY3Rpb24gKHRyZWUsIG9wdGlvbnMsIHRlc3QpIHtcbiAgICAgIGNvbnN0IGlzID0gY29udmVydCh0ZXN0IHx8IG9wdGlvbnMpXG4gICAgICBjb25zdCBjYXNjYWRlID1cbiAgICAgICAgIW9wdGlvbnMgfHwgb3B0aW9ucy5jYXNjYWRlID09PSB1bmRlZmluZWQgfHwgb3B0aW9ucy5jYXNjYWRlID09PSBudWxsXG4gICAgICAgICAgPyB0cnVlXG4gICAgICAgICAgOiBvcHRpb25zLmNhc2NhZGVcblxuICAgICAgcmV0dXJuIHByZW9yZGVyKHRyZWUpXG5cbiAgICAgIC8qKlxuICAgICAgICogQ2hlY2sgYW5kIHJlbW92ZSBub2RlcyByZWN1cnNpdmVseSBpbiBwcmVvcmRlci5cbiAgICAgICAqIEZvciBlYWNoIGNvbXBvc2l0ZSBub2RlLCBtb2RpZnkgaXRzIGNoaWxkcmVuIGFycmF5IGluLXBsYWNlLlxuICAgICAgICpcbiAgICAgICAqIEBwYXJhbSB7Tm9kZX0gbm9kZVxuICAgICAgICogQHBhcmFtIHtudW1iZXIgfCBudWxsIHwgdW5kZWZpbmVkfSBbaW5kZXhdXG4gICAgICAgKiBAcGFyYW0ge1BhcmVudCB8IG51bGwgfCB1bmRlZmluZWR9IFtwYXJlbnRdXG4gICAgICAgKiBAcmV0dXJucyB7Tm9kZSB8IG51bGx9XG4gICAgICAgKi9cbiAgICAgIGZ1bmN0aW9uIHByZW9yZGVyKG5vZGUsIGluZGV4LCBwYXJlbnQpIHtcbiAgICAgICAgLyoqIEB0eXBlIHtBcnJheTxOb2RlPn0gKi9cbiAgICAgICAgLy8gQHRzLWV4cGVjdC1lcnJvciBsb29rcyBsaWtlIGEgcGFyZW50LlxuICAgICAgICBjb25zdCBjaGlsZHJlbiA9IG5vZGUuY2hpbGRyZW4gfHwgZW1wdHlcbiAgICAgICAgbGV0IGNoaWxkSW5kZXggPSAtMVxuICAgICAgICBsZXQgcG9zaXRpb24gPSAwXG5cbiAgICAgICAgaWYgKGlzKG5vZGUsIGluZGV4LCBwYXJlbnQpKSB7XG4gICAgICAgICAgcmV0dXJuIG51bGxcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChjaGlsZHJlbi5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgLy8gTW92ZSBhbGwgbGl2aW5nIGNoaWxkcmVuIHRvIHRoZSBiZWdpbm5pbmcgb2YgdGhlIGNoaWxkcmVuIGFycmF5LlxuICAgICAgICAgIHdoaWxlICgrK2NoaWxkSW5kZXggPCBjaGlsZHJlbi5sZW5ndGgpIHtcbiAgICAgICAgICAgIC8vIEB0cy1leHBlY3QtZXJyb3IgbG9va3MgbGlrZSBhIHBhcmVudC5cbiAgICAgICAgICAgIGlmIChwcmVvcmRlcihjaGlsZHJlbltjaGlsZEluZGV4XSwgY2hpbGRJbmRleCwgbm9kZSkpIHtcbiAgICAgICAgICAgICAgY2hpbGRyZW5bcG9zaXRpb24rK10gPSBjaGlsZHJlbltjaGlsZEluZGV4XVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cblxuICAgICAgICAgIC8vIENhc2NhZGUgZGVsZXRlLlxuICAgICAgICAgIGlmIChjYXNjYWRlICYmICFwb3NpdGlvbikge1xuICAgICAgICAgICAgcmV0dXJuIG51bGxcbiAgICAgICAgICB9XG5cbiAgICAgICAgICAvLyBEcm9wIG90aGVyIG5vZGVzLlxuICAgICAgICAgIGNoaWxkcmVuLmxlbmd0aCA9IHBvc2l0aW9uXG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gbm9kZVxuICAgICAgfVxuICAgIH1cbiAgKVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/unist-util-remove@3.1.1/node_modules/unist-util-remove/lib/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/unist-util-remove@3.1.1/node_modules/unist-util-remove/lib/index.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/.pnpm/unist-util-remove@3.1.1/node_modules/unist-util-remove/lib/index.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   remove: () => (/* binding */ remove)\n/* harmony export */ });\n/* harmony import */ var unist_util_is__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! unist-util-is */ \"(rsc)/./node_modules/.pnpm/unist-util-is@5.2.1/node_modules/unist-util-is/lib/index.js\");\n/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n *\n * @typedef Options\n *   Configuration.\n * @property {boolean | null | undefined} [cascade=true]\n *   Whether to drop parent nodes if they had children, but all their children\n *   were filtered out.\n */\n\n\n\n/** @type {Array<unknown>} */\nconst empty = []\n\n/**\n * Change the given `tree` by removing all nodes that pass `test`.\n *\n * The tree is walked in preorder (NLR), visiting the node itself, then its\n * head, etc.\n *\n * @param tree\n *   Tree to change.\n * @param options\n *   Configuration (optional).\n * @param test\n *   `unist-util-is` compatible test.\n * @returns\n *   The given `tree` without nodes that pass `test`.\n *\n *   `null` is returned if `tree` itself didn’t pass the test or is cascaded\n *   away.\n */\n// To do: next major: don’t return `tree`.\nconst remove =\n  /**\n   * @type {(\n   *  (<Tree extends Node>(node: Tree, options: Options, test: Test) => Tree | null) &\n   *  (<Tree extends Node>(node: Tree, test: Test) => Tree | null)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Options | null | undefined} [options]\n     * @param {Test | null | undefined} [test]\n     * @returns {Node | null}\n     */\n    function (tree, options, test) {\n      const is = (0,unist_util_is__WEBPACK_IMPORTED_MODULE_0__.convert)(test || options)\n      const cascade =\n        !options || options.cascade === undefined || options.cascade === null\n          ? true\n          : options.cascade\n\n      return preorder(tree)\n\n      /**\n       * Check and remove nodes recursively in preorder.\n       * For each composite node, modify its children array in-place.\n       *\n       * @param {Node} node\n       * @param {number | null | undefined} [index]\n       * @param {Parent | null | undefined} [parent]\n       * @returns {Node | null}\n       */\n      function preorder(node, index, parent) {\n        /** @type {Array<Node>} */\n        // @ts-expect-error looks like a parent.\n        const children = node.children || empty\n        let childIndex = -1\n        let position = 0\n\n        if (is(node, index, parent)) {\n          return null\n        }\n\n        if (children.length > 0) {\n          // Move all living children to the beginning of the children array.\n          while (++childIndex < children.length) {\n            // @ts-expect-error looks like a parent.\n            if (preorder(children[childIndex], childIndex, node)) {\n              children[position++] = children[childIndex]\n            }\n          }\n\n          // Cascade delete.\n          if (cascade && !position) {\n            return null\n          }\n\n          // Drop other nodes.\n          children.length = position\n        }\n\n        return node\n      }\n    }\n  )\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vdW5pc3QtdXRpbC1yZW1vdmVAMy4xLjEvbm9kZV9tb2R1bGVzL3VuaXN0LXV0aWwtcmVtb3ZlL2xpYi9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0EsYUFBYSxzQkFBc0I7QUFDbkMsYUFBYSx3QkFBd0I7QUFDckMsYUFBYSw4QkFBOEI7QUFDM0M7QUFDQTtBQUNBO0FBQ0EsY0FBYyw0QkFBNEI7QUFDMUM7QUFDQTtBQUNBOztBQUVxQzs7QUFFckMsV0FBVyxnQkFBZ0I7QUFDM0I7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsTUFBTTtBQUNyQixlQUFlLDRCQUE0QjtBQUMzQyxlQUFlLHlCQUF5QjtBQUN4QyxpQkFBaUI7QUFDakI7QUFDQTtBQUNBLGlCQUFpQixzREFBTztBQUN4QjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixNQUFNO0FBQ3ZCLGlCQUFpQiwyQkFBMkI7QUFDNUMsaUJBQWlCLDJCQUEyQjtBQUM1QyxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBLG1CQUFtQixhQUFhO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2NibV8yMDI0Ly4vbm9kZV9tb2R1bGVzLy5wbnBtL3VuaXN0LXV0aWwtcmVtb3ZlQDMuMS4xL25vZGVfbW9kdWxlcy91bmlzdC11dGlsLXJlbW92ZS9saWIvaW5kZXguanM/YjBmYSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ3VuaXN0JykuTm9kZX0gTm9kZVxuICogQHR5cGVkZWYge2ltcG9ydCgndW5pc3QnKS5QYXJlbnR9IFBhcmVudFxuICogQHR5cGVkZWYge2ltcG9ydCgndW5pc3QtdXRpbC1pcycpLlRlc3R9IFRlc3RcbiAqXG4gKiBAdHlwZWRlZiBPcHRpb25zXG4gKiAgIENvbmZpZ3VyYXRpb24uXG4gKiBAcHJvcGVydHkge2Jvb2xlYW4gfCBudWxsIHwgdW5kZWZpbmVkfSBbY2FzY2FkZT10cnVlXVxuICogICBXaGV0aGVyIHRvIGRyb3AgcGFyZW50IG5vZGVzIGlmIHRoZXkgaGFkIGNoaWxkcmVuLCBidXQgYWxsIHRoZWlyIGNoaWxkcmVuXG4gKiAgIHdlcmUgZmlsdGVyZWQgb3V0LlxuICovXG5cbmltcG9ydCB7Y29udmVydH0gZnJvbSAndW5pc3QtdXRpbC1pcydcblxuLyoqIEB0eXBlIHtBcnJheTx1bmtub3duPn0gKi9cbmNvbnN0IGVtcHR5ID0gW11cblxuLyoqXG4gKiBDaGFuZ2UgdGhlIGdpdmVuIGB0cmVlYCBieSByZW1vdmluZyBhbGwgbm9kZXMgdGhhdCBwYXNzIGB0ZXN0YC5cbiAqXG4gKiBUaGUgdHJlZSBpcyB3YWxrZWQgaW4gcHJlb3JkZXIgKE5MUiksIHZpc2l0aW5nIHRoZSBub2RlIGl0c2VsZiwgdGhlbiBpdHNcbiAqIGhlYWQsIGV0Yy5cbiAqXG4gKiBAcGFyYW0gdHJlZVxuICogICBUcmVlIHRvIGNoYW5nZS5cbiAqIEBwYXJhbSBvcHRpb25zXG4gKiAgIENvbmZpZ3VyYXRpb24gKG9wdGlvbmFsKS5cbiAqIEBwYXJhbSB0ZXN0XG4gKiAgIGB1bmlzdC11dGlsLWlzYCBjb21wYXRpYmxlIHRlc3QuXG4gKiBAcmV0dXJuc1xuICogICBUaGUgZ2l2ZW4gYHRyZWVgIHdpdGhvdXQgbm9kZXMgdGhhdCBwYXNzIGB0ZXN0YC5cbiAqXG4gKiAgIGBudWxsYCBpcyByZXR1cm5lZCBpZiBgdHJlZWAgaXRzZWxmIGRpZG7igJl0IHBhc3MgdGhlIHRlc3Qgb3IgaXMgY2FzY2FkZWRcbiAqICAgYXdheS5cbiAqL1xuLy8gVG8gZG86IG5leHQgbWFqb3I6IGRvbuKAmXQgcmV0dXJuIGB0cmVlYC5cbmV4cG9ydCBjb25zdCByZW1vdmUgPVxuICAvKipcbiAgICogQHR5cGUgeyhcbiAgICogICg8VHJlZSBleHRlbmRzIE5vZGU+KG5vZGU6IFRyZWUsIG9wdGlvbnM6IE9wdGlvbnMsIHRlc3Q6IFRlc3QpID0+IFRyZWUgfCBudWxsKSAmXG4gICAqICAoPFRyZWUgZXh0ZW5kcyBOb2RlPihub2RlOiBUcmVlLCB0ZXN0OiBUZXN0KSA9PiBUcmVlIHwgbnVsbClcbiAgICogKX1cbiAgICovXG4gIChcbiAgICAvKipcbiAgICAgKiBAcGFyYW0ge05vZGV9IHRyZWVcbiAgICAgKiBAcGFyYW0ge09wdGlvbnMgfCBudWxsIHwgdW5kZWZpbmVkfSBbb3B0aW9uc11cbiAgICAgKiBAcGFyYW0ge1Rlc3QgfCBudWxsIHwgdW5kZWZpbmVkfSBbdGVzdF1cbiAgICAgKiBAcmV0dXJucyB7Tm9kZSB8IG51bGx9XG4gICAgICovXG4gICAgZnVuY3Rpb24gKHRyZWUsIG9wdGlvbnMsIHRlc3QpIHtcbiAgICAgIGNvbnN0IGlzID0gY29udmVydCh0ZXN0IHx8IG9wdGlvbnMpXG4gICAgICBjb25zdCBjYXNjYWRlID1cbiAgICAgICAgIW9wdGlvbnMgfHwgb3B0aW9ucy5jYXNjYWRlID09PSB1bmRlZmluZWQgfHwgb3B0aW9ucy5jYXNjYWRlID09PSBudWxsXG4gICAgICAgICAgPyB0cnVlXG4gICAgICAgICAgOiBvcHRpb25zLmNhc2NhZGVcblxuICAgICAgcmV0dXJuIHByZW9yZGVyKHRyZWUpXG5cbiAgICAgIC8qKlxuICAgICAgICogQ2hlY2sgYW5kIHJlbW92ZSBub2RlcyByZWN1cnNpdmVseSBpbiBwcmVvcmRlci5cbiAgICAgICAqIEZvciBlYWNoIGNvbXBvc2l0ZSBub2RlLCBtb2RpZnkgaXRzIGNoaWxkcmVuIGFycmF5IGluLXBsYWNlLlxuICAgICAgICpcbiAgICAgICAqIEBwYXJhbSB7Tm9kZX0gbm9kZVxuICAgICAgICogQHBhcmFtIHtudW1iZXIgfCBudWxsIHwgdW5kZWZpbmVkfSBbaW5kZXhdXG4gICAgICAgKiBAcGFyYW0ge1BhcmVudCB8IG51bGwgfCB1bmRlZmluZWR9IFtwYXJlbnRdXG4gICAgICAgKiBAcmV0dXJucyB7Tm9kZSB8IG51bGx9XG4gICAgICAgKi9cbiAgICAgIGZ1bmN0aW9uIHByZW9yZGVyKG5vZGUsIGluZGV4LCBwYXJlbnQpIHtcbiAgICAgICAgLyoqIEB0eXBlIHtBcnJheTxOb2RlPn0gKi9cbiAgICAgICAgLy8gQHRzLWV4cGVjdC1lcnJvciBsb29rcyBsaWtlIGEgcGFyZW50LlxuICAgICAgICBjb25zdCBjaGlsZHJlbiA9IG5vZGUuY2hpbGRyZW4gfHwgZW1wdHlcbiAgICAgICAgbGV0IGNoaWxkSW5kZXggPSAtMVxuICAgICAgICBsZXQgcG9zaXRpb24gPSAwXG5cbiAgICAgICAgaWYgKGlzKG5vZGUsIGluZGV4LCBwYXJlbnQpKSB7XG4gICAgICAgICAgcmV0dXJuIG51bGxcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChjaGlsZHJlbi5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgLy8gTW92ZSBhbGwgbGl2aW5nIGNoaWxkcmVuIHRvIHRoZSBiZWdpbm5pbmcgb2YgdGhlIGNoaWxkcmVuIGFycmF5LlxuICAgICAgICAgIHdoaWxlICgrK2NoaWxkSW5kZXggPCBjaGlsZHJlbi5sZW5ndGgpIHtcbiAgICAgICAgICAgIC8vIEB0cy1leHBlY3QtZXJyb3IgbG9va3MgbGlrZSBhIHBhcmVudC5cbiAgICAgICAgICAgIGlmIChwcmVvcmRlcihjaGlsZHJlbltjaGlsZEluZGV4XSwgY2hpbGRJbmRleCwgbm9kZSkpIHtcbiAgICAgICAgICAgICAgY2hpbGRyZW5bcG9zaXRpb24rK10gPSBjaGlsZHJlbltjaGlsZEluZGV4XVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cblxuICAgICAgICAgIC8vIENhc2NhZGUgZGVsZXRlLlxuICAgICAgICAgIGlmIChjYXNjYWRlICYmICFwb3NpdGlvbikge1xuICAgICAgICAgICAgcmV0dXJuIG51bGxcbiAgICAgICAgICB9XG5cbiAgICAgICAgICAvLyBEcm9wIG90aGVyIG5vZGVzLlxuICAgICAgICAgIGNoaWxkcmVuLmxlbmd0aCA9IHBvc2l0aW9uXG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gbm9kZVxuICAgICAgfVxuICAgIH1cbiAgKVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/unist-util-remove@3.1.1/node_modules/unist-util-remove/lib/index.js\n");

/***/ })

};
;