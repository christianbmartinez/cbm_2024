"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/hast-util-to-estree@3.1.0";
exports.ids = ["vendor-chunks/hast-util-to-estree@3.1.0"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/hast-util-to-estree@3.1.0/node_modules/hast-util-to-estree/lib/handlers/comment.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/hast-util-to-estree@3.1.0/node_modules/hast-util-to-estree/lib/handlers/comment.js ***!
  \***************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   comment: () => (/* binding */ comment)\n/* harmony export */ });\n/**\n * @typedef {import('estree').Comment} Comment\n *\n * @typedef {import('estree-jsx').JSXEmptyExpression} JsxEmptyExpression\n * @typedef {import('estree-jsx').JSXExpressionContainer} JsxExpressionContainer\n *\n * @typedef {import('hast').Comment} HastComment\n *\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn a hast comment into an estree node.\n *\n * @param {HastComment} node\n *   hast node to transform.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {JsxExpressionContainer}\n *   estree expression.\n */\nfunction comment(node, state) {\n  /** @type {Comment} */\n  const result = {type: 'Block', value: node.value}\n  state.inherit(node, result)\n  state.comments.push(result)\n\n  /** @type {JsxEmptyExpression} */\n  const expression = {\n    type: 'JSXEmptyExpression',\n    // @ts-expect-error: `comments` is custom.\n    comments: [Object.assign({}, result, {leading: false, trailing: true})]\n  }\n  state.patch(node, expression)\n\n  /** @type {JsxExpressionContainer} */\n  const container = {type: 'JSXExpressionContainer', expression}\n  state.patch(node, container)\n  return container\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vaGFzdC11dGlsLXRvLWVzdHJlZUAzLjEuMC9ub2RlX21vZHVsZXMvaGFzdC11dGlsLXRvLWVzdHJlZS9saWIvaGFuZGxlcnMvY29tbWVudC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQSxhQUFhLDBCQUEwQjtBQUN2QztBQUNBLGFBQWEseUNBQXlDO0FBQ3RELGFBQWEsNkNBQTZDO0FBQzFEO0FBQ0EsYUFBYSx3QkFBd0I7QUFDckM7QUFDQSxhQUFhLDZCQUE2QjtBQUMxQzs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsYUFBYTtBQUN4QjtBQUNBLFdBQVcsT0FBTztBQUNsQjtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ087QUFDUCxhQUFhLFNBQVM7QUFDdEIsa0JBQWtCO0FBQ2xCO0FBQ0E7O0FBRUEsYUFBYSxvQkFBb0I7QUFDakM7QUFDQTtBQUNBO0FBQ0EsK0JBQStCLFdBQVcsK0JBQStCO0FBQ3pFO0FBQ0E7O0FBRUEsYUFBYSx3QkFBd0I7QUFDckMscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2NibV8yMDI0Ly4vbm9kZV9tb2R1bGVzLy5wbnBtL2hhc3QtdXRpbC10by1lc3RyZWVAMy4xLjAvbm9kZV9tb2R1bGVzL2hhc3QtdXRpbC10by1lc3RyZWUvbGliL2hhbmRsZXJzL2NvbW1lbnQuanM/MGU1OSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ2VzdHJlZScpLkNvbW1lbnR9IENvbW1lbnRcbiAqXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdlc3RyZWUtanN4JykuSlNYRW1wdHlFeHByZXNzaW9ufSBKc3hFbXB0eUV4cHJlc3Npb25cbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ2VzdHJlZS1qc3gnKS5KU1hFeHByZXNzaW9uQ29udGFpbmVyfSBKc3hFeHByZXNzaW9uQ29udGFpbmVyXG4gKlxuICogQHR5cGVkZWYge2ltcG9ydCgnaGFzdCcpLkNvbW1lbnR9IEhhc3RDb21tZW50XG4gKlxuICogQHR5cGVkZWYge2ltcG9ydCgnLi4vc3RhdGUuanMnKS5TdGF0ZX0gU3RhdGVcbiAqL1xuXG4vLyBNYWtlIFZTIENvZGUgc2hvdyByZWZlcmVuY2VzIHRvIHRoZSBhYm92ZSB0eXBlcy5cbicnXG5cbi8qKlxuICogVHVybiBhIGhhc3QgY29tbWVudCBpbnRvIGFuIGVzdHJlZSBub2RlLlxuICpcbiAqIEBwYXJhbSB7SGFzdENvbW1lbnR9IG5vZGVcbiAqICAgaGFzdCBub2RlIHRvIHRyYW5zZm9ybS5cbiAqIEBwYXJhbSB7U3RhdGV9IHN0YXRlXG4gKiAgIEluZm8gcGFzc2VkIGFyb3VuZCBhYm91dCB0aGUgY3VycmVudCBzdGF0ZS5cbiAqIEByZXR1cm5zIHtKc3hFeHByZXNzaW9uQ29udGFpbmVyfVxuICogICBlc3RyZWUgZXhwcmVzc2lvbi5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNvbW1lbnQobm9kZSwgc3RhdGUpIHtcbiAgLyoqIEB0eXBlIHtDb21tZW50fSAqL1xuICBjb25zdCByZXN1bHQgPSB7dHlwZTogJ0Jsb2NrJywgdmFsdWU6IG5vZGUudmFsdWV9XG4gIHN0YXRlLmluaGVyaXQobm9kZSwgcmVzdWx0KVxuICBzdGF0ZS5jb21tZW50cy5wdXNoKHJlc3VsdClcblxuICAvKiogQHR5cGUge0pzeEVtcHR5RXhwcmVzc2lvbn0gKi9cbiAgY29uc3QgZXhwcmVzc2lvbiA9IHtcbiAgICB0eXBlOiAnSlNYRW1wdHlFeHByZXNzaW9uJyxcbiAgICAvLyBAdHMtZXhwZWN0LWVycm9yOiBgY29tbWVudHNgIGlzIGN1c3RvbS5cbiAgICBjb21tZW50czogW09iamVjdC5hc3NpZ24oe30sIHJlc3VsdCwge2xlYWRpbmc6IGZhbHNlLCB0cmFpbGluZzogdHJ1ZX0pXVxuICB9XG4gIHN0YXRlLnBhdGNoKG5vZGUsIGV4cHJlc3Npb24pXG5cbiAgLyoqIEB0eXBlIHtKc3hFeHByZXNzaW9uQ29udGFpbmVyfSAqL1xuICBjb25zdCBjb250YWluZXIgPSB7dHlwZTogJ0pTWEV4cHJlc3Npb25Db250YWluZXInLCBleHByZXNzaW9ufVxuICBzdGF0ZS5wYXRjaChub2RlLCBjb250YWluZXIpXG4gIHJldHVybiBjb250YWluZXJcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/hast-util-to-estree@3.1.0/node_modules/hast-util-to-estree/lib/handlers/comment.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/hast-util-to-estree@3.1.0/node_modules/hast-util-to-estree/lib/handlers/element.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/hast-util-to-estree@3.1.0/node_modules/hast-util-to-estree/lib/handlers/element.js ***!
  \***************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   element: () => (/* binding */ element)\n/* harmony export */ });\n/* harmony import */ var comma_separated_tokens__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! comma-separated-tokens */ \"(ssr)/./node_modules/.pnpm/comma-separated-tokens@2.0.3/node_modules/comma-separated-tokens/index.js\");\n/* harmony import */ var estree_util_is_identifier_name__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! estree-util-is-identifier-name */ \"(ssr)/./node_modules/.pnpm/estree-util-is-identifier-name@3.0.0/node_modules/estree-util-is-identifier-name/lib/index.js\");\n/* harmony import */ var property_information__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! property-information */ \"(ssr)/./node_modules/.pnpm/property-information@6.5.0/node_modules/property-information/index.js\");\n/* harmony import */ var property_information__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! property-information */ \"(ssr)/./node_modules/.pnpm/property-information@6.5.0/node_modules/property-information/lib/find.js\");\n/* harmony import */ var property_information__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! property-information */ \"(ssr)/./node_modules/.pnpm/property-information@6.5.0/node_modules/property-information/lib/hast-to-react.js\");\n/* harmony import */ var space_separated_tokens__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! space-separated-tokens */ \"(ssr)/./node_modules/.pnpm/space-separated-tokens@2.0.2/node_modules/space-separated-tokens/index.js\");\n/* harmony import */ var style_to_object__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! style-to-object */ \"(ssr)/./node_modules/.pnpm/style-to-object@0.4.4/node_modules/style-to-object/index.mjs\");\n/**\n * @typedef {import('estree').Property} Property\n *\n * @typedef {import('estree-jsx').JSXAttribute} JsxAttribute\n * @typedef {import('estree-jsx').JSXElement} JsxElement\n * @typedef {import('estree-jsx').JSXSpreadAttribute} JsxSpreadAttribute\n *\n * @typedef {import('hast').Element} HastElement\n *\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * @typedef {Record<string, string>} Style\n */\n\n\n\n\n\n\n\nconst own = {}.hasOwnProperty\nconst cap = /[A-Z]/g\nconst dashSomething = /-([a-z])/g\n\nconst tableCellElement = new Set(['td', 'th'])\n\n/**\n * Turn a hast element into an estree node.\n *\n * @param {HastElement} node\n *   hast node to transform.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {JsxElement}\n *   estree expression.\n */\n// eslint-disable-next-line complexity\nfunction element(node, state) {\n  const parentSchema = state.schema\n  let schema = parentSchema\n  const props = node.properties || {}\n\n  if (parentSchema.space === 'html' && node.tagName.toLowerCase() === 'svg') {\n    schema = property_information__WEBPACK_IMPORTED_MODULE_1__.svg\n    state.schema = schema\n  }\n\n  const children = state.all(node)\n\n  /** @type {Array<JsxAttribute | JsxSpreadAttribute>} */\n  const attributes = []\n  /** @type {string} */\n  let prop\n  /** @type {string | undefined} */\n  let alignValue\n  /** @type {Array<Property> | undefined} */\n  let styleProperties\n\n  for (prop in props) {\n    if (own.call(props, prop)) {\n      let value = props[prop]\n      const info = (0,property_information__WEBPACK_IMPORTED_MODULE_2__.find)(schema, prop)\n      /** @type {JsxAttribute['value']} */\n      let attributeValue\n\n      // Ignore nullish and `NaN` values.\n      // Ignore `false` and falsey known booleans.\n      if (\n        value === null ||\n        value === undefined ||\n        value === false ||\n        (typeof value === 'number' && Number.isNaN(value)) ||\n        (!value && info.boolean)\n      ) {\n        continue\n      }\n\n      prop =\n        state.elementAttributeNameCase === 'react' && info.space\n          ? property_information__WEBPACK_IMPORTED_MODULE_3__.hastToReact[info.property] || info.property\n          : info.attribute\n\n      if (Array.isArray(value)) {\n        // Accept `array`.\n        // Most props are space-separated.\n        value = info.commaSeparated ? (0,comma_separated_tokens__WEBPACK_IMPORTED_MODULE_4__.stringify)(value) : (0,space_separated_tokens__WEBPACK_IMPORTED_MODULE_5__.stringify)(value)\n      }\n\n      if (prop === 'style') {\n        let styleObject =\n          typeof value === 'object'\n            ? value\n            : parseStyle(String(value), node.tagName)\n\n        if (state.stylePropertyNameCase === 'css') {\n          styleObject = transformStylesToCssCasing(styleObject)\n        }\n\n        /** @type {Array<Property>} */\n        const cssProperties = []\n        /** @type {string} */\n        let cssProp\n\n        for (cssProp in styleObject) {\n          // eslint-disable-next-line max-depth\n          if (own.call(styleObject, cssProp)) {\n            cssProperties.push({\n              type: 'Property',\n              method: false,\n              shorthand: false,\n              computed: false,\n              key: (0,estree_util_is_identifier_name__WEBPACK_IMPORTED_MODULE_6__.name)(cssProp)\n                ? {type: 'Identifier', name: cssProp}\n                : {type: 'Literal', value: cssProp},\n              value: {type: 'Literal', value: String(styleObject[cssProp])},\n              kind: 'init'\n            })\n          }\n        }\n\n        styleProperties = cssProperties\n        attributeValue = {\n          type: 'JSXExpressionContainer',\n          expression: {type: 'ObjectExpression', properties: cssProperties}\n        }\n      } else if (value === true) {\n        attributeValue = null\n      } else if (\n        state.tableCellAlignToStyle &&\n        tableCellElement.has(node.tagName) &&\n        prop === 'align'\n      ) {\n        alignValue = String(value)\n        continue\n      } else {\n        attributeValue = {type: 'Literal', value: String(value)}\n      }\n\n      if ((0,estree_util_is_identifier_name__WEBPACK_IMPORTED_MODULE_6__.name)(prop, {jsx: true})) {\n        attributes.push({\n          type: 'JSXAttribute',\n          name: {type: 'JSXIdentifier', name: prop},\n          value: attributeValue\n        })\n      } else {\n        attributes.push({\n          type: 'JSXSpreadAttribute',\n          argument: {\n            type: 'ObjectExpression',\n            properties: [\n              {\n                type: 'Property',\n                method: false,\n                shorthand: false,\n                computed: false,\n                key: {type: 'Literal', value: String(prop)},\n                // @ts-expect-error No need to worry about `style` (which has a\n                // `JSXExpressionContainer` value) because that’s a valid identifier.\n                value: attributeValue || {type: 'Literal', value: true},\n                kind: 'init'\n              }\n            ]\n          }\n        })\n      }\n    }\n  }\n\n  if (alignValue !== undefined) {\n    if (!styleProperties) {\n      styleProperties = []\n      attributes.push({\n        type: 'JSXAttribute',\n        name: {type: 'JSXIdentifier', name: 'style'},\n        value: {\n          type: 'JSXExpressionContainer',\n          expression: {type: 'ObjectExpression', properties: styleProperties}\n        }\n      })\n    }\n\n    const cssProp =\n      state.stylePropertyNameCase === 'css'\n        ? transformStyleToCssCasing('textAlign')\n        : 'textAlign'\n\n    styleProperties.push({\n      type: 'Property',\n      method: false,\n      shorthand: false,\n      computed: false,\n      key: (0,estree_util_is_identifier_name__WEBPACK_IMPORTED_MODULE_6__.name)(cssProp)\n        ? {type: 'Identifier', name: cssProp}\n        : {type: 'Literal', value: cssProp},\n      value: {type: 'Literal', value: alignValue},\n      kind: 'init'\n    })\n  }\n\n  // Restore parent schema.\n  state.schema = parentSchema\n\n  /** @type {JsxElement} */\n  const result = {\n    type: 'JSXElement',\n    openingElement: {\n      type: 'JSXOpeningElement',\n      attributes,\n      name: state.createJsxElementName(node.tagName),\n      selfClosing: children.length === 0\n    },\n    closingElement:\n      children.length > 0\n        ? {\n            type: 'JSXClosingElement',\n            name: state.createJsxElementName(node.tagName)\n          }\n        : null,\n    children\n  }\n  state.inherit(node, result)\n  return result\n}\n\n/**\n * Parse CSS rules as a declaration.\n *\n * @param {string} value\n *   CSS text.\n * @param {string} tagName\n *   Element name.\n * @returns {Style}\n *   Props.\n */\nfunction parseStyle(value, tagName) {\n  /** @type {Style} */\n  const result = {}\n\n  try {\n    ;(0,style_to_object__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(value, iterator)\n  } catch (error) {\n    const cause = /** @type {Error} */ (error)\n    const exception = new Error(\n      'Could not parse `style` attribute on `' + tagName + '`',\n      {cause}\n    )\n    throw exception\n  }\n\n  return result\n\n  /**\n   * Add `name`, as a CSS prop, to `result`.\n   *\n   * @param {string} name\n   *   Key.\n   * @param {string} value\n   *   Value.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function iterator(name, value) {\n    let key = name\n\n    if (key.slice(0, 2) !== '--') {\n      // See: <https://alanhogan.com/code/vendor-prefixed-css-property-names-in-javascript>\n      if (key.slice(0, 4) === '-ms-') key = 'ms-' + key.slice(4)\n      key = key.replace(dashSomething, toCamel)\n    }\n\n    result[key] = value\n  }\n}\n\n/**\n * Transform a DOM casing style object to a CSS casing style object.\n *\n * @param {Style} domCasing\n * @returns {Style}\n */\nfunction transformStylesToCssCasing(domCasing) {\n  /** @type {Style} */\n  const cssCasing = {}\n  /** @type {string} */\n  let from\n\n  for (from in domCasing) {\n    if (own.call(domCasing, from)) {\n      cssCasing[transformStyleToCssCasing(from)] = domCasing[from]\n    }\n  }\n\n  return cssCasing\n}\n\n/**\n * Transform a DOM casing style prop to a CSS casing style prop.\n *\n * @param {string} from\n * @returns {string}\n */\nfunction transformStyleToCssCasing(from) {\n  let to = from.replace(cap, toDash)\n  // Handle `ms-xxx` -> `-ms-xxx`.\n  if (to.slice(0, 3) === 'ms-') to = '-' + to\n  return to\n}\n\n/**\n * Make `$1` capitalized.\n *\n * @param {string} _\n *   Whatever.\n * @param {string} $1\n *   Single ASCII alphabetical.\n * @returns {string}\n *   Capitalized `$1`.\n */\nfunction toCamel(_, $1) {\n  return $1.toUpperCase()\n}\n\n/**\n * Make `$0` dash cased.\n *\n * @param {string} $0\n *   Capitalized ASCII leter.\n * @returns {string}\n *   Dash and lower letter.\n */\nfunction toDash($0) {\n  return '-' + $0.toLowerCase()\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/hast-util-to-estree@3.1.0/node_modules/hast-util-to-estree/lib/handlers/element.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/hast-util-to-estree@3.1.0/node_modules/hast-util-to-estree/lib/handlers/index.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/hast-util-to-estree@3.1.0/node_modules/hast-util-to-estree/lib/handlers/index.js ***!
  \*************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   handlers: () => (/* binding */ handlers)\n/* harmony export */ });\n/* harmony import */ var _comment_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./comment.js */ \"(ssr)/./node_modules/.pnpm/hast-util-to-estree@3.1.0/node_modules/hast-util-to-estree/lib/handlers/comment.js\");\n/* harmony import */ var _element_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./element.js */ \"(ssr)/./node_modules/.pnpm/hast-util-to-estree@3.1.0/node_modules/hast-util-to-estree/lib/handlers/element.js\");\n/* harmony import */ var _mdx_expression_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./mdx-expression.js */ \"(ssr)/./node_modules/.pnpm/hast-util-to-estree@3.1.0/node_modules/hast-util-to-estree/lib/handlers/mdx-expression.js\");\n/* harmony import */ var _mdx_jsx_element_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./mdx-jsx-element.js */ \"(ssr)/./node_modules/.pnpm/hast-util-to-estree@3.1.0/node_modules/hast-util-to-estree/lib/handlers/mdx-jsx-element.js\");\n/* harmony import */ var _mdxjs_esm_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./mdxjs-esm.js */ \"(ssr)/./node_modules/.pnpm/hast-util-to-estree@3.1.0/node_modules/hast-util-to-estree/lib/handlers/mdxjs-esm.js\");\n/* harmony import */ var _root_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./root.js */ \"(ssr)/./node_modules/.pnpm/hast-util-to-estree@3.1.0/node_modules/hast-util-to-estree/lib/handlers/root.js\");\n/* harmony import */ var _text_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./text.js */ \"(ssr)/./node_modules/.pnpm/hast-util-to-estree@3.1.0/node_modules/hast-util-to-estree/lib/handlers/text.js\");\n\n\n\n\n\n\n\n\nconst handlers = {\n  comment: _comment_js__WEBPACK_IMPORTED_MODULE_0__.comment,\n  doctype: ignore,\n  element: _element_js__WEBPACK_IMPORTED_MODULE_1__.element,\n  mdxFlowExpression: _mdx_expression_js__WEBPACK_IMPORTED_MODULE_2__.mdxExpression,\n  mdxJsxFlowElement: _mdx_jsx_element_js__WEBPACK_IMPORTED_MODULE_3__.mdxJsxElement,\n  mdxJsxTextElement: _mdx_jsx_element_js__WEBPACK_IMPORTED_MODULE_3__.mdxJsxElement,\n  mdxTextExpression: _mdx_expression_js__WEBPACK_IMPORTED_MODULE_2__.mdxExpression,\n  mdxjsEsm: _mdxjs_esm_js__WEBPACK_IMPORTED_MODULE_4__.mdxjsEsm,\n  root: _root_js__WEBPACK_IMPORTED_MODULE_5__.root,\n  text: _text_js__WEBPACK_IMPORTED_MODULE_6__.text\n}\n\n/**\n * Handle a node that is ignored.\n *\n * @returns {undefined}\n *   Nothing.\n */\nfunction ignore() {}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vaGFzdC11dGlsLXRvLWVzdHJlZUAzLjEuMC9ub2RlX21vZHVsZXMvaGFzdC11dGlsLXRvLWVzdHJlZS9saWIvaGFuZGxlcnMvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBb0M7QUFDQTtBQUNhO0FBQ0M7QUFDWDtBQUNUO0FBQ0E7O0FBRXZCO0FBQ1AsU0FBUztBQUNUO0FBQ0EsU0FBUztBQUNULHFCQUFxQiw2REFBYTtBQUNsQyxxQkFBcUIsOERBQWE7QUFDbEMscUJBQXFCLDhEQUFhO0FBQ2xDLHFCQUFxQiw2REFBYTtBQUNsQyxVQUFVO0FBQ1YsTUFBTTtBQUNOLE1BQU07QUFDTjs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2JtXzIwMjQvLi9ub2RlX21vZHVsZXMvLnBucG0vaGFzdC11dGlsLXRvLWVzdHJlZUAzLjEuMC9ub2RlX21vZHVsZXMvaGFzdC11dGlsLXRvLWVzdHJlZS9saWIvaGFuZGxlcnMvaW5kZXguanM/MzYyNCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge2NvbW1lbnR9IGZyb20gJy4vY29tbWVudC5qcydcbmltcG9ydCB7ZWxlbWVudH0gZnJvbSAnLi9lbGVtZW50LmpzJ1xuaW1wb3J0IHttZHhFeHByZXNzaW9ufSBmcm9tICcuL21keC1leHByZXNzaW9uLmpzJ1xuaW1wb3J0IHttZHhKc3hFbGVtZW50fSBmcm9tICcuL21keC1qc3gtZWxlbWVudC5qcydcbmltcG9ydCB7bWR4anNFc219IGZyb20gJy4vbWR4anMtZXNtLmpzJ1xuaW1wb3J0IHtyb290fSBmcm9tICcuL3Jvb3QuanMnXG5pbXBvcnQge3RleHR9IGZyb20gJy4vdGV4dC5qcydcblxuZXhwb3J0IGNvbnN0IGhhbmRsZXJzID0ge1xuICBjb21tZW50LFxuICBkb2N0eXBlOiBpZ25vcmUsXG4gIGVsZW1lbnQsXG4gIG1keEZsb3dFeHByZXNzaW9uOiBtZHhFeHByZXNzaW9uLFxuICBtZHhKc3hGbG93RWxlbWVudDogbWR4SnN4RWxlbWVudCxcbiAgbWR4SnN4VGV4dEVsZW1lbnQ6IG1keEpzeEVsZW1lbnQsXG4gIG1keFRleHRFeHByZXNzaW9uOiBtZHhFeHByZXNzaW9uLFxuICBtZHhqc0VzbSxcbiAgcm9vdCxcbiAgdGV4dFxufVxuXG4vKipcbiAqIEhhbmRsZSBhIG5vZGUgdGhhdCBpcyBpZ25vcmVkLlxuICpcbiAqIEByZXR1cm5zIHt1bmRlZmluZWR9XG4gKiAgIE5vdGhpbmcuXG4gKi9cbmZ1bmN0aW9uIGlnbm9yZSgpIHt9XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/hast-util-to-estree@3.1.0/node_modules/hast-util-to-estree/lib/handlers/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/hast-util-to-estree@3.1.0/node_modules/hast-util-to-estree/lib/handlers/mdx-expression.js":
/*!**********************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/hast-util-to-estree@3.1.0/node_modules/hast-util-to-estree/lib/handlers/mdx-expression.js ***!
  \**********************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   mdxExpression: () => (/* binding */ mdxExpression)\n/* harmony export */ });\n/* harmony import */ var estree_util_attach_comments__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! estree-util-attach-comments */ \"(ssr)/./node_modules/.pnpm/estree-util-attach-comments@3.0.0/node_modules/estree-util-attach-comments/lib/index.js\");\n/**\n * @typedef {import('estree').Expression} Expression\n *\n * @typedef {import('estree-jsx').JSXEmptyExpression} JsxEmptyExpression\n * @typedef {import('estree-jsx').JSXExpressionContainer} JsxExpressionContainer\n *\n * @typedef {import('mdast-util-mdx-expression').MdxFlowExpressionHast} MdxFlowExpression\n * @typedef {import('mdast-util-mdx-expression').MdxTextExpressionHast} MdxTextExpression\n *\n * @typedef {import('../state.js').State} State\n */\n\n\n\n/**\n * Turn an MDX expression node into an estree node.\n *\n * @param {MdxFlowExpression | MdxTextExpression} node\n *   hast node to transform.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {JsxExpressionContainer}\n *   estree expression.\n */\nfunction mdxExpression(node, state) {\n  const estree = node.data && node.data.estree\n  const comments = (estree && estree.comments) || []\n  /** @type {Expression | JsxEmptyExpression | undefined} */\n  let expression\n\n  if (estree) {\n    state.comments.push(...comments)\n    ;(0,estree_util_attach_comments__WEBPACK_IMPORTED_MODULE_0__.attachComments)(estree, estree.comments)\n    expression =\n      (estree.body[0] &&\n        estree.body[0].type === 'ExpressionStatement' &&\n        estree.body[0].expression) ||\n      undefined\n  }\n\n  if (!expression) {\n    expression = {type: 'JSXEmptyExpression'}\n    state.patch(node, expression)\n  }\n\n  /** @type {JsxExpressionContainer} */\n  const result = {type: 'JSXExpressionContainer', expression}\n  state.inherit(node, result)\n  return result\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vaGFzdC11dGlsLXRvLWVzdHJlZUAzLjEuMC9ub2RlX21vZHVsZXMvaGFzdC11dGlsLXRvLWVzdHJlZS9saWIvaGFuZGxlcnMvbWR4LWV4cHJlc3Npb24uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBLGFBQWEsNkJBQTZCO0FBQzFDO0FBQ0EsYUFBYSx5Q0FBeUM7QUFDdEQsYUFBYSw2Q0FBNkM7QUFDMUQ7QUFDQSxhQUFhLDJEQUEyRDtBQUN4RSxhQUFhLDJEQUEyRDtBQUN4RTtBQUNBLGFBQWEsNkJBQTZCO0FBQzFDOztBQUUwRDs7QUFFMUQ7QUFDQTtBQUNBO0FBQ0EsV0FBVyx1Q0FBdUM7QUFDbEQ7QUFDQSxXQUFXLE9BQU87QUFDbEI7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBLGFBQWEsNkNBQTZDO0FBQzFEOztBQUVBO0FBQ0E7QUFDQSxJQUFJLDRFQUFjO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGtCQUFrQjtBQUNsQjtBQUNBOztBQUVBLGFBQWEsd0JBQXdCO0FBQ3JDLGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jYm1fMjAyNC8uL25vZGVfbW9kdWxlcy8ucG5wbS9oYXN0LXV0aWwtdG8tZXN0cmVlQDMuMS4wL25vZGVfbW9kdWxlcy9oYXN0LXV0aWwtdG8tZXN0cmVlL2xpYi9oYW5kbGVycy9tZHgtZXhwcmVzc2lvbi5qcz8zNzkwIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQHR5cGVkZWYge2ltcG9ydCgnZXN0cmVlJykuRXhwcmVzc2lvbn0gRXhwcmVzc2lvblxuICpcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ2VzdHJlZS1qc3gnKS5KU1hFbXB0eUV4cHJlc3Npb259IEpzeEVtcHR5RXhwcmVzc2lvblxuICogQHR5cGVkZWYge2ltcG9ydCgnZXN0cmVlLWpzeCcpLkpTWEV4cHJlc3Npb25Db250YWluZXJ9IEpzeEV4cHJlc3Npb25Db250YWluZXJcbiAqXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdtZGFzdC11dGlsLW1keC1leHByZXNzaW9uJykuTWR4Rmxvd0V4cHJlc3Npb25IYXN0fSBNZHhGbG93RXhwcmVzc2lvblxuICogQHR5cGVkZWYge2ltcG9ydCgnbWRhc3QtdXRpbC1tZHgtZXhwcmVzc2lvbicpLk1keFRleHRFeHByZXNzaW9uSGFzdH0gTWR4VGV4dEV4cHJlc3Npb25cbiAqXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCcuLi9zdGF0ZS5qcycpLlN0YXRlfSBTdGF0ZVxuICovXG5cbmltcG9ydCB7YXR0YWNoQ29tbWVudHN9IGZyb20gJ2VzdHJlZS11dGlsLWF0dGFjaC1jb21tZW50cydcblxuLyoqXG4gKiBUdXJuIGFuIE1EWCBleHByZXNzaW9uIG5vZGUgaW50byBhbiBlc3RyZWUgbm9kZS5cbiAqXG4gKiBAcGFyYW0ge01keEZsb3dFeHByZXNzaW9uIHwgTWR4VGV4dEV4cHJlc3Npb259IG5vZGVcbiAqICAgaGFzdCBub2RlIHRvIHRyYW5zZm9ybS5cbiAqIEBwYXJhbSB7U3RhdGV9IHN0YXRlXG4gKiAgIEluZm8gcGFzc2VkIGFyb3VuZCBhYm91dCB0aGUgY3VycmVudCBzdGF0ZS5cbiAqIEByZXR1cm5zIHtKc3hFeHByZXNzaW9uQ29udGFpbmVyfVxuICogICBlc3RyZWUgZXhwcmVzc2lvbi5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIG1keEV4cHJlc3Npb24obm9kZSwgc3RhdGUpIHtcbiAgY29uc3QgZXN0cmVlID0gbm9kZS5kYXRhICYmIG5vZGUuZGF0YS5lc3RyZWVcbiAgY29uc3QgY29tbWVudHMgPSAoZXN0cmVlICYmIGVzdHJlZS5jb21tZW50cykgfHwgW11cbiAgLyoqIEB0eXBlIHtFeHByZXNzaW9uIHwgSnN4RW1wdHlFeHByZXNzaW9uIHwgdW5kZWZpbmVkfSAqL1xuICBsZXQgZXhwcmVzc2lvblxuXG4gIGlmIChlc3RyZWUpIHtcbiAgICBzdGF0ZS5jb21tZW50cy5wdXNoKC4uLmNvbW1lbnRzKVxuICAgIGF0dGFjaENvbW1lbnRzKGVzdHJlZSwgZXN0cmVlLmNvbW1lbnRzKVxuICAgIGV4cHJlc3Npb24gPVxuICAgICAgKGVzdHJlZS5ib2R5WzBdICYmXG4gICAgICAgIGVzdHJlZS5ib2R5WzBdLnR5cGUgPT09ICdFeHByZXNzaW9uU3RhdGVtZW50JyAmJlxuICAgICAgICBlc3RyZWUuYm9keVswXS5leHByZXNzaW9uKSB8fFxuICAgICAgdW5kZWZpbmVkXG4gIH1cblxuICBpZiAoIWV4cHJlc3Npb24pIHtcbiAgICBleHByZXNzaW9uID0ge3R5cGU6ICdKU1hFbXB0eUV4cHJlc3Npb24nfVxuICAgIHN0YXRlLnBhdGNoKG5vZGUsIGV4cHJlc3Npb24pXG4gIH1cblxuICAvKiogQHR5cGUge0pzeEV4cHJlc3Npb25Db250YWluZXJ9ICovXG4gIGNvbnN0IHJlc3VsdCA9IHt0eXBlOiAnSlNYRXhwcmVzc2lvbkNvbnRhaW5lcicsIGV4cHJlc3Npb259XG4gIHN0YXRlLmluaGVyaXQobm9kZSwgcmVzdWx0KVxuICByZXR1cm4gcmVzdWx0XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/hast-util-to-estree@3.1.0/node_modules/hast-util-to-estree/lib/handlers/mdx-expression.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/hast-util-to-estree@3.1.0/node_modules/hast-util-to-estree/lib/handlers/mdx-jsx-element.js":
/*!***********************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/hast-util-to-estree@3.1.0/node_modules/hast-util-to-estree/lib/handlers/mdx-jsx-element.js ***!
  \***********************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   mdxJsxElement: () => (/* binding */ mdxJsxElement)\n/* harmony export */ });\n/* harmony import */ var estree_util_attach_comments__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! estree-util-attach-comments */ \"(ssr)/./node_modules/.pnpm/estree-util-attach-comments@3.0.0/node_modules/estree-util-attach-comments/lib/index.js\");\n/* harmony import */ var property_information__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! property-information */ \"(ssr)/./node_modules/.pnpm/property-information@6.5.0/node_modules/property-information/index.js\");\n/**\n * @typedef {import('estree').Expression} Expression\n *\n * @typedef {import('estree-jsx').JSXAttribute} JsxAttribute\n * @typedef {import('estree-jsx').JSXElement} JsxElement\n * @typedef {import('estree-jsx').JSXFragment} JsxFragment\n * @typedef {import('estree-jsx').JSXSpreadAttribute} JsxSpreadAttribute\n *\n * @typedef {import('mdast-util-mdx-jsx').MdxJsxFlowElementHast} MdxJsxFlowElement\n * @typedef {import('mdast-util-mdx-jsx').MdxJsxTextElementHast} MdxJsxTextElement\n *\n * @typedef {import('../state.js').State} State\n */\n\n\n\n\n/**\n * Turn an MDX JSX element node into an estree node.\n *\n * @param {MdxJsxFlowElement | MdxJsxTextElement} node\n *   hast node to transform.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {JsxElement | JsxFragment}\n *   JSX element or fragment.\n */\n// eslint-disable-next-line complexity\nfunction mdxJsxElement(node, state) {\n  const parentSchema = state.schema\n  let schema = parentSchema\n  const attrs = node.attributes || []\n  let index = -1\n\n  if (\n    node.name &&\n    parentSchema.space === 'html' &&\n    node.name.toLowerCase() === 'svg'\n  ) {\n    schema = property_information__WEBPACK_IMPORTED_MODULE_0__.svg\n    state.schema = schema\n  }\n\n  const children = state.all(node)\n  /** @type {Array<JsxAttribute | JsxSpreadAttribute>} */\n  const attributes = []\n\n  while (++index < attrs.length) {\n    const attr = attrs[index]\n    const value = attr.value\n    /** @type {JsxAttribute['value']} */\n    let attributeValue\n\n    if (attr.type === 'mdxJsxAttribute') {\n      if (value === null || value === undefined) {\n        attributeValue = null\n        // Empty.\n      }\n      // `MdxJsxAttributeValueExpression`.\n      else if (typeof value === 'object') {\n        const estree = value.data && value.data.estree\n        const comments = (estree && estree.comments) || []\n        /** @type {Expression | undefined} */\n        let expression\n\n        if (estree) {\n          state.comments.push(...comments)\n          ;(0,estree_util_attach_comments__WEBPACK_IMPORTED_MODULE_1__.attachComments)(estree, estree.comments)\n          // Should exist.\n          /* c8 ignore next 5 */\n          expression =\n            (estree.body[0] &&\n              estree.body[0].type === 'ExpressionStatement' &&\n              estree.body[0].expression) ||\n            undefined\n        }\n\n        attributeValue = {\n          type: 'JSXExpressionContainer',\n          expression: expression || {type: 'JSXEmptyExpression'}\n        }\n        state.inherit(value, attributeValue)\n      }\n      // Anything else.\n      else {\n        attributeValue = {type: 'Literal', value: String(value)}\n      }\n\n      /** @type {JsxAttribute} */\n      const attribute = {\n        type: 'JSXAttribute',\n        name: state.createJsxAttributeName(attr.name),\n        value: attributeValue\n      }\n\n      state.inherit(attr, attribute)\n      attributes.push(attribute)\n    }\n    // MdxJsxExpressionAttribute.\n    else {\n      const estree = attr.data && attr.data.estree\n      const comments = (estree && estree.comments) || []\n      /** @type {JsxSpreadAttribute['argument'] | undefined} */\n      let argumentValue\n\n      if (estree) {\n        state.comments.push(...comments)\n        ;(0,estree_util_attach_comments__WEBPACK_IMPORTED_MODULE_1__.attachComments)(estree, estree.comments)\n        // Should exist.\n        /* c8 ignore next 10 */\n        argumentValue =\n          (estree.body[0] &&\n            estree.body[0].type === 'ExpressionStatement' &&\n            estree.body[0].expression &&\n            estree.body[0].expression.type === 'ObjectExpression' &&\n            estree.body[0].expression.properties &&\n            estree.body[0].expression.properties[0] &&\n            estree.body[0].expression.properties[0].type === 'SpreadElement' &&\n            estree.body[0].expression.properties[0].argument) ||\n          undefined\n      }\n\n      /** @type {JsxSpreadAttribute} */\n      const attribute = {\n        type: 'JSXSpreadAttribute',\n        argument: argumentValue || {type: 'ObjectExpression', properties: []}\n      }\n      state.inherit(attr, attribute)\n      attributes.push(attribute)\n    }\n  }\n\n  // Restore parent schema.\n  state.schema = parentSchema\n\n  /** @type {JsxElement | JsxFragment} */\n  const result = node.name\n    ? {\n        type: 'JSXElement',\n        openingElement: {\n          type: 'JSXOpeningElement',\n          attributes,\n          name: state.createJsxElementName(node.name),\n          selfClosing: children.length === 0\n        },\n        closingElement:\n          children.length > 0\n            ? {\n                type: 'JSXClosingElement',\n                name: state.createJsxElementName(node.name)\n              }\n            : null,\n        children\n      }\n    : {\n        type: 'JSXFragment',\n        openingFragment: {type: 'JSXOpeningFragment'},\n        closingFragment: {type: 'JSXClosingFragment'},\n        children\n      }\n\n  state.inherit(node, result)\n  return result\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vaGFzdC11dGlsLXRvLWVzdHJlZUAzLjEuMC9ub2RlX21vZHVsZXMvaGFzdC11dGlsLXRvLWVzdHJlZS9saWIvaGFuZGxlcnMvbWR4LWpzeC1lbGVtZW50LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ0EsYUFBYSw2QkFBNkI7QUFDMUM7QUFDQSxhQUFhLG1DQUFtQztBQUNoRCxhQUFhLGlDQUFpQztBQUM5QyxhQUFhLGtDQUFrQztBQUMvQyxhQUFhLHlDQUF5QztBQUN0RDtBQUNBLGFBQWEsb0RBQW9EO0FBQ2pFLGFBQWEsb0RBQW9EO0FBQ2pFO0FBQ0EsYUFBYSw2QkFBNkI7QUFDMUM7O0FBRTBEO0FBQ2xCOztBQUV4QztBQUNBO0FBQ0E7QUFDQSxXQUFXLHVDQUF1QztBQUNsRDtBQUNBLFdBQVcsT0FBTztBQUNsQjtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLHFEQUFHO0FBQ2hCO0FBQ0E7O0FBRUE7QUFDQSxhQUFhLDBDQUEwQztBQUN2RDs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLHVCQUF1QjtBQUN0Qzs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsd0JBQXdCO0FBQzNDOztBQUVBO0FBQ0E7QUFDQSxVQUFVLDRFQUFjO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLHFDQUFxQztBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCO0FBQzFCOztBQUVBLGlCQUFpQixjQUFjO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsNENBQTRDO0FBQzdEOztBQUVBO0FBQ0E7QUFDQSxRQUFRLDRFQUFjO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGlCQUFpQixvQkFBb0I7QUFDckM7QUFDQTtBQUNBLG9DQUFvQztBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUEsYUFBYSwwQkFBMEI7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLDJCQUEyQjtBQUNyRCwwQkFBMEIsMkJBQTJCO0FBQ3JEO0FBQ0E7O0FBRUE7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2JtXzIwMjQvLi9ub2RlX21vZHVsZXMvLnBucG0vaGFzdC11dGlsLXRvLWVzdHJlZUAzLjEuMC9ub2RlX21vZHVsZXMvaGFzdC11dGlsLXRvLWVzdHJlZS9saWIvaGFuZGxlcnMvbWR4LWpzeC1lbGVtZW50LmpzP2ZkODkiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdlc3RyZWUnKS5FeHByZXNzaW9ufSBFeHByZXNzaW9uXG4gKlxuICogQHR5cGVkZWYge2ltcG9ydCgnZXN0cmVlLWpzeCcpLkpTWEF0dHJpYnV0ZX0gSnN4QXR0cmlidXRlXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdlc3RyZWUtanN4JykuSlNYRWxlbWVudH0gSnN4RWxlbWVudFxuICogQHR5cGVkZWYge2ltcG9ydCgnZXN0cmVlLWpzeCcpLkpTWEZyYWdtZW50fSBKc3hGcmFnbWVudFxuICogQHR5cGVkZWYge2ltcG9ydCgnZXN0cmVlLWpzeCcpLkpTWFNwcmVhZEF0dHJpYnV0ZX0gSnN4U3ByZWFkQXR0cmlidXRlXG4gKlxuICogQHR5cGVkZWYge2ltcG9ydCgnbWRhc3QtdXRpbC1tZHgtanN4JykuTWR4SnN4Rmxvd0VsZW1lbnRIYXN0fSBNZHhKc3hGbG93RWxlbWVudFxuICogQHR5cGVkZWYge2ltcG9ydCgnbWRhc3QtdXRpbC1tZHgtanN4JykuTWR4SnN4VGV4dEVsZW1lbnRIYXN0fSBNZHhKc3hUZXh0RWxlbWVudFxuICpcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJy4uL3N0YXRlLmpzJykuU3RhdGV9IFN0YXRlXG4gKi9cblxuaW1wb3J0IHthdHRhY2hDb21tZW50c30gZnJvbSAnZXN0cmVlLXV0aWwtYXR0YWNoLWNvbW1lbnRzJ1xuaW1wb3J0IHtzdmd9IGZyb20gJ3Byb3BlcnR5LWluZm9ybWF0aW9uJ1xuXG4vKipcbiAqIFR1cm4gYW4gTURYIEpTWCBlbGVtZW50IG5vZGUgaW50byBhbiBlc3RyZWUgbm9kZS5cbiAqXG4gKiBAcGFyYW0ge01keEpzeEZsb3dFbGVtZW50IHwgTWR4SnN4VGV4dEVsZW1lbnR9IG5vZGVcbiAqICAgaGFzdCBub2RlIHRvIHRyYW5zZm9ybS5cbiAqIEBwYXJhbSB7U3RhdGV9IHN0YXRlXG4gKiAgIEluZm8gcGFzc2VkIGFyb3VuZCBhYm91dCB0aGUgY3VycmVudCBzdGF0ZS5cbiAqIEByZXR1cm5zIHtKc3hFbGVtZW50IHwgSnN4RnJhZ21lbnR9XG4gKiAgIEpTWCBlbGVtZW50IG9yIGZyYWdtZW50LlxuICovXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgY29tcGxleGl0eVxuZXhwb3J0IGZ1bmN0aW9uIG1keEpzeEVsZW1lbnQobm9kZSwgc3RhdGUpIHtcbiAgY29uc3QgcGFyZW50U2NoZW1hID0gc3RhdGUuc2NoZW1hXG4gIGxldCBzY2hlbWEgPSBwYXJlbnRTY2hlbWFcbiAgY29uc3QgYXR0cnMgPSBub2RlLmF0dHJpYnV0ZXMgfHwgW11cbiAgbGV0IGluZGV4ID0gLTFcblxuICBpZiAoXG4gICAgbm9kZS5uYW1lICYmXG4gICAgcGFyZW50U2NoZW1hLnNwYWNlID09PSAnaHRtbCcgJiZcbiAgICBub2RlLm5hbWUudG9Mb3dlckNhc2UoKSA9PT0gJ3N2ZydcbiAgKSB7XG4gICAgc2NoZW1hID0gc3ZnXG4gICAgc3RhdGUuc2NoZW1hID0gc2NoZW1hXG4gIH1cblxuICBjb25zdCBjaGlsZHJlbiA9IHN0YXRlLmFsbChub2RlKVxuICAvKiogQHR5cGUge0FycmF5PEpzeEF0dHJpYnV0ZSB8IEpzeFNwcmVhZEF0dHJpYnV0ZT59ICovXG4gIGNvbnN0IGF0dHJpYnV0ZXMgPSBbXVxuXG4gIHdoaWxlICgrK2luZGV4IDwgYXR0cnMubGVuZ3RoKSB7XG4gICAgY29uc3QgYXR0ciA9IGF0dHJzW2luZGV4XVxuICAgIGNvbnN0IHZhbHVlID0gYXR0ci52YWx1ZVxuICAgIC8qKiBAdHlwZSB7SnN4QXR0cmlidXRlWyd2YWx1ZSddfSAqL1xuICAgIGxldCBhdHRyaWJ1dGVWYWx1ZVxuXG4gICAgaWYgKGF0dHIudHlwZSA9PT0gJ21keEpzeEF0dHJpYnV0ZScpIHtcbiAgICAgIGlmICh2YWx1ZSA9PT0gbnVsbCB8fCB2YWx1ZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIGF0dHJpYnV0ZVZhbHVlID0gbnVsbFxuICAgICAgICAvLyBFbXB0eS5cbiAgICAgIH1cbiAgICAgIC8vIGBNZHhKc3hBdHRyaWJ1dGVWYWx1ZUV4cHJlc3Npb25gLlxuICAgICAgZWxzZSBpZiAodHlwZW9mIHZhbHVlID09PSAnb2JqZWN0Jykge1xuICAgICAgICBjb25zdCBlc3RyZWUgPSB2YWx1ZS5kYXRhICYmIHZhbHVlLmRhdGEuZXN0cmVlXG4gICAgICAgIGNvbnN0IGNvbW1lbnRzID0gKGVzdHJlZSAmJiBlc3RyZWUuY29tbWVudHMpIHx8IFtdXG4gICAgICAgIC8qKiBAdHlwZSB7RXhwcmVzc2lvbiB8IHVuZGVmaW5lZH0gKi9cbiAgICAgICAgbGV0IGV4cHJlc3Npb25cblxuICAgICAgICBpZiAoZXN0cmVlKSB7XG4gICAgICAgICAgc3RhdGUuY29tbWVudHMucHVzaCguLi5jb21tZW50cylcbiAgICAgICAgICBhdHRhY2hDb21tZW50cyhlc3RyZWUsIGVzdHJlZS5jb21tZW50cylcbiAgICAgICAgICAvLyBTaG91bGQgZXhpc3QuXG4gICAgICAgICAgLyogYzggaWdub3JlIG5leHQgNSAqL1xuICAgICAgICAgIGV4cHJlc3Npb24gPVxuICAgICAgICAgICAgKGVzdHJlZS5ib2R5WzBdICYmXG4gICAgICAgICAgICAgIGVzdHJlZS5ib2R5WzBdLnR5cGUgPT09ICdFeHByZXNzaW9uU3RhdGVtZW50JyAmJlxuICAgICAgICAgICAgICBlc3RyZWUuYm9keVswXS5leHByZXNzaW9uKSB8fFxuICAgICAgICAgICAgdW5kZWZpbmVkXG4gICAgICAgIH1cblxuICAgICAgICBhdHRyaWJ1dGVWYWx1ZSA9IHtcbiAgICAgICAgICB0eXBlOiAnSlNYRXhwcmVzc2lvbkNvbnRhaW5lcicsXG4gICAgICAgICAgZXhwcmVzc2lvbjogZXhwcmVzc2lvbiB8fCB7dHlwZTogJ0pTWEVtcHR5RXhwcmVzc2lvbid9XG4gICAgICAgIH1cbiAgICAgICAgc3RhdGUuaW5oZXJpdCh2YWx1ZSwgYXR0cmlidXRlVmFsdWUpXG4gICAgICB9XG4gICAgICAvLyBBbnl0aGluZyBlbHNlLlxuICAgICAgZWxzZSB7XG4gICAgICAgIGF0dHJpYnV0ZVZhbHVlID0ge3R5cGU6ICdMaXRlcmFsJywgdmFsdWU6IFN0cmluZyh2YWx1ZSl9XG4gICAgICB9XG5cbiAgICAgIC8qKiBAdHlwZSB7SnN4QXR0cmlidXRlfSAqL1xuICAgICAgY29uc3QgYXR0cmlidXRlID0ge1xuICAgICAgICB0eXBlOiAnSlNYQXR0cmlidXRlJyxcbiAgICAgICAgbmFtZTogc3RhdGUuY3JlYXRlSnN4QXR0cmlidXRlTmFtZShhdHRyLm5hbWUpLFxuICAgICAgICB2YWx1ZTogYXR0cmlidXRlVmFsdWVcbiAgICAgIH1cblxuICAgICAgc3RhdGUuaW5oZXJpdChhdHRyLCBhdHRyaWJ1dGUpXG4gICAgICBhdHRyaWJ1dGVzLnB1c2goYXR0cmlidXRlKVxuICAgIH1cbiAgICAvLyBNZHhKc3hFeHByZXNzaW9uQXR0cmlidXRlLlxuICAgIGVsc2Uge1xuICAgICAgY29uc3QgZXN0cmVlID0gYXR0ci5kYXRhICYmIGF0dHIuZGF0YS5lc3RyZWVcbiAgICAgIGNvbnN0IGNvbW1lbnRzID0gKGVzdHJlZSAmJiBlc3RyZWUuY29tbWVudHMpIHx8IFtdXG4gICAgICAvKiogQHR5cGUge0pzeFNwcmVhZEF0dHJpYnV0ZVsnYXJndW1lbnQnXSB8IHVuZGVmaW5lZH0gKi9cbiAgICAgIGxldCBhcmd1bWVudFZhbHVlXG5cbiAgICAgIGlmIChlc3RyZWUpIHtcbiAgICAgICAgc3RhdGUuY29tbWVudHMucHVzaCguLi5jb21tZW50cylcbiAgICAgICAgYXR0YWNoQ29tbWVudHMoZXN0cmVlLCBlc3RyZWUuY29tbWVudHMpXG4gICAgICAgIC8vIFNob3VsZCBleGlzdC5cbiAgICAgICAgLyogYzggaWdub3JlIG5leHQgMTAgKi9cbiAgICAgICAgYXJndW1lbnRWYWx1ZSA9XG4gICAgICAgICAgKGVzdHJlZS5ib2R5WzBdICYmXG4gICAgICAgICAgICBlc3RyZWUuYm9keVswXS50eXBlID09PSAnRXhwcmVzc2lvblN0YXRlbWVudCcgJiZcbiAgICAgICAgICAgIGVzdHJlZS5ib2R5WzBdLmV4cHJlc3Npb24gJiZcbiAgICAgICAgICAgIGVzdHJlZS5ib2R5WzBdLmV4cHJlc3Npb24udHlwZSA9PT0gJ09iamVjdEV4cHJlc3Npb24nICYmXG4gICAgICAgICAgICBlc3RyZWUuYm9keVswXS5leHByZXNzaW9uLnByb3BlcnRpZXMgJiZcbiAgICAgICAgICAgIGVzdHJlZS5ib2R5WzBdLmV4cHJlc3Npb24ucHJvcGVydGllc1swXSAmJlxuICAgICAgICAgICAgZXN0cmVlLmJvZHlbMF0uZXhwcmVzc2lvbi5wcm9wZXJ0aWVzWzBdLnR5cGUgPT09ICdTcHJlYWRFbGVtZW50JyAmJlxuICAgICAgICAgICAgZXN0cmVlLmJvZHlbMF0uZXhwcmVzc2lvbi5wcm9wZXJ0aWVzWzBdLmFyZ3VtZW50KSB8fFxuICAgICAgICAgIHVuZGVmaW5lZFxuICAgICAgfVxuXG4gICAgICAvKiogQHR5cGUge0pzeFNwcmVhZEF0dHJpYnV0ZX0gKi9cbiAgICAgIGNvbnN0IGF0dHJpYnV0ZSA9IHtcbiAgICAgICAgdHlwZTogJ0pTWFNwcmVhZEF0dHJpYnV0ZScsXG4gICAgICAgIGFyZ3VtZW50OiBhcmd1bWVudFZhbHVlIHx8IHt0eXBlOiAnT2JqZWN0RXhwcmVzc2lvbicsIHByb3BlcnRpZXM6IFtdfVxuICAgICAgfVxuICAgICAgc3RhdGUuaW5oZXJpdChhdHRyLCBhdHRyaWJ1dGUpXG4gICAgICBhdHRyaWJ1dGVzLnB1c2goYXR0cmlidXRlKVxuICAgIH1cbiAgfVxuXG4gIC8vIFJlc3RvcmUgcGFyZW50IHNjaGVtYS5cbiAgc3RhdGUuc2NoZW1hID0gcGFyZW50U2NoZW1hXG5cbiAgLyoqIEB0eXBlIHtKc3hFbGVtZW50IHwgSnN4RnJhZ21lbnR9ICovXG4gIGNvbnN0IHJlc3VsdCA9IG5vZGUubmFtZVxuICAgID8ge1xuICAgICAgICB0eXBlOiAnSlNYRWxlbWVudCcsXG4gICAgICAgIG9wZW5pbmdFbGVtZW50OiB7XG4gICAgICAgICAgdHlwZTogJ0pTWE9wZW5pbmdFbGVtZW50JyxcbiAgICAgICAgICBhdHRyaWJ1dGVzLFxuICAgICAgICAgIG5hbWU6IHN0YXRlLmNyZWF0ZUpzeEVsZW1lbnROYW1lKG5vZGUubmFtZSksXG4gICAgICAgICAgc2VsZkNsb3Npbmc6IGNoaWxkcmVuLmxlbmd0aCA9PT0gMFxuICAgICAgICB9LFxuICAgICAgICBjbG9zaW5nRWxlbWVudDpcbiAgICAgICAgICBjaGlsZHJlbi5sZW5ndGggPiAwXG4gICAgICAgICAgICA/IHtcbiAgICAgICAgICAgICAgICB0eXBlOiAnSlNYQ2xvc2luZ0VsZW1lbnQnLFxuICAgICAgICAgICAgICAgIG5hbWU6IHN0YXRlLmNyZWF0ZUpzeEVsZW1lbnROYW1lKG5vZGUubmFtZSlcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgOiBudWxsLFxuICAgICAgICBjaGlsZHJlblxuICAgICAgfVxuICAgIDoge1xuICAgICAgICB0eXBlOiAnSlNYRnJhZ21lbnQnLFxuICAgICAgICBvcGVuaW5nRnJhZ21lbnQ6IHt0eXBlOiAnSlNYT3BlbmluZ0ZyYWdtZW50J30sXG4gICAgICAgIGNsb3NpbmdGcmFnbWVudDoge3R5cGU6ICdKU1hDbG9zaW5nRnJhZ21lbnQnfSxcbiAgICAgICAgY2hpbGRyZW5cbiAgICAgIH1cblxuICBzdGF0ZS5pbmhlcml0KG5vZGUsIHJlc3VsdClcbiAgcmV0dXJuIHJlc3VsdFxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/hast-util-to-estree@3.1.0/node_modules/hast-util-to-estree/lib/handlers/mdx-jsx-element.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/hast-util-to-estree@3.1.0/node_modules/hast-util-to-estree/lib/handlers/mdxjs-esm.js":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/hast-util-to-estree@3.1.0/node_modules/hast-util-to-estree/lib/handlers/mdxjs-esm.js ***!
  \*****************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   mdxjsEsm: () => (/* binding */ mdxjsEsm)\n/* harmony export */ });\n/* harmony import */ var estree_util_attach_comments__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! estree-util-attach-comments */ \"(ssr)/./node_modules/.pnpm/estree-util-attach-comments@3.0.0/node_modules/estree-util-attach-comments/lib/index.js\");\n/**\n * @typedef {import('mdast-util-mdxjs-esm').MdxjsEsmHast} MdxjsEsm\n *\n * @typedef {import('../state.js').State} State\n */\n\n\n\n/**\n * Handle an MDX ESM node.\n *\n * @param {MdxjsEsm} node\n *   hast node to transform.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction mdxjsEsm(node, state) {\n  const estree = node.data && node.data.estree\n  const comments = (estree && estree.comments) || []\n\n  if (estree) {\n    state.comments.push(...comments)\n    ;(0,estree_util_attach_comments__WEBPACK_IMPORTED_MODULE_0__.attachComments)(estree, comments)\n    state.esm.push(...estree.body)\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vaGFzdC11dGlsLXRvLWVzdHJlZUAzLjEuMC9ub2RlX21vZHVsZXMvaGFzdC11dGlsLXRvLWVzdHJlZS9saWIvaGFuZGxlcnMvbWR4anMtZXNtLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQSxhQUFhLDZDQUE2QztBQUMxRDtBQUNBLGFBQWEsNkJBQTZCO0FBQzFDOztBQUUwRDs7QUFFMUQ7QUFDQTtBQUNBO0FBQ0EsV0FBVyxVQUFVO0FBQ3JCO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDTztBQUNQO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLElBQUksNEVBQWM7QUFDbEI7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2JtXzIwMjQvLi9ub2RlX21vZHVsZXMvLnBucG0vaGFzdC11dGlsLXRvLWVzdHJlZUAzLjEuMC9ub2RlX21vZHVsZXMvaGFzdC11dGlsLXRvLWVzdHJlZS9saWIvaGFuZGxlcnMvbWR4anMtZXNtLmpzPzUyNDciXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdtZGFzdC11dGlsLW1keGpzLWVzbScpLk1keGpzRXNtSGFzdH0gTWR4anNFc21cbiAqXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCcuLi9zdGF0ZS5qcycpLlN0YXRlfSBTdGF0ZVxuICovXG5cbmltcG9ydCB7YXR0YWNoQ29tbWVudHN9IGZyb20gJ2VzdHJlZS11dGlsLWF0dGFjaC1jb21tZW50cydcblxuLyoqXG4gKiBIYW5kbGUgYW4gTURYIEVTTSBub2RlLlxuICpcbiAqIEBwYXJhbSB7TWR4anNFc219IG5vZGVcbiAqICAgaGFzdCBub2RlIHRvIHRyYW5zZm9ybS5cbiAqIEBwYXJhbSB7U3RhdGV9IHN0YXRlXG4gKiAgIEluZm8gcGFzc2VkIGFyb3VuZCBhYm91dCB0aGUgY3VycmVudCBzdGF0ZS5cbiAqIEByZXR1cm5zIHt1bmRlZmluZWR9XG4gKiAgIE5vdGhpbmcuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBtZHhqc0VzbShub2RlLCBzdGF0ZSkge1xuICBjb25zdCBlc3RyZWUgPSBub2RlLmRhdGEgJiYgbm9kZS5kYXRhLmVzdHJlZVxuICBjb25zdCBjb21tZW50cyA9IChlc3RyZWUgJiYgZXN0cmVlLmNvbW1lbnRzKSB8fCBbXVxuXG4gIGlmIChlc3RyZWUpIHtcbiAgICBzdGF0ZS5jb21tZW50cy5wdXNoKC4uLmNvbW1lbnRzKVxuICAgIGF0dGFjaENvbW1lbnRzKGVzdHJlZSwgY29tbWVudHMpXG4gICAgc3RhdGUuZXNtLnB1c2goLi4uZXN0cmVlLmJvZHkpXG4gIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/hast-util-to-estree@3.1.0/node_modules/hast-util-to-estree/lib/handlers/mdxjs-esm.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/hast-util-to-estree@3.1.0/node_modules/hast-util-to-estree/lib/handlers/root.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/hast-util-to-estree@3.1.0/node_modules/hast-util-to-estree/lib/handlers/root.js ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   root: () => (/* binding */ root)\n/* harmony export */ });\n/* harmony import */ var hast_util_whitespace__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! hast-util-whitespace */ \"(ssr)/./node_modules/.pnpm/hast-util-whitespace@3.0.0/node_modules/hast-util-whitespace/lib/index.js\");\n/**\n * @typedef {import('estree-jsx').JSXFragment} JsxFragment\n *\n * @typedef {import('hast').Root} HastRoot\n *\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * @typedef {JsxFragment['children'][number]} JsxChild\n */\n\n\n\n/**\n * Turn a hast root node into an estree node.\n *\n * @param {HastRoot} node\n *   hast node to transform.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {JsxFragment}\n *   estree JSX fragment.\n */\nfunction root(node, state) {\n  const children = state.all(node)\n  /** @type {Array<JsxChild>} */\n  const cleanChildren = []\n  let index = -1\n  /** @type {Array<JsxChild> | undefined} */\n  let queue\n\n  // Remove surrounding whitespace nodes from the fragment.\n  while (++index < children.length) {\n    const child = children[index]\n\n    if (\n      child.type === 'JSXExpressionContainer' &&\n      child.expression.type === 'Literal' &&\n      (0,hast_util_whitespace__WEBPACK_IMPORTED_MODULE_0__.whitespace)(String(child.expression.value))\n    ) {\n      if (queue) queue.push(child)\n    } else {\n      if (queue) cleanChildren.push(...queue)\n      cleanChildren.push(child)\n      queue = []\n    }\n  }\n\n  /** @type {JsxFragment} */\n  const result = {\n    type: 'JSXFragment',\n    openingFragment: {type: 'JSXOpeningFragment'},\n    closingFragment: {type: 'JSXClosingFragment'},\n    children: cleanChildren\n  }\n  state.inherit(node, result)\n  return result\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vaGFzdC11dGlsLXRvLWVzdHJlZUAzLjEuMC9ub2RlX21vZHVsZXMvaGFzdC11dGlsLXRvLWVzdHJlZS9saWIvaGFuZGxlcnMvcm9vdC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0EsYUFBYSxrQ0FBa0M7QUFDL0M7QUFDQSxhQUFhLHFCQUFxQjtBQUNsQztBQUNBLGFBQWEsNkJBQTZCO0FBQzFDOztBQUVBO0FBQ0EsYUFBYSxpQ0FBaUM7QUFDOUM7O0FBRStDOztBQUUvQztBQUNBO0FBQ0E7QUFDQSxXQUFXLFVBQVU7QUFDckI7QUFDQSxXQUFXLE9BQU87QUFDbEI7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNPO0FBQ1A7QUFDQSxhQUFhLGlCQUFpQjtBQUM5QjtBQUNBO0FBQ0EsYUFBYSw2QkFBNkI7QUFDMUM7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLE1BQU0sZ0VBQVU7QUFDaEI7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGFBQWEsYUFBYTtBQUMxQjtBQUNBO0FBQ0Esc0JBQXNCLDJCQUEyQjtBQUNqRCxzQkFBc0IsMkJBQTJCO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jYm1fMjAyNC8uL25vZGVfbW9kdWxlcy8ucG5wbS9oYXN0LXV0aWwtdG8tZXN0cmVlQDMuMS4wL25vZGVfbW9kdWxlcy9oYXN0LXV0aWwtdG8tZXN0cmVlL2xpYi9oYW5kbGVycy9yb290LmpzPzEyZDEiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdlc3RyZWUtanN4JykuSlNYRnJhZ21lbnR9IEpzeEZyYWdtZW50XG4gKlxuICogQHR5cGVkZWYge2ltcG9ydCgnaGFzdCcpLlJvb3R9IEhhc3RSb290XG4gKlxuICogQHR5cGVkZWYge2ltcG9ydCgnLi4vc3RhdGUuanMnKS5TdGF0ZX0gU3RhdGVcbiAqL1xuXG4vKipcbiAqIEB0eXBlZGVmIHtKc3hGcmFnbWVudFsnY2hpbGRyZW4nXVtudW1iZXJdfSBKc3hDaGlsZFxuICovXG5cbmltcG9ydCB7d2hpdGVzcGFjZX0gZnJvbSAnaGFzdC11dGlsLXdoaXRlc3BhY2UnXG5cbi8qKlxuICogVHVybiBhIGhhc3Qgcm9vdCBub2RlIGludG8gYW4gZXN0cmVlIG5vZGUuXG4gKlxuICogQHBhcmFtIHtIYXN0Um9vdH0gbm9kZVxuICogICBoYXN0IG5vZGUgdG8gdHJhbnNmb3JtLlxuICogQHBhcmFtIHtTdGF0ZX0gc3RhdGVcbiAqICAgSW5mbyBwYXNzZWQgYXJvdW5kIGFib3V0IHRoZSBjdXJyZW50IHN0YXRlLlxuICogQHJldHVybnMge0pzeEZyYWdtZW50fVxuICogICBlc3RyZWUgSlNYIGZyYWdtZW50LlxuICovXG5leHBvcnQgZnVuY3Rpb24gcm9vdChub2RlLCBzdGF0ZSkge1xuICBjb25zdCBjaGlsZHJlbiA9IHN0YXRlLmFsbChub2RlKVxuICAvKiogQHR5cGUge0FycmF5PEpzeENoaWxkPn0gKi9cbiAgY29uc3QgY2xlYW5DaGlsZHJlbiA9IFtdXG4gIGxldCBpbmRleCA9IC0xXG4gIC8qKiBAdHlwZSB7QXJyYXk8SnN4Q2hpbGQ+IHwgdW5kZWZpbmVkfSAqL1xuICBsZXQgcXVldWVcblxuICAvLyBSZW1vdmUgc3Vycm91bmRpbmcgd2hpdGVzcGFjZSBub2RlcyBmcm9tIHRoZSBmcmFnbWVudC5cbiAgd2hpbGUgKCsraW5kZXggPCBjaGlsZHJlbi5sZW5ndGgpIHtcbiAgICBjb25zdCBjaGlsZCA9IGNoaWxkcmVuW2luZGV4XVxuXG4gICAgaWYgKFxuICAgICAgY2hpbGQudHlwZSA9PT0gJ0pTWEV4cHJlc3Npb25Db250YWluZXInICYmXG4gICAgICBjaGlsZC5leHByZXNzaW9uLnR5cGUgPT09ICdMaXRlcmFsJyAmJlxuICAgICAgd2hpdGVzcGFjZShTdHJpbmcoY2hpbGQuZXhwcmVzc2lvbi52YWx1ZSkpXG4gICAgKSB7XG4gICAgICBpZiAocXVldWUpIHF1ZXVlLnB1c2goY2hpbGQpXG4gICAgfSBlbHNlIHtcbiAgICAgIGlmIChxdWV1ZSkgY2xlYW5DaGlsZHJlbi5wdXNoKC4uLnF1ZXVlKVxuICAgICAgY2xlYW5DaGlsZHJlbi5wdXNoKGNoaWxkKVxuICAgICAgcXVldWUgPSBbXVxuICAgIH1cbiAgfVxuXG4gIC8qKiBAdHlwZSB7SnN4RnJhZ21lbnR9ICovXG4gIGNvbnN0IHJlc3VsdCA9IHtcbiAgICB0eXBlOiAnSlNYRnJhZ21lbnQnLFxuICAgIG9wZW5pbmdGcmFnbWVudDoge3R5cGU6ICdKU1hPcGVuaW5nRnJhZ21lbnQnfSxcbiAgICBjbG9zaW5nRnJhZ21lbnQ6IHt0eXBlOiAnSlNYQ2xvc2luZ0ZyYWdtZW50J30sXG4gICAgY2hpbGRyZW46IGNsZWFuQ2hpbGRyZW5cbiAgfVxuICBzdGF0ZS5pbmhlcml0KG5vZGUsIHJlc3VsdClcbiAgcmV0dXJuIHJlc3VsdFxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/hast-util-to-estree@3.1.0/node_modules/hast-util-to-estree/lib/handlers/root.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/hast-util-to-estree@3.1.0/node_modules/hast-util-to-estree/lib/handlers/text.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/hast-util-to-estree@3.1.0/node_modules/hast-util-to-estree/lib/handlers/text.js ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   text: () => (/* binding */ text)\n/* harmony export */ });\n/**\n * @typedef {import('estree').Literal} Literal\n *\n * @typedef {import('estree-jsx').JSXExpressionContainer} JsxExpressionContainer\n *\n * @typedef {import('hast').Text} HastText\n *\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn a hast text node into an estree node.\n *\n * @param {HastText} node\n *   hast node to transform.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {JsxExpressionContainer | undefined}\n *   JSX expression.\n */\nfunction text(node, state) {\n  const value = String(node.value || '')\n\n  if (value) {\n    /** @type {Literal} */\n    const result = {type: 'Literal', value}\n    state.inherit(node, result)\n    /** @type {JsxExpressionContainer} */\n    const container = {type: 'JSXExpressionContainer', expression: result}\n    state.patch(node, container)\n    return container\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vaGFzdC11dGlsLXRvLWVzdHJlZUAzLjEuMC9ub2RlX21vZHVsZXMvaGFzdC11dGlsLXRvLWVzdHJlZS9saWIvaGFuZGxlcnMvdGV4dC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQSxhQUFhLDBCQUEwQjtBQUN2QztBQUNBLGFBQWEsNkNBQTZDO0FBQzFEO0FBQ0EsYUFBYSxxQkFBcUI7QUFDbEM7QUFDQSxhQUFhLDZCQUE2QjtBQUMxQzs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsVUFBVTtBQUNyQjtBQUNBLFdBQVcsT0FBTztBQUNsQjtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ087QUFDUDs7QUFFQTtBQUNBLGVBQWUsU0FBUztBQUN4QixvQkFBb0I7QUFDcEI7QUFDQSxlQUFlLHdCQUF3QjtBQUN2Qyx1QkFBdUI7QUFDdkI7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jYm1fMjAyNC8uL25vZGVfbW9kdWxlcy8ucG5wbS9oYXN0LXV0aWwtdG8tZXN0cmVlQDMuMS4wL25vZGVfbW9kdWxlcy9oYXN0LXV0aWwtdG8tZXN0cmVlL2xpYi9oYW5kbGVycy90ZXh0LmpzP2RkNjUiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdlc3RyZWUnKS5MaXRlcmFsfSBMaXRlcmFsXG4gKlxuICogQHR5cGVkZWYge2ltcG9ydCgnZXN0cmVlLWpzeCcpLkpTWEV4cHJlc3Npb25Db250YWluZXJ9IEpzeEV4cHJlc3Npb25Db250YWluZXJcbiAqXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdoYXN0JykuVGV4dH0gSGFzdFRleHRcbiAqXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCcuLi9zdGF0ZS5qcycpLlN0YXRlfSBTdGF0ZVxuICovXG5cbi8vIE1ha2UgVlMgQ29kZSBzaG93IHJlZmVyZW5jZXMgdG8gdGhlIGFib3ZlIHR5cGVzLlxuJydcblxuLyoqXG4gKiBUdXJuIGEgaGFzdCB0ZXh0IG5vZGUgaW50byBhbiBlc3RyZWUgbm9kZS5cbiAqXG4gKiBAcGFyYW0ge0hhc3RUZXh0fSBub2RlXG4gKiAgIGhhc3Qgbm9kZSB0byB0cmFuc2Zvcm0uXG4gKiBAcGFyYW0ge1N0YXRlfSBzdGF0ZVxuICogICBJbmZvIHBhc3NlZCBhcm91bmQgYWJvdXQgdGhlIGN1cnJlbnQgc3RhdGUuXG4gKiBAcmV0dXJucyB7SnN4RXhwcmVzc2lvbkNvbnRhaW5lciB8IHVuZGVmaW5lZH1cbiAqICAgSlNYIGV4cHJlc3Npb24uXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB0ZXh0KG5vZGUsIHN0YXRlKSB7XG4gIGNvbnN0IHZhbHVlID0gU3RyaW5nKG5vZGUudmFsdWUgfHwgJycpXG5cbiAgaWYgKHZhbHVlKSB7XG4gICAgLyoqIEB0eXBlIHtMaXRlcmFsfSAqL1xuICAgIGNvbnN0IHJlc3VsdCA9IHt0eXBlOiAnTGl0ZXJhbCcsIHZhbHVlfVxuICAgIHN0YXRlLmluaGVyaXQobm9kZSwgcmVzdWx0KVxuICAgIC8qKiBAdHlwZSB7SnN4RXhwcmVzc2lvbkNvbnRhaW5lcn0gKi9cbiAgICBjb25zdCBjb250YWluZXIgPSB7dHlwZTogJ0pTWEV4cHJlc3Npb25Db250YWluZXInLCBleHByZXNzaW9uOiByZXN1bHR9XG4gICAgc3RhdGUucGF0Y2gobm9kZSwgY29udGFpbmVyKVxuICAgIHJldHVybiBjb250YWluZXJcbiAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/hast-util-to-estree@3.1.0/node_modules/hast-util-to-estree/lib/handlers/text.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/hast-util-to-estree@3.1.0/node_modules/hast-util-to-estree/lib/index.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/.pnpm/hast-util-to-estree@3.1.0/node_modules/hast-util-to-estree/lib/index.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   toEstree: () => (/* binding */ toEstree)\n/* harmony export */ });\n/* harmony import */ var _state_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./state.js */ \"(ssr)/./node_modules/.pnpm/hast-util-to-estree@3.1.0/node_modules/hast-util-to-estree/lib/state.js\");\n/**\n * Register MDX nodes in tree:\n *\n * @typedef {import('mdast-util-mdx-expression')}\n * @typedef {import('mdast-util-mdx-jsx')}\n * @typedef {import('mdast-util-mdxjs-esm')}\n */\n\n/**\n * @typedef {import('estree').ExpressionStatement} ExpressionStatement\n * @typedef {import('estree').Program} Program\n *\n * @typedef {import('hast').Nodes} HastNodes\n *\n * @typedef {import('./state.js').Options} Options\n */\n\n\n\n/**\n * Transform a hast tree (with embedded MDX nodes) into an estree.\n *\n * ##### Notes\n *\n * ###### Comments\n *\n * Comments are attached to the tree in their neighbouring nodes (`recast`,\n * `babel` style) and also added as a `comments` array on the program node\n * (`espree` style).\n * You may have to do `program.comments = undefined` for certain compilers.\n *\n * ###### Frameworks\n *\n * There are differences between what JSX frameworks accept, such as whether they\n * accept `class` or `className`, or `background-color` or `backgroundColor`.\n *\n * For JSX components written in MDX, the author has to be aware of this\n * difference and write code accordingly.\n * For hast elements transformed by this project, this will be handled through\n * options.\n *\n * | Framework | `elementAttributeNameCase` | `stylePropertyNameCase` |\n * | --------- | -------------------------- | ----------------------- |\n * | Preact    | `'html'`                   | `'dom'`                 |\n * | React     | `'react'`                  | `'dom'`                 |\n * | Solid     | `'html'`                   | `'css'`                 |\n * | Vue       | `'html'`                   | `'dom'`                 |\n *\n * @param {HastNodes} tree\n *   hast tree.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {Program}\n *   estree program node.\n *\n *   The program’s last child in `body` is most likely an `ExpressionStatement`,\n *   whose expression is a `JSXFragment` or a `JSXElement`.\n *\n *   Typically, there is only one node in `body`, however, this utility also\n *   supports embedded MDX nodes in the HTML (when `mdast-util-mdx` is used\n *   with mdast to parse markdown before passing its nodes through to hast).\n *   When MDX ESM import/exports are used, those nodes are added before the\n *   fragment or element in body.\n *\n *   There aren’t many great estree serializers out there that support JSX.\n *   To do that, you can use `estree-util-to-js`.\n *   Or, use `estree-util-build-jsx` to turn JSX into function calls, and then\n *   serialize with whatever (`astring`, `escodegen`).\n */\nfunction toEstree(tree, options) {\n  const state = (0,_state_js__WEBPACK_IMPORTED_MODULE_0__.createState)(options || {})\n  let result = state.handle(tree)\n  const body = state.esm\n\n  if (result) {\n    if (result.type !== 'JSXFragment' && result.type !== 'JSXElement') {\n      result = {\n        type: 'JSXFragment',\n        openingFragment: {type: 'JSXOpeningFragment'},\n        closingFragment: {type: 'JSXClosingFragment'},\n        children: [result]\n      }\n      state.patch(tree, result)\n    }\n\n    /** @type {ExpressionStatement} */\n    // @ts-expect-error: `estree` types don’t allow JSX.\n    const statement = {type: 'ExpressionStatement', expression: result}\n    state.patch(tree, statement)\n    body.push(statement)\n  }\n\n  /** @type {Program} */\n  const program = {\n    type: 'Program',\n    body,\n    sourceType: 'module',\n    comments: state.comments\n  }\n  state.patch(tree, program)\n  return program\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vaGFzdC11dGlsLXRvLWVzdHJlZUAzLjEuMC9ub2RlX21vZHVsZXMvaGFzdC11dGlsLXRvLWVzdHJlZS9saWIvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2IsYUFBYTtBQUNiLGFBQWE7QUFDYjs7QUFFQTtBQUNBLGFBQWEsc0NBQXNDO0FBQ25ELGFBQWEsMEJBQTBCO0FBQ3ZDO0FBQ0EsYUFBYSxzQkFBc0I7QUFDbkM7QUFDQSxhQUFhLDhCQUE4QjtBQUMzQzs7QUFFc0M7O0FBRXRDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFdBQVc7QUFDdEI7QUFDQSxXQUFXLDRCQUE0QjtBQUN2QztBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsZ0JBQWdCLHNEQUFXLGNBQWM7QUFDekM7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQiwyQkFBMkI7QUFDckQsMEJBQTBCLDJCQUEyQjtBQUNyRDtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxlQUFlLHFCQUFxQjtBQUNwQztBQUNBLHVCQUF1QjtBQUN2QjtBQUNBO0FBQ0E7O0FBRUEsYUFBYSxTQUFTO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2NibV8yMDI0Ly4vbm9kZV9tb2R1bGVzLy5wbnBtL2hhc3QtdXRpbC10by1lc3RyZWVAMy4xLjAvbm9kZV9tb2R1bGVzL2hhc3QtdXRpbC10by1lc3RyZWUvbGliL2luZGV4LmpzPzNlM2EiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBSZWdpc3RlciBNRFggbm9kZXMgaW4gdHJlZTpcbiAqXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdtZGFzdC11dGlsLW1keC1leHByZXNzaW9uJyl9XG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdtZGFzdC11dGlsLW1keC1qc3gnKX1cbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ21kYXN0LXV0aWwtbWR4anMtZXNtJyl9XG4gKi9cblxuLyoqXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdlc3RyZWUnKS5FeHByZXNzaW9uU3RhdGVtZW50fSBFeHByZXNzaW9uU3RhdGVtZW50XG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdlc3RyZWUnKS5Qcm9ncmFtfSBQcm9ncmFtXG4gKlxuICogQHR5cGVkZWYge2ltcG9ydCgnaGFzdCcpLk5vZGVzfSBIYXN0Tm9kZXNcbiAqXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCcuL3N0YXRlLmpzJykuT3B0aW9uc30gT3B0aW9uc1xuICovXG5cbmltcG9ydCB7Y3JlYXRlU3RhdGV9IGZyb20gJy4vc3RhdGUuanMnXG5cbi8qKlxuICogVHJhbnNmb3JtIGEgaGFzdCB0cmVlICh3aXRoIGVtYmVkZGVkIE1EWCBub2RlcykgaW50byBhbiBlc3RyZWUuXG4gKlxuICogIyMjIyMgTm90ZXNcbiAqXG4gKiAjIyMjIyMgQ29tbWVudHNcbiAqXG4gKiBDb21tZW50cyBhcmUgYXR0YWNoZWQgdG8gdGhlIHRyZWUgaW4gdGhlaXIgbmVpZ2hib3VyaW5nIG5vZGVzIChgcmVjYXN0YCxcbiAqIGBiYWJlbGAgc3R5bGUpIGFuZCBhbHNvIGFkZGVkIGFzIGEgYGNvbW1lbnRzYCBhcnJheSBvbiB0aGUgcHJvZ3JhbSBub2RlXG4gKiAoYGVzcHJlZWAgc3R5bGUpLlxuICogWW91IG1heSBoYXZlIHRvIGRvIGBwcm9ncmFtLmNvbW1lbnRzID0gdW5kZWZpbmVkYCBmb3IgY2VydGFpbiBjb21waWxlcnMuXG4gKlxuICogIyMjIyMjIEZyYW1ld29ya3NcbiAqXG4gKiBUaGVyZSBhcmUgZGlmZmVyZW5jZXMgYmV0d2VlbiB3aGF0IEpTWCBmcmFtZXdvcmtzIGFjY2VwdCwgc3VjaCBhcyB3aGV0aGVyIHRoZXlcbiAqIGFjY2VwdCBgY2xhc3NgIG9yIGBjbGFzc05hbWVgLCBvciBgYmFja2dyb3VuZC1jb2xvcmAgb3IgYGJhY2tncm91bmRDb2xvcmAuXG4gKlxuICogRm9yIEpTWCBjb21wb25lbnRzIHdyaXR0ZW4gaW4gTURYLCB0aGUgYXV0aG9yIGhhcyB0byBiZSBhd2FyZSBvZiB0aGlzXG4gKiBkaWZmZXJlbmNlIGFuZCB3cml0ZSBjb2RlIGFjY29yZGluZ2x5LlxuICogRm9yIGhhc3QgZWxlbWVudHMgdHJhbnNmb3JtZWQgYnkgdGhpcyBwcm9qZWN0LCB0aGlzIHdpbGwgYmUgaGFuZGxlZCB0aHJvdWdoXG4gKiBvcHRpb25zLlxuICpcbiAqIHwgRnJhbWV3b3JrIHwgYGVsZW1lbnRBdHRyaWJ1dGVOYW1lQ2FzZWAgfCBgc3R5bGVQcm9wZXJ0eU5hbWVDYXNlYCB8XG4gKiB8IC0tLS0tLS0tLSB8IC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIHwgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gfFxuICogfCBQcmVhY3QgICAgfCBgJ2h0bWwnYCAgICAgICAgICAgICAgICAgICB8IGAnZG9tJ2AgICAgICAgICAgICAgICAgIHxcbiAqIHwgUmVhY3QgICAgIHwgYCdyZWFjdCdgICAgICAgICAgICAgICAgICAgfCBgJ2RvbSdgICAgICAgICAgICAgICAgICB8XG4gKiB8IFNvbGlkICAgICB8IGAnaHRtbCdgICAgICAgICAgICAgICAgICAgIHwgYCdjc3MnYCAgICAgICAgICAgICAgICAgfFxuICogfCBWdWUgICAgICAgfCBgJ2h0bWwnYCAgICAgICAgICAgICAgICAgICB8IGAnZG9tJ2AgICAgICAgICAgICAgICAgIHxcbiAqXG4gKiBAcGFyYW0ge0hhc3ROb2Rlc30gdHJlZVxuICogICBoYXN0IHRyZWUuXG4gKiBAcGFyYW0ge09wdGlvbnMgfCBudWxsIHwgdW5kZWZpbmVkfSBbb3B0aW9uc11cbiAqICAgQ29uZmlndXJhdGlvbiAob3B0aW9uYWwpLlxuICogQHJldHVybnMge1Byb2dyYW19XG4gKiAgIGVzdHJlZSBwcm9ncmFtIG5vZGUuXG4gKlxuICogICBUaGUgcHJvZ3JhbeKAmXMgbGFzdCBjaGlsZCBpbiBgYm9keWAgaXMgbW9zdCBsaWtlbHkgYW4gYEV4cHJlc3Npb25TdGF0ZW1lbnRgLFxuICogICB3aG9zZSBleHByZXNzaW9uIGlzIGEgYEpTWEZyYWdtZW50YCBvciBhIGBKU1hFbGVtZW50YC5cbiAqXG4gKiAgIFR5cGljYWxseSwgdGhlcmUgaXMgb25seSBvbmUgbm9kZSBpbiBgYm9keWAsIGhvd2V2ZXIsIHRoaXMgdXRpbGl0eSBhbHNvXG4gKiAgIHN1cHBvcnRzIGVtYmVkZGVkIE1EWCBub2RlcyBpbiB0aGUgSFRNTCAod2hlbiBgbWRhc3QtdXRpbC1tZHhgIGlzIHVzZWRcbiAqICAgd2l0aCBtZGFzdCB0byBwYXJzZSBtYXJrZG93biBiZWZvcmUgcGFzc2luZyBpdHMgbm9kZXMgdGhyb3VnaCB0byBoYXN0KS5cbiAqICAgV2hlbiBNRFggRVNNIGltcG9ydC9leHBvcnRzIGFyZSB1c2VkLCB0aG9zZSBub2RlcyBhcmUgYWRkZWQgYmVmb3JlIHRoZVxuICogICBmcmFnbWVudCBvciBlbGVtZW50IGluIGJvZHkuXG4gKlxuICogICBUaGVyZSBhcmVu4oCZdCBtYW55IGdyZWF0IGVzdHJlZSBzZXJpYWxpemVycyBvdXQgdGhlcmUgdGhhdCBzdXBwb3J0IEpTWC5cbiAqICAgVG8gZG8gdGhhdCwgeW91IGNhbiB1c2UgYGVzdHJlZS11dGlsLXRvLWpzYC5cbiAqICAgT3IsIHVzZSBgZXN0cmVlLXV0aWwtYnVpbGQtanN4YCB0byB0dXJuIEpTWCBpbnRvIGZ1bmN0aW9uIGNhbGxzLCBhbmQgdGhlblxuICogICBzZXJpYWxpemUgd2l0aCB3aGF0ZXZlciAoYGFzdHJpbmdgLCBgZXNjb2RlZ2VuYCkuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB0b0VzdHJlZSh0cmVlLCBvcHRpb25zKSB7XG4gIGNvbnN0IHN0YXRlID0gY3JlYXRlU3RhdGUob3B0aW9ucyB8fCB7fSlcbiAgbGV0IHJlc3VsdCA9IHN0YXRlLmhhbmRsZSh0cmVlKVxuICBjb25zdCBib2R5ID0gc3RhdGUuZXNtXG5cbiAgaWYgKHJlc3VsdCkge1xuICAgIGlmIChyZXN1bHQudHlwZSAhPT0gJ0pTWEZyYWdtZW50JyAmJiByZXN1bHQudHlwZSAhPT0gJ0pTWEVsZW1lbnQnKSB7XG4gICAgICByZXN1bHQgPSB7XG4gICAgICAgIHR5cGU6ICdKU1hGcmFnbWVudCcsXG4gICAgICAgIG9wZW5pbmdGcmFnbWVudDoge3R5cGU6ICdKU1hPcGVuaW5nRnJhZ21lbnQnfSxcbiAgICAgICAgY2xvc2luZ0ZyYWdtZW50OiB7dHlwZTogJ0pTWENsb3NpbmdGcmFnbWVudCd9LFxuICAgICAgICBjaGlsZHJlbjogW3Jlc3VsdF1cbiAgICAgIH1cbiAgICAgIHN0YXRlLnBhdGNoKHRyZWUsIHJlc3VsdClcbiAgICB9XG5cbiAgICAvKiogQHR5cGUge0V4cHJlc3Npb25TdGF0ZW1lbnR9ICovXG4gICAgLy8gQHRzLWV4cGVjdC1lcnJvcjogYGVzdHJlZWAgdHlwZXMgZG9u4oCZdCBhbGxvdyBKU1guXG4gICAgY29uc3Qgc3RhdGVtZW50ID0ge3R5cGU6ICdFeHByZXNzaW9uU3RhdGVtZW50JywgZXhwcmVzc2lvbjogcmVzdWx0fVxuICAgIHN0YXRlLnBhdGNoKHRyZWUsIHN0YXRlbWVudClcbiAgICBib2R5LnB1c2goc3RhdGVtZW50KVxuICB9XG5cbiAgLyoqIEB0eXBlIHtQcm9ncmFtfSAqL1xuICBjb25zdCBwcm9ncmFtID0ge1xuICAgIHR5cGU6ICdQcm9ncmFtJyxcbiAgICBib2R5LFxuICAgIHNvdXJjZVR5cGU6ICdtb2R1bGUnLFxuICAgIGNvbW1lbnRzOiBzdGF0ZS5jb21tZW50c1xuICB9XG4gIHN0YXRlLnBhdGNoKHRyZWUsIHByb2dyYW0pXG4gIHJldHVybiBwcm9ncmFtXG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/hast-util-to-estree@3.1.0/node_modules/hast-util-to-estree/lib/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/hast-util-to-estree@3.1.0/node_modules/hast-util-to-estree/lib/state.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/.pnpm/hast-util-to-estree@3.1.0/node_modules/hast-util-to-estree/lib/state.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createState: () => (/* binding */ createState)\n/* harmony export */ });\n/* harmony import */ var devlop__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! devlop */ \"(ssr)/./node_modules/.pnpm/devlop@1.1.0/node_modules/devlop/lib/development.js\");\n/* harmony import */ var property_information__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! property-information */ \"(ssr)/./node_modules/.pnpm/property-information@6.5.0/node_modules/property-information/index.js\");\n/* harmony import */ var unist_util_position__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! unist-util-position */ \"(ssr)/./node_modules/.pnpm/unist-util-position@5.0.0/node_modules/unist-util-position/lib/index.js\");\n/* harmony import */ var zwitch__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! zwitch */ \"(ssr)/./node_modules/.pnpm/zwitch@2.0.4/node_modules/zwitch/index.js\");\n/* harmony import */ var _handlers_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./handlers/index.js */ \"(ssr)/./node_modules/.pnpm/hast-util-to-estree@3.1.0/node_modules/hast-util-to-estree/lib/handlers/index.js\");\n/**\n * @typedef {import('estree').Comment} Comment\n * @typedef {import('estree').Directive} Directive\n * @typedef {import('estree').ModuleDeclaration} ModuleDeclaration\n * @typedef {import('estree').Node} EstreeNode\n * @typedef {import('estree').Statement} Statement\n *\n * @typedef {import('estree-jsx').JSXAttribute} JsxAttribute\n * @typedef {import('estree-jsx').JSXElement} JsxElement\n * @typedef {import('estree-jsx').JSXIdentifier} JsxIdentifier\n * @typedef {import('estree-jsx').JSXMemberExpression} JsxMemberExpression\n * @typedef {import('estree-jsx').JSXNamespacedName} JsxNamespacedName\n *\n * @typedef {import('mdast-util-mdx-jsx').MdxJsxAttribute} MdxJsxAttribute\n * @typedef {import('mdast-util-mdx-jsx').MdxJsxAttributeValueExpression} MdxJsxAttributeValueExpression\n * @typedef {import('mdast-util-mdx-jsx').MdxJsxExpressionAttribute} MdxJsxExpressionAttribute\n *\n * @typedef {import('hast').Nodes} HastNodes\n * @typedef {import('hast').Parents} HastParents\n *\n * @typedef {import('property-information').Schema} Schema\n */\n\n/**\n * @typedef {JsxElement['openingElement']['name']} JsxElementName\n * @typedef {JsxAttribute['name']} JsxAttributeName\n * @typedef {JsxElement['children'][number]} JsxChild\n */\n\n/**\n * @typedef {'html' | 'react'} ElementAttributeNameCase\n *   Specify casing to use for attribute names.\n *\n *   HTML casing is for example `class`, `stroke-linecap`, `xml:lang`.\n *   React casing is for example `className`, `strokeLinecap`, `xmlLang`.\n *\n * @callback Handle\n *   Turn a hast node into an estree node.\n * @param {any} node\n *   Expected hast node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {JsxChild | null | undefined}\n *   estree node.\n *\n * @typedef Options\n *   Configuration.\n * @property {ElementAttributeNameCase | null | undefined} [elementAttributeNameCase='react']\n *   Specify casing to use for attribute names (default: `'react'`).\n *\n *   This casing is used for hast elements, not for embedded MDX JSX nodes\n *   (components that someone authored manually).\n * @property {Record<string, Handle | null | undefined> | null | undefined} [handlers={}]\n *   Custom handlers (optional).\n * @property {Space | null | undefined} [space='html']\n *   Which space the document is in (default: `'html'`).\n *\n *   When an `<svg>` element is found in the HTML space, this package already\n *   automatically switches to and from the SVG space when entering and exiting\n *   it.\n * @property {StylePropertyNameCase | null | undefined} [stylePropertyNameCase='dom']\n *   Specify casing to use for property names in `style` objects (default: `'dom'`).\n *\n *   This casing is used for hast elements, not for embedded MDX JSX nodes\n *   (components that someone authored manually).\n * @property {boolean | null | undefined} [tableCellAlignToStyle=true]\n *   Turn obsolete `align` props on `td` and `th` into CSS `style` props\n *   (default: `true`).\n *\n * @typedef {'html' | 'svg'} Space\n *   Namespace.\n *\n * @typedef {'css' | 'dom'} StylePropertyNameCase\n *   Casing to use for property names in `style` objects.\n *\n *   CSS casing is for example `background-color` and `-webkit-line-clamp`.\n *   DOM casing is for example `backgroundColor` and `WebkitLineClamp`.\n *\n * @typedef State\n *   Info passed around about the current state.\n * @property {(parent: HastParents) => Array<JsxChild>} all\n *   Transform children of a hast parent to estree.\n * @property {Array<Comment>} comments\n *   List of estree comments.\n * @property {(name: string) => JsxAttributeName} createJsxAttributeName\n *   Create a JSX attribute name.\n * @property {(name: string) => JsxElementName} createJsxElementName\n *   Create a JSX element name.\n * @property {ElementAttributeNameCase} elementAttributeNameCase\n *   Casing to use for attribute names.\n * @property {Array<Directive | ModuleDeclaration | Statement>} esm\n *   List of top-level estree nodes.\n * @property {(node: any) => JsxChild | null | undefined} handle\n *   Transform a hast node to estree.\n * @property {(from: HastNodes | MdxJsxAttribute | MdxJsxAttributeValueExpression | MdxJsxExpressionAttribute, to: Comment | EstreeNode) => undefined} inherit\n *   Take positional info and data from `from` (use `patch` if you don’t want data).\n * @property {(from: HastNodes, to: Comment | EstreeNode) => undefined} patch\n *   Take positional info from `from` (use `inherit` if you also want data).\n * @property {Schema} schema\n *   Current schema.\n * @property {StylePropertyNameCase} stylePropertyNameCase\n *   Casing to use for property names in `style` objects.\n * @property {boolean} tableCellAlignToStyle\n *   Turn obsolete `align` props on `td` and `th` into CSS `style` props.\n */\n\n\n\n\n\n\n\nconst own = {}.hasOwnProperty\n\n// `react-dom` triggers a warning for *any* white space in tables.\n// To follow GFM, `mdast-util-to-hast` injects line endings between elements.\n// Other tools might do so too, but they don’t do here, so we remove all of\n// that.\n//\n// See: <https://github.com/facebook/react/pull/7081>.\n// See: <https://github.com/facebook/react/pull/7515>.\n// See: <https://github.com/remarkjs/remark-react/issues/64>.\n// See: <https://github.com/rehypejs/rehype-react/pull/29>.\n// See: <https://github.com/rehypejs/rehype-react/pull/32>.\n// See: <https://github.com/rehypejs/rehype-react/pull/45>.\n// See: <https://github.com/mdx-js/mdx/issues/2000>\nconst tableElements = new Set(['table', 'tbody', 'thead', 'tfoot', 'tr'])\n\n/**\n * Create a state from options.\n *\n * @param {Options} options\n *   Configuration.\n * @returns {State}\n *   Info passed around about the current state.\n */\n\nfunction createState(options) {\n  /** @type {Handle} */\n  const one = (0,zwitch__WEBPACK_IMPORTED_MODULE_0__.zwitch)('type', {\n    invalid,\n    unknown,\n    handlers: {..._handlers_index_js__WEBPACK_IMPORTED_MODULE_1__.handlers, ...options.handlers}\n  })\n\n  return {\n    // Current space.\n    elementAttributeNameCase: options.elementAttributeNameCase || 'react',\n    schema: options.space === 'svg' ? property_information__WEBPACK_IMPORTED_MODULE_2__.svg : property_information__WEBPACK_IMPORTED_MODULE_2__.html,\n    stylePropertyNameCase: options.stylePropertyNameCase || 'dom',\n    tableCellAlignToStyle: options.tableCellAlignToStyle !== false,\n    // Results.\n    comments: [],\n    esm: [],\n    // Useful functions.\n    all,\n    createJsxAttributeName,\n    createJsxElementName,\n    handle,\n    inherit,\n    patch\n  }\n\n  /**\n   * @this {State}\n   * @param {any} node\n   * @returns {JsxChild | null | undefined}\n   */\n  function handle(node) {\n    return one(node, this)\n  }\n}\n\n/**\n * Crash on an invalid value.\n *\n * @param {unknown} value\n *   Non-node.\n * @returns {never}\n *   Nothing (crashes).\n */\nfunction invalid(value) {\n  throw new Error('Cannot handle value `' + value + '`, expected node')\n}\n\n/**\n * Crash on an unknown node.\n *\n * @param {unknown} node\n *   Unknown node.\n * @returns {never}\n *   Nothing (crashes).\n */\nfunction unknown(node) {\n  (0,devlop__WEBPACK_IMPORTED_MODULE_3__.ok)(node && typeof node === 'object')\n  ;(0,devlop__WEBPACK_IMPORTED_MODULE_3__.ok)('type' in node)\n  throw new Error('Cannot handle unknown node `' + node.type + '`')\n}\n\n/**\n * @this {State} state\n *   Info passed around about the current state.\n * @param {HastParents} parent\n *   hast node whose children to transform.\n * @returns {Array<JsxChild>}\n *   estree nodes.\n */\nfunction all(parent) {\n  const children = parent.children || []\n  let index = -1\n  /** @type {Array<JsxChild>} */\n  const results = []\n  const ignoreLineBreak =\n    this.schema.space === 'html' &&\n    parent.type === 'element' &&\n    tableElements.has(parent.tagName.toLowerCase())\n\n  while (++index < children.length) {\n    const child = children[index]\n\n    if (ignoreLineBreak && child.type === 'text' && child.value === '\\n') {\n      continue\n    }\n\n    const result = this.handle(child)\n\n    if (Array.isArray(result)) {\n      results.push(...result)\n    } else if (result) {\n      results.push(result)\n    }\n  }\n\n  return results\n}\n\n/**\n * Take positional info and data from `hast`.\n *\n * Use `patch` if you don’t want data.\n *\n * @param {HastNodes | MdxJsxAttribute | MdxJsxAttributeValueExpression | MdxJsxExpressionAttribute} from\n *   hast node to take positional info and data from.\n * @param {Comment | EstreeNode} to\n *   estree node to add positional info and data to.\n * @returns {undefined}\n *   Nothing.\n */\nfunction inherit(from, to) {\n  const left = /** @type {Record<string, unknown> | undefined} */ (from.data)\n  /** @type {Record<string, unknown> | undefined} */\n  let right\n  /** @type {string} */\n  let key\n\n  patch(from, to)\n\n  if (left) {\n    for (key in left) {\n      if (own.call(left, key) && key !== 'estree') {\n        if (!right) right = {}\n        right[key] = left[key]\n      }\n    }\n\n    if (right) {\n      // @ts-expect-error `esast` extension.\n      to.data = right\n    }\n  }\n}\n\n/**\n * Take positional info from `from`.\n *\n * Use `inherit` if you also want data.\n *\n * @param {HastNodes | MdxJsxAttribute | MdxJsxAttributeValueExpression | MdxJsxExpressionAttribute} from\n *   hast node to take positional info from.\n * @param {Comment | EstreeNode} to\n *   estree node to add positional info to.\n * @returns {undefined}\n *   Nothing.\n */\nfunction patch(from, to) {\n  const p = (0,unist_util_position__WEBPACK_IMPORTED_MODULE_4__.position)(from)\n\n  if (p && p.start.offset !== undefined && p.end.offset !== undefined) {\n    // @ts-expect-error acorn-style.\n    to.start = p.start.offset\n    // @ts-expect-error acorn-style.\n    to.end = p.end.offset\n    to.loc = {\n      start: {line: p.start.line, column: p.start.column - 1},\n      end: {line: p.end.line, column: p.end.column - 1}\n    }\n    to.range = [p.start.offset, p.end.offset]\n  }\n}\n\n/**\n * Create a JSX attribute name.\n *\n * @param {string} name\n * @returns {JsxAttributeName}\n */\nfunction createJsxAttributeName(name) {\n  const node = createJsxNameFromString(name)\n\n  // MDX never generates this.\n  /* c8 ignore next 3 */\n  if (node.type === 'JSXMemberExpression') {\n    throw new Error('Member expressions in attribute names are not supported')\n  }\n\n  return node\n}\n\n/**\n * Create a JSX element name.\n *\n * @param {string} name\n * @returns {JsxElementName}\n */\nfunction createJsxElementName(name) {\n  return createJsxNameFromString(name)\n}\n\n/**\n * Create a JSX name from a string.\n *\n * @param {string} name\n *   Name.\n * @returns {JsxIdentifier | JsxMemberExpression | JsxNamespacedName}\n *   Node.\n */\nfunction createJsxNameFromString(name) {\n  if (name.includes('.')) {\n    const names = name.split('.')\n    let part = names.shift()\n    ;(0,devlop__WEBPACK_IMPORTED_MODULE_3__.ok)(part, 'Expected `part` to be defined')\n    /** @type {JsxIdentifier | JsxMemberExpression} */\n    let node = {type: 'JSXIdentifier', name: part}\n\n    while ((part = names.shift())) {\n      node = {\n        type: 'JSXMemberExpression',\n        object: node,\n        property: {type: 'JSXIdentifier', name: part}\n      }\n    }\n\n    return node\n  }\n\n  if (name.includes(':')) {\n    const parts = name.split(':')\n    return {\n      type: 'JSXNamespacedName',\n      namespace: {type: 'JSXIdentifier', name: parts[0]},\n      name: {type: 'JSXIdentifier', name: parts[1]}\n    }\n  }\n\n  return {type: 'JSXIdentifier', name}\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/hast-util-to-estree@3.1.0/node_modules/hast-util-to-estree/lib/state.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/hast-util-to-estree@3.1.0/node_modules/hast-util-to-estree/lib/handlers/comment.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/hast-util-to-estree@3.1.0/node_modules/hast-util-to-estree/lib/handlers/comment.js ***!
  \***************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   comment: () => (/* binding */ comment)\n/* harmony export */ });\n/**\n * @typedef {import('estree').Comment} Comment\n *\n * @typedef {import('estree-jsx').JSXEmptyExpression} JsxEmptyExpression\n * @typedef {import('estree-jsx').JSXExpressionContainer} JsxExpressionContainer\n *\n * @typedef {import('hast').Comment} HastComment\n *\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn a hast comment into an estree node.\n *\n * @param {HastComment} node\n *   hast node to transform.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {JsxExpressionContainer}\n *   estree expression.\n */\nfunction comment(node, state) {\n  /** @type {Comment} */\n  const result = {type: 'Block', value: node.value}\n  state.inherit(node, result)\n  state.comments.push(result)\n\n  /** @type {JsxEmptyExpression} */\n  const expression = {\n    type: 'JSXEmptyExpression',\n    // @ts-expect-error: `comments` is custom.\n    comments: [Object.assign({}, result, {leading: false, trailing: true})]\n  }\n  state.patch(node, expression)\n\n  /** @type {JsxExpressionContainer} */\n  const container = {type: 'JSXExpressionContainer', expression}\n  state.patch(node, container)\n  return container\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vaGFzdC11dGlsLXRvLWVzdHJlZUAzLjEuMC9ub2RlX21vZHVsZXMvaGFzdC11dGlsLXRvLWVzdHJlZS9saWIvaGFuZGxlcnMvY29tbWVudC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQSxhQUFhLDBCQUEwQjtBQUN2QztBQUNBLGFBQWEseUNBQXlDO0FBQ3RELGFBQWEsNkNBQTZDO0FBQzFEO0FBQ0EsYUFBYSx3QkFBd0I7QUFDckM7QUFDQSxhQUFhLDZCQUE2QjtBQUMxQzs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsYUFBYTtBQUN4QjtBQUNBLFdBQVcsT0FBTztBQUNsQjtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ087QUFDUCxhQUFhLFNBQVM7QUFDdEIsa0JBQWtCO0FBQ2xCO0FBQ0E7O0FBRUEsYUFBYSxvQkFBb0I7QUFDakM7QUFDQTtBQUNBO0FBQ0EsK0JBQStCLFdBQVcsK0JBQStCO0FBQ3pFO0FBQ0E7O0FBRUEsYUFBYSx3QkFBd0I7QUFDckMscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2NibV8yMDI0Ly4vbm9kZV9tb2R1bGVzLy5wbnBtL2hhc3QtdXRpbC10by1lc3RyZWVAMy4xLjAvbm9kZV9tb2R1bGVzL2hhc3QtdXRpbC10by1lc3RyZWUvbGliL2hhbmRsZXJzL2NvbW1lbnQuanM/NTUzNiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ2VzdHJlZScpLkNvbW1lbnR9IENvbW1lbnRcbiAqXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdlc3RyZWUtanN4JykuSlNYRW1wdHlFeHByZXNzaW9ufSBKc3hFbXB0eUV4cHJlc3Npb25cbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ2VzdHJlZS1qc3gnKS5KU1hFeHByZXNzaW9uQ29udGFpbmVyfSBKc3hFeHByZXNzaW9uQ29udGFpbmVyXG4gKlxuICogQHR5cGVkZWYge2ltcG9ydCgnaGFzdCcpLkNvbW1lbnR9IEhhc3RDb21tZW50XG4gKlxuICogQHR5cGVkZWYge2ltcG9ydCgnLi4vc3RhdGUuanMnKS5TdGF0ZX0gU3RhdGVcbiAqL1xuXG4vLyBNYWtlIFZTIENvZGUgc2hvdyByZWZlcmVuY2VzIHRvIHRoZSBhYm92ZSB0eXBlcy5cbicnXG5cbi8qKlxuICogVHVybiBhIGhhc3QgY29tbWVudCBpbnRvIGFuIGVzdHJlZSBub2RlLlxuICpcbiAqIEBwYXJhbSB7SGFzdENvbW1lbnR9IG5vZGVcbiAqICAgaGFzdCBub2RlIHRvIHRyYW5zZm9ybS5cbiAqIEBwYXJhbSB7U3RhdGV9IHN0YXRlXG4gKiAgIEluZm8gcGFzc2VkIGFyb3VuZCBhYm91dCB0aGUgY3VycmVudCBzdGF0ZS5cbiAqIEByZXR1cm5zIHtKc3hFeHByZXNzaW9uQ29udGFpbmVyfVxuICogICBlc3RyZWUgZXhwcmVzc2lvbi5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNvbW1lbnQobm9kZSwgc3RhdGUpIHtcbiAgLyoqIEB0eXBlIHtDb21tZW50fSAqL1xuICBjb25zdCByZXN1bHQgPSB7dHlwZTogJ0Jsb2NrJywgdmFsdWU6IG5vZGUudmFsdWV9XG4gIHN0YXRlLmluaGVyaXQobm9kZSwgcmVzdWx0KVxuICBzdGF0ZS5jb21tZW50cy5wdXNoKHJlc3VsdClcblxuICAvKiogQHR5cGUge0pzeEVtcHR5RXhwcmVzc2lvbn0gKi9cbiAgY29uc3QgZXhwcmVzc2lvbiA9IHtcbiAgICB0eXBlOiAnSlNYRW1wdHlFeHByZXNzaW9uJyxcbiAgICAvLyBAdHMtZXhwZWN0LWVycm9yOiBgY29tbWVudHNgIGlzIGN1c3RvbS5cbiAgICBjb21tZW50czogW09iamVjdC5hc3NpZ24oe30sIHJlc3VsdCwge2xlYWRpbmc6IGZhbHNlLCB0cmFpbGluZzogdHJ1ZX0pXVxuICB9XG4gIHN0YXRlLnBhdGNoKG5vZGUsIGV4cHJlc3Npb24pXG5cbiAgLyoqIEB0eXBlIHtKc3hFeHByZXNzaW9uQ29udGFpbmVyfSAqL1xuICBjb25zdCBjb250YWluZXIgPSB7dHlwZTogJ0pTWEV4cHJlc3Npb25Db250YWluZXInLCBleHByZXNzaW9ufVxuICBzdGF0ZS5wYXRjaChub2RlLCBjb250YWluZXIpXG4gIHJldHVybiBjb250YWluZXJcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/hast-util-to-estree@3.1.0/node_modules/hast-util-to-estree/lib/handlers/comment.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/hast-util-to-estree@3.1.0/node_modules/hast-util-to-estree/lib/handlers/element.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/hast-util-to-estree@3.1.0/node_modules/hast-util-to-estree/lib/handlers/element.js ***!
  \***************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   element: () => (/* binding */ element)\n/* harmony export */ });\n/* harmony import */ var comma_separated_tokens__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! comma-separated-tokens */ \"(rsc)/./node_modules/.pnpm/comma-separated-tokens@2.0.3/node_modules/comma-separated-tokens/index.js\");\n/* harmony import */ var estree_util_is_identifier_name__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! estree-util-is-identifier-name */ \"(rsc)/./node_modules/.pnpm/estree-util-is-identifier-name@3.0.0/node_modules/estree-util-is-identifier-name/lib/index.js\");\n/* harmony import */ var property_information__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! property-information */ \"(rsc)/./node_modules/.pnpm/property-information@6.5.0/node_modules/property-information/index.js\");\n/* harmony import */ var property_information__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! property-information */ \"(rsc)/./node_modules/.pnpm/property-information@6.5.0/node_modules/property-information/lib/find.js\");\n/* harmony import */ var property_information__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! property-information */ \"(rsc)/./node_modules/.pnpm/property-information@6.5.0/node_modules/property-information/lib/hast-to-react.js\");\n/* harmony import */ var space_separated_tokens__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! space-separated-tokens */ \"(rsc)/./node_modules/.pnpm/space-separated-tokens@2.0.2/node_modules/space-separated-tokens/index.js\");\n/* harmony import */ var style_to_object__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! style-to-object */ \"(rsc)/./node_modules/.pnpm/style-to-object@0.4.4/node_modules/style-to-object/index.mjs\");\n/**\n * @typedef {import('estree').Property} Property\n *\n * @typedef {import('estree-jsx').JSXAttribute} JsxAttribute\n * @typedef {import('estree-jsx').JSXElement} JsxElement\n * @typedef {import('estree-jsx').JSXSpreadAttribute} JsxSpreadAttribute\n *\n * @typedef {import('hast').Element} HastElement\n *\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * @typedef {Record<string, string>} Style\n */\n\n\n\n\n\n\n\nconst own = {}.hasOwnProperty\nconst cap = /[A-Z]/g\nconst dashSomething = /-([a-z])/g\n\nconst tableCellElement = new Set(['td', 'th'])\n\n/**\n * Turn a hast element into an estree node.\n *\n * @param {HastElement} node\n *   hast node to transform.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {JsxElement}\n *   estree expression.\n */\n// eslint-disable-next-line complexity\nfunction element(node, state) {\n  const parentSchema = state.schema\n  let schema = parentSchema\n  const props = node.properties || {}\n\n  if (parentSchema.space === 'html' && node.tagName.toLowerCase() === 'svg') {\n    schema = property_information__WEBPACK_IMPORTED_MODULE_1__.svg\n    state.schema = schema\n  }\n\n  const children = state.all(node)\n\n  /** @type {Array<JsxAttribute | JsxSpreadAttribute>} */\n  const attributes = []\n  /** @type {string} */\n  let prop\n  /** @type {string | undefined} */\n  let alignValue\n  /** @type {Array<Property> | undefined} */\n  let styleProperties\n\n  for (prop in props) {\n    if (own.call(props, prop)) {\n      let value = props[prop]\n      const info = (0,property_information__WEBPACK_IMPORTED_MODULE_2__.find)(schema, prop)\n      /** @type {JsxAttribute['value']} */\n      let attributeValue\n\n      // Ignore nullish and `NaN` values.\n      // Ignore `false` and falsey known booleans.\n      if (\n        value === null ||\n        value === undefined ||\n        value === false ||\n        (typeof value === 'number' && Number.isNaN(value)) ||\n        (!value && info.boolean)\n      ) {\n        continue\n      }\n\n      prop =\n        state.elementAttributeNameCase === 'react' && info.space\n          ? property_information__WEBPACK_IMPORTED_MODULE_3__.hastToReact[info.property] || info.property\n          : info.attribute\n\n      if (Array.isArray(value)) {\n        // Accept `array`.\n        // Most props are space-separated.\n        value = info.commaSeparated ? (0,comma_separated_tokens__WEBPACK_IMPORTED_MODULE_4__.stringify)(value) : (0,space_separated_tokens__WEBPACK_IMPORTED_MODULE_5__.stringify)(value)\n      }\n\n      if (prop === 'style') {\n        let styleObject =\n          typeof value === 'object'\n            ? value\n            : parseStyle(String(value), node.tagName)\n\n        if (state.stylePropertyNameCase === 'css') {\n          styleObject = transformStylesToCssCasing(styleObject)\n        }\n\n        /** @type {Array<Property>} */\n        const cssProperties = []\n        /** @type {string} */\n        let cssProp\n\n        for (cssProp in styleObject) {\n          // eslint-disable-next-line max-depth\n          if (own.call(styleObject, cssProp)) {\n            cssProperties.push({\n              type: 'Property',\n              method: false,\n              shorthand: false,\n              computed: false,\n              key: (0,estree_util_is_identifier_name__WEBPACK_IMPORTED_MODULE_6__.name)(cssProp)\n                ? {type: 'Identifier', name: cssProp}\n                : {type: 'Literal', value: cssProp},\n              value: {type: 'Literal', value: String(styleObject[cssProp])},\n              kind: 'init'\n            })\n          }\n        }\n\n        styleProperties = cssProperties\n        attributeValue = {\n          type: 'JSXExpressionContainer',\n          expression: {type: 'ObjectExpression', properties: cssProperties}\n        }\n      } else if (value === true) {\n        attributeValue = null\n      } else if (\n        state.tableCellAlignToStyle &&\n        tableCellElement.has(node.tagName) &&\n        prop === 'align'\n      ) {\n        alignValue = String(value)\n        continue\n      } else {\n        attributeValue = {type: 'Literal', value: String(value)}\n      }\n\n      if ((0,estree_util_is_identifier_name__WEBPACK_IMPORTED_MODULE_6__.name)(prop, {jsx: true})) {\n        attributes.push({\n          type: 'JSXAttribute',\n          name: {type: 'JSXIdentifier', name: prop},\n          value: attributeValue\n        })\n      } else {\n        attributes.push({\n          type: 'JSXSpreadAttribute',\n          argument: {\n            type: 'ObjectExpression',\n            properties: [\n              {\n                type: 'Property',\n                method: false,\n                shorthand: false,\n                computed: false,\n                key: {type: 'Literal', value: String(prop)},\n                // @ts-expect-error No need to worry about `style` (which has a\n                // `JSXExpressionContainer` value) because that’s a valid identifier.\n                value: attributeValue || {type: 'Literal', value: true},\n                kind: 'init'\n              }\n            ]\n          }\n        })\n      }\n    }\n  }\n\n  if (alignValue !== undefined) {\n    if (!styleProperties) {\n      styleProperties = []\n      attributes.push({\n        type: 'JSXAttribute',\n        name: {type: 'JSXIdentifier', name: 'style'},\n        value: {\n          type: 'JSXExpressionContainer',\n          expression: {type: 'ObjectExpression', properties: styleProperties}\n        }\n      })\n    }\n\n    const cssProp =\n      state.stylePropertyNameCase === 'css'\n        ? transformStyleToCssCasing('textAlign')\n        : 'textAlign'\n\n    styleProperties.push({\n      type: 'Property',\n      method: false,\n      shorthand: false,\n      computed: false,\n      key: (0,estree_util_is_identifier_name__WEBPACK_IMPORTED_MODULE_6__.name)(cssProp)\n        ? {type: 'Identifier', name: cssProp}\n        : {type: 'Literal', value: cssProp},\n      value: {type: 'Literal', value: alignValue},\n      kind: 'init'\n    })\n  }\n\n  // Restore parent schema.\n  state.schema = parentSchema\n\n  /** @type {JsxElement} */\n  const result = {\n    type: 'JSXElement',\n    openingElement: {\n      type: 'JSXOpeningElement',\n      attributes,\n      name: state.createJsxElementName(node.tagName),\n      selfClosing: children.length === 0\n    },\n    closingElement:\n      children.length > 0\n        ? {\n            type: 'JSXClosingElement',\n            name: state.createJsxElementName(node.tagName)\n          }\n        : null,\n    children\n  }\n  state.inherit(node, result)\n  return result\n}\n\n/**\n * Parse CSS rules as a declaration.\n *\n * @param {string} value\n *   CSS text.\n * @param {string} tagName\n *   Element name.\n * @returns {Style}\n *   Props.\n */\nfunction parseStyle(value, tagName) {\n  /** @type {Style} */\n  const result = {}\n\n  try {\n    ;(0,style_to_object__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(value, iterator)\n  } catch (error) {\n    const cause = /** @type {Error} */ (error)\n    const exception = new Error(\n      'Could not parse `style` attribute on `' + tagName + '`',\n      {cause}\n    )\n    throw exception\n  }\n\n  return result\n\n  /**\n   * Add `name`, as a CSS prop, to `result`.\n   *\n   * @param {string} name\n   *   Key.\n   * @param {string} value\n   *   Value.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function iterator(name, value) {\n    let key = name\n\n    if (key.slice(0, 2) !== '--') {\n      // See: <https://alanhogan.com/code/vendor-prefixed-css-property-names-in-javascript>\n      if (key.slice(0, 4) === '-ms-') key = 'ms-' + key.slice(4)\n      key = key.replace(dashSomething, toCamel)\n    }\n\n    result[key] = value\n  }\n}\n\n/**\n * Transform a DOM casing style object to a CSS casing style object.\n *\n * @param {Style} domCasing\n * @returns {Style}\n */\nfunction transformStylesToCssCasing(domCasing) {\n  /** @type {Style} */\n  const cssCasing = {}\n  /** @type {string} */\n  let from\n\n  for (from in domCasing) {\n    if (own.call(domCasing, from)) {\n      cssCasing[transformStyleToCssCasing(from)] = domCasing[from]\n    }\n  }\n\n  return cssCasing\n}\n\n/**\n * Transform a DOM casing style prop to a CSS casing style prop.\n *\n * @param {string} from\n * @returns {string}\n */\nfunction transformStyleToCssCasing(from) {\n  let to = from.replace(cap, toDash)\n  // Handle `ms-xxx` -> `-ms-xxx`.\n  if (to.slice(0, 3) === 'ms-') to = '-' + to\n  return to\n}\n\n/**\n * Make `$1` capitalized.\n *\n * @param {string} _\n *   Whatever.\n * @param {string} $1\n *   Single ASCII alphabetical.\n * @returns {string}\n *   Capitalized `$1`.\n */\nfunction toCamel(_, $1) {\n  return $1.toUpperCase()\n}\n\n/**\n * Make `$0` dash cased.\n *\n * @param {string} $0\n *   Capitalized ASCII leter.\n * @returns {string}\n *   Dash and lower letter.\n */\nfunction toDash($0) {\n  return '-' + $0.toLowerCase()\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vaGFzdC11dGlsLXRvLWVzdHJlZUAzLjEuMC9ub2RlX21vZHVsZXMvaGFzdC11dGlsLXRvLWVzdHJlZS9saWIvaGFuZGxlcnMvZWxlbWVudC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFBO0FBQ0EsYUFBYSwyQkFBMkI7QUFDeEM7QUFDQSxhQUFhLG1DQUFtQztBQUNoRCxhQUFhLGlDQUFpQztBQUM5QyxhQUFhLHlDQUF5QztBQUN0RDtBQUNBLGFBQWEsd0JBQXdCO0FBQ3JDO0FBQ0EsYUFBYSw2QkFBNkI7QUFDMUM7O0FBRUE7QUFDQSxhQUFhLHdCQUF3QjtBQUNyQzs7QUFFMEQ7QUFDVztBQUNWO0FBQ0Q7QUFDZjs7QUFFM0MsY0FBYztBQUNkO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyxhQUFhO0FBQ3hCO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBOztBQUVBO0FBQ0EsYUFBYSxxREFBRztBQUNoQjtBQUNBOztBQUVBOztBQUVBLGFBQWEsMENBQTBDO0FBQ3ZEO0FBQ0EsYUFBYSxRQUFRO0FBQ3JCO0FBQ0EsYUFBYSxvQkFBb0I7QUFDakM7QUFDQSxhQUFhLDZCQUE2QjtBQUMxQzs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsMERBQUk7QUFDdkIsaUJBQWlCLHVCQUF1QjtBQUN4Qzs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxZQUFZLDZEQUFXO0FBQ3ZCOztBQUVBO0FBQ0E7QUFDQTtBQUNBLHNDQUFzQyxpRUFBTSxVQUFVLGlFQUFNO0FBQzVEOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBLG1CQUFtQixpQkFBaUI7QUFDcEM7QUFDQSxtQkFBbUIsUUFBUTtBQUMzQjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLG9FQUFjO0FBQ2pDLG1CQUFtQjtBQUNuQixtQkFBbUIsZ0NBQWdDO0FBQ25ELHNCQUFzQixxREFBcUQ7QUFDM0U7QUFDQSxhQUFhO0FBQ2I7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUI7QUFDdkI7QUFDQSxRQUFRO0FBQ1I7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSLDBCQUEwQjtBQUMxQjs7QUFFQSxVQUFVLG9FQUFjLFFBQVEsVUFBVTtBQUMxQztBQUNBO0FBQ0EsaUJBQWlCLGtDQUFrQztBQUNuRDtBQUNBLFNBQVM7QUFDVCxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0IscUNBQXFDO0FBQzNEO0FBQ0E7QUFDQSwwQ0FBMEMsNkJBQTZCO0FBQ3ZFO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxxQ0FBcUM7QUFDcEQ7QUFDQTtBQUNBLHVCQUF1QjtBQUN2QjtBQUNBLE9BQU87QUFDUDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxvRUFBYztBQUN6QixXQUFXO0FBQ1gsV0FBVyxnQ0FBZ0M7QUFDM0MsY0FBYyxtQ0FBbUM7QUFDakQ7QUFDQSxLQUFLO0FBQ0w7O0FBRUE7QUFDQTs7QUFFQSxhQUFhLFlBQVk7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQjtBQUNBLFdBQVcsUUFBUTtBQUNuQjtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSxhQUFhLE9BQU87QUFDcEI7O0FBRUE7QUFDQSxJQUFJLDREQUFhO0FBQ2pCLElBQUk7QUFDSiw2QkFBNkIsT0FBTztBQUNwQztBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLFFBQVE7QUFDckI7QUFDQSxhQUFhLFFBQVE7QUFDckI7QUFDQSxlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLGFBQWE7QUFDYjtBQUNBO0FBQ0EsYUFBYSxPQUFPO0FBQ3BCO0FBQ0EsYUFBYSxRQUFRO0FBQ3JCOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQjtBQUNBLFdBQVcsUUFBUTtBQUNuQjtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQjtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2JtXzIwMjQvLi9ub2RlX21vZHVsZXMvLnBucG0vaGFzdC11dGlsLXRvLWVzdHJlZUAzLjEuMC9ub2RlX21vZHVsZXMvaGFzdC11dGlsLXRvLWVzdHJlZS9saWIvaGFuZGxlcnMvZWxlbWVudC5qcz9iMjVmIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQHR5cGVkZWYge2ltcG9ydCgnZXN0cmVlJykuUHJvcGVydHl9IFByb3BlcnR5XG4gKlxuICogQHR5cGVkZWYge2ltcG9ydCgnZXN0cmVlLWpzeCcpLkpTWEF0dHJpYnV0ZX0gSnN4QXR0cmlidXRlXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdlc3RyZWUtanN4JykuSlNYRWxlbWVudH0gSnN4RWxlbWVudFxuICogQHR5cGVkZWYge2ltcG9ydCgnZXN0cmVlLWpzeCcpLkpTWFNwcmVhZEF0dHJpYnV0ZX0gSnN4U3ByZWFkQXR0cmlidXRlXG4gKlxuICogQHR5cGVkZWYge2ltcG9ydCgnaGFzdCcpLkVsZW1lbnR9IEhhc3RFbGVtZW50XG4gKlxuICogQHR5cGVkZWYge2ltcG9ydCgnLi4vc3RhdGUuanMnKS5TdGF0ZX0gU3RhdGVcbiAqL1xuXG4vKipcbiAqIEB0eXBlZGVmIHtSZWNvcmQ8c3RyaW5nLCBzdHJpbmc+fSBTdHlsZVxuICovXG5cbmltcG9ydCB7c3RyaW5naWZ5IGFzIGNvbW1hc30gZnJvbSAnY29tbWEtc2VwYXJhdGVkLXRva2VucydcbmltcG9ydCB7bmFtZSBhcyBpZGVudGlmaWVyTmFtZX0gZnJvbSAnZXN0cmVlLXV0aWwtaXMtaWRlbnRpZmllci1uYW1lJ1xuaW1wb3J0IHtmaW5kLCBoYXN0VG9SZWFjdCwgc3ZnfSBmcm9tICdwcm9wZXJ0eS1pbmZvcm1hdGlvbidcbmltcG9ydCB7c3RyaW5naWZ5IGFzIHNwYWNlc30gZnJvbSAnc3BhY2Utc2VwYXJhdGVkLXRva2VucydcbmltcG9ydCBzdHlsZVRvT2JqZWN0IGZyb20gJ3N0eWxlLXRvLW9iamVjdCdcblxuY29uc3Qgb3duID0ge30uaGFzT3duUHJvcGVydHlcbmNvbnN0IGNhcCA9IC9bQS1aXS9nXG5jb25zdCBkYXNoU29tZXRoaW5nID0gLy0oW2Etel0pL2dcblxuY29uc3QgdGFibGVDZWxsRWxlbWVudCA9IG5ldyBTZXQoWyd0ZCcsICd0aCddKVxuXG4vKipcbiAqIFR1cm4gYSBoYXN0IGVsZW1lbnQgaW50byBhbiBlc3RyZWUgbm9kZS5cbiAqXG4gKiBAcGFyYW0ge0hhc3RFbGVtZW50fSBub2RlXG4gKiAgIGhhc3Qgbm9kZSB0byB0cmFuc2Zvcm0uXG4gKiBAcGFyYW0ge1N0YXRlfSBzdGF0ZVxuICogICBJbmZvIHBhc3NlZCBhcm91bmQgYWJvdXQgdGhlIGN1cnJlbnQgc3RhdGUuXG4gKiBAcmV0dXJucyB7SnN4RWxlbWVudH1cbiAqICAgZXN0cmVlIGV4cHJlc3Npb24uXG4gKi9cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBjb21wbGV4aXR5XG5leHBvcnQgZnVuY3Rpb24gZWxlbWVudChub2RlLCBzdGF0ZSkge1xuICBjb25zdCBwYXJlbnRTY2hlbWEgPSBzdGF0ZS5zY2hlbWFcbiAgbGV0IHNjaGVtYSA9IHBhcmVudFNjaGVtYVxuICBjb25zdCBwcm9wcyA9IG5vZGUucHJvcGVydGllcyB8fCB7fVxuXG4gIGlmIChwYXJlbnRTY2hlbWEuc3BhY2UgPT09ICdodG1sJyAmJiBub2RlLnRhZ05hbWUudG9Mb3dlckNhc2UoKSA9PT0gJ3N2ZycpIHtcbiAgICBzY2hlbWEgPSBzdmdcbiAgICBzdGF0ZS5zY2hlbWEgPSBzY2hlbWFcbiAgfVxuXG4gIGNvbnN0IGNoaWxkcmVuID0gc3RhdGUuYWxsKG5vZGUpXG5cbiAgLyoqIEB0eXBlIHtBcnJheTxKc3hBdHRyaWJ1dGUgfCBKc3hTcHJlYWRBdHRyaWJ1dGU+fSAqL1xuICBjb25zdCBhdHRyaWJ1dGVzID0gW11cbiAgLyoqIEB0eXBlIHtzdHJpbmd9ICovXG4gIGxldCBwcm9wXG4gIC8qKiBAdHlwZSB7c3RyaW5nIHwgdW5kZWZpbmVkfSAqL1xuICBsZXQgYWxpZ25WYWx1ZVxuICAvKiogQHR5cGUge0FycmF5PFByb3BlcnR5PiB8IHVuZGVmaW5lZH0gKi9cbiAgbGV0IHN0eWxlUHJvcGVydGllc1xuXG4gIGZvciAocHJvcCBpbiBwcm9wcykge1xuICAgIGlmIChvd24uY2FsbChwcm9wcywgcHJvcCkpIHtcbiAgICAgIGxldCB2YWx1ZSA9IHByb3BzW3Byb3BdXG4gICAgICBjb25zdCBpbmZvID0gZmluZChzY2hlbWEsIHByb3ApXG4gICAgICAvKiogQHR5cGUge0pzeEF0dHJpYnV0ZVsndmFsdWUnXX0gKi9cbiAgICAgIGxldCBhdHRyaWJ1dGVWYWx1ZVxuXG4gICAgICAvLyBJZ25vcmUgbnVsbGlzaCBhbmQgYE5hTmAgdmFsdWVzLlxuICAgICAgLy8gSWdub3JlIGBmYWxzZWAgYW5kIGZhbHNleSBrbm93biBib29sZWFucy5cbiAgICAgIGlmIChcbiAgICAgICAgdmFsdWUgPT09IG51bGwgfHxcbiAgICAgICAgdmFsdWUgPT09IHVuZGVmaW5lZCB8fFxuICAgICAgICB2YWx1ZSA9PT0gZmFsc2UgfHxcbiAgICAgICAgKHR5cGVvZiB2YWx1ZSA9PT0gJ251bWJlcicgJiYgTnVtYmVyLmlzTmFOKHZhbHVlKSkgfHxcbiAgICAgICAgKCF2YWx1ZSAmJiBpbmZvLmJvb2xlYW4pXG4gICAgICApIHtcbiAgICAgICAgY29udGludWVcbiAgICAgIH1cblxuICAgICAgcHJvcCA9XG4gICAgICAgIHN0YXRlLmVsZW1lbnRBdHRyaWJ1dGVOYW1lQ2FzZSA9PT0gJ3JlYWN0JyAmJiBpbmZvLnNwYWNlXG4gICAgICAgICAgPyBoYXN0VG9SZWFjdFtpbmZvLnByb3BlcnR5XSB8fCBpbmZvLnByb3BlcnR5XG4gICAgICAgICAgOiBpbmZvLmF0dHJpYnV0ZVxuXG4gICAgICBpZiAoQXJyYXkuaXNBcnJheSh2YWx1ZSkpIHtcbiAgICAgICAgLy8gQWNjZXB0IGBhcnJheWAuXG4gICAgICAgIC8vIE1vc3QgcHJvcHMgYXJlIHNwYWNlLXNlcGFyYXRlZC5cbiAgICAgICAgdmFsdWUgPSBpbmZvLmNvbW1hU2VwYXJhdGVkID8gY29tbWFzKHZhbHVlKSA6IHNwYWNlcyh2YWx1ZSlcbiAgICAgIH1cblxuICAgICAgaWYgKHByb3AgPT09ICdzdHlsZScpIHtcbiAgICAgICAgbGV0IHN0eWxlT2JqZWN0ID1cbiAgICAgICAgICB0eXBlb2YgdmFsdWUgPT09ICdvYmplY3QnXG4gICAgICAgICAgICA/IHZhbHVlXG4gICAgICAgICAgICA6IHBhcnNlU3R5bGUoU3RyaW5nKHZhbHVlKSwgbm9kZS50YWdOYW1lKVxuXG4gICAgICAgIGlmIChzdGF0ZS5zdHlsZVByb3BlcnR5TmFtZUNhc2UgPT09ICdjc3MnKSB7XG4gICAgICAgICAgc3R5bGVPYmplY3QgPSB0cmFuc2Zvcm1TdHlsZXNUb0Nzc0Nhc2luZyhzdHlsZU9iamVjdClcbiAgICAgICAgfVxuXG4gICAgICAgIC8qKiBAdHlwZSB7QXJyYXk8UHJvcGVydHk+fSAqL1xuICAgICAgICBjb25zdCBjc3NQcm9wZXJ0aWVzID0gW11cbiAgICAgICAgLyoqIEB0eXBlIHtzdHJpbmd9ICovXG4gICAgICAgIGxldCBjc3NQcm9wXG5cbiAgICAgICAgZm9yIChjc3NQcm9wIGluIHN0eWxlT2JqZWN0KSB7XG4gICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG1heC1kZXB0aFxuICAgICAgICAgIGlmIChvd24uY2FsbChzdHlsZU9iamVjdCwgY3NzUHJvcCkpIHtcbiAgICAgICAgICAgIGNzc1Byb3BlcnRpZXMucHVzaCh7XG4gICAgICAgICAgICAgIHR5cGU6ICdQcm9wZXJ0eScsXG4gICAgICAgICAgICAgIG1ldGhvZDogZmFsc2UsXG4gICAgICAgICAgICAgIHNob3J0aGFuZDogZmFsc2UsXG4gICAgICAgICAgICAgIGNvbXB1dGVkOiBmYWxzZSxcbiAgICAgICAgICAgICAga2V5OiBpZGVudGlmaWVyTmFtZShjc3NQcm9wKVxuICAgICAgICAgICAgICAgID8ge3R5cGU6ICdJZGVudGlmaWVyJywgbmFtZTogY3NzUHJvcH1cbiAgICAgICAgICAgICAgICA6IHt0eXBlOiAnTGl0ZXJhbCcsIHZhbHVlOiBjc3NQcm9wfSxcbiAgICAgICAgICAgICAgdmFsdWU6IHt0eXBlOiAnTGl0ZXJhbCcsIHZhbHVlOiBTdHJpbmcoc3R5bGVPYmplY3RbY3NzUHJvcF0pfSxcbiAgICAgICAgICAgICAga2luZDogJ2luaXQnXG4gICAgICAgICAgICB9KVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIHN0eWxlUHJvcGVydGllcyA9IGNzc1Byb3BlcnRpZXNcbiAgICAgICAgYXR0cmlidXRlVmFsdWUgPSB7XG4gICAgICAgICAgdHlwZTogJ0pTWEV4cHJlc3Npb25Db250YWluZXInLFxuICAgICAgICAgIGV4cHJlc3Npb246IHt0eXBlOiAnT2JqZWN0RXhwcmVzc2lvbicsIHByb3BlcnRpZXM6IGNzc1Byb3BlcnRpZXN9XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSBpZiAodmFsdWUgPT09IHRydWUpIHtcbiAgICAgICAgYXR0cmlidXRlVmFsdWUgPSBudWxsXG4gICAgICB9IGVsc2UgaWYgKFxuICAgICAgICBzdGF0ZS50YWJsZUNlbGxBbGlnblRvU3R5bGUgJiZcbiAgICAgICAgdGFibGVDZWxsRWxlbWVudC5oYXMobm9kZS50YWdOYW1lKSAmJlxuICAgICAgICBwcm9wID09PSAnYWxpZ24nXG4gICAgICApIHtcbiAgICAgICAgYWxpZ25WYWx1ZSA9IFN0cmluZyh2YWx1ZSlcbiAgICAgICAgY29udGludWVcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGF0dHJpYnV0ZVZhbHVlID0ge3R5cGU6ICdMaXRlcmFsJywgdmFsdWU6IFN0cmluZyh2YWx1ZSl9XG4gICAgICB9XG5cbiAgICAgIGlmIChpZGVudGlmaWVyTmFtZShwcm9wLCB7anN4OiB0cnVlfSkpIHtcbiAgICAgICAgYXR0cmlidXRlcy5wdXNoKHtcbiAgICAgICAgICB0eXBlOiAnSlNYQXR0cmlidXRlJyxcbiAgICAgICAgICBuYW1lOiB7dHlwZTogJ0pTWElkZW50aWZpZXInLCBuYW1lOiBwcm9wfSxcbiAgICAgICAgICB2YWx1ZTogYXR0cmlidXRlVmFsdWVcbiAgICAgICAgfSlcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGF0dHJpYnV0ZXMucHVzaCh7XG4gICAgICAgICAgdHlwZTogJ0pTWFNwcmVhZEF0dHJpYnV0ZScsXG4gICAgICAgICAgYXJndW1lbnQ6IHtcbiAgICAgICAgICAgIHR5cGU6ICdPYmplY3RFeHByZXNzaW9uJyxcbiAgICAgICAgICAgIHByb3BlcnRpZXM6IFtcbiAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHR5cGU6ICdQcm9wZXJ0eScsXG4gICAgICAgICAgICAgICAgbWV0aG9kOiBmYWxzZSxcbiAgICAgICAgICAgICAgICBzaG9ydGhhbmQ6IGZhbHNlLFxuICAgICAgICAgICAgICAgIGNvbXB1dGVkOiBmYWxzZSxcbiAgICAgICAgICAgICAgICBrZXk6IHt0eXBlOiAnTGl0ZXJhbCcsIHZhbHVlOiBTdHJpbmcocHJvcCl9LFxuICAgICAgICAgICAgICAgIC8vIEB0cy1leHBlY3QtZXJyb3IgTm8gbmVlZCB0byB3b3JyeSBhYm91dCBgc3R5bGVgICh3aGljaCBoYXMgYVxuICAgICAgICAgICAgICAgIC8vIGBKU1hFeHByZXNzaW9uQ29udGFpbmVyYCB2YWx1ZSkgYmVjYXVzZSB0aGF04oCZcyBhIHZhbGlkIGlkZW50aWZpZXIuXG4gICAgICAgICAgICAgICAgdmFsdWU6IGF0dHJpYnV0ZVZhbHVlIHx8IHt0eXBlOiAnTGl0ZXJhbCcsIHZhbHVlOiB0cnVlfSxcbiAgICAgICAgICAgICAgICBraW5kOiAnaW5pdCdcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgXVxuICAgICAgICAgIH1cbiAgICAgICAgfSlcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBpZiAoYWxpZ25WYWx1ZSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgaWYgKCFzdHlsZVByb3BlcnRpZXMpIHtcbiAgICAgIHN0eWxlUHJvcGVydGllcyA9IFtdXG4gICAgICBhdHRyaWJ1dGVzLnB1c2goe1xuICAgICAgICB0eXBlOiAnSlNYQXR0cmlidXRlJyxcbiAgICAgICAgbmFtZToge3R5cGU6ICdKU1hJZGVudGlmaWVyJywgbmFtZTogJ3N0eWxlJ30sXG4gICAgICAgIHZhbHVlOiB7XG4gICAgICAgICAgdHlwZTogJ0pTWEV4cHJlc3Npb25Db250YWluZXInLFxuICAgICAgICAgIGV4cHJlc3Npb246IHt0eXBlOiAnT2JqZWN0RXhwcmVzc2lvbicsIHByb3BlcnRpZXM6IHN0eWxlUHJvcGVydGllc31cbiAgICAgICAgfVxuICAgICAgfSlcbiAgICB9XG5cbiAgICBjb25zdCBjc3NQcm9wID1cbiAgICAgIHN0YXRlLnN0eWxlUHJvcGVydHlOYW1lQ2FzZSA9PT0gJ2NzcydcbiAgICAgICAgPyB0cmFuc2Zvcm1TdHlsZVRvQ3NzQ2FzaW5nKCd0ZXh0QWxpZ24nKVxuICAgICAgICA6ICd0ZXh0QWxpZ24nXG5cbiAgICBzdHlsZVByb3BlcnRpZXMucHVzaCh7XG4gICAgICB0eXBlOiAnUHJvcGVydHknLFxuICAgICAgbWV0aG9kOiBmYWxzZSxcbiAgICAgIHNob3J0aGFuZDogZmFsc2UsXG4gICAgICBjb21wdXRlZDogZmFsc2UsXG4gICAgICBrZXk6IGlkZW50aWZpZXJOYW1lKGNzc1Byb3ApXG4gICAgICAgID8ge3R5cGU6ICdJZGVudGlmaWVyJywgbmFtZTogY3NzUHJvcH1cbiAgICAgICAgOiB7dHlwZTogJ0xpdGVyYWwnLCB2YWx1ZTogY3NzUHJvcH0sXG4gICAgICB2YWx1ZToge3R5cGU6ICdMaXRlcmFsJywgdmFsdWU6IGFsaWduVmFsdWV9LFxuICAgICAga2luZDogJ2luaXQnXG4gICAgfSlcbiAgfVxuXG4gIC8vIFJlc3RvcmUgcGFyZW50IHNjaGVtYS5cbiAgc3RhdGUuc2NoZW1hID0gcGFyZW50U2NoZW1hXG5cbiAgLyoqIEB0eXBlIHtKc3hFbGVtZW50fSAqL1xuICBjb25zdCByZXN1bHQgPSB7XG4gICAgdHlwZTogJ0pTWEVsZW1lbnQnLFxuICAgIG9wZW5pbmdFbGVtZW50OiB7XG4gICAgICB0eXBlOiAnSlNYT3BlbmluZ0VsZW1lbnQnLFxuICAgICAgYXR0cmlidXRlcyxcbiAgICAgIG5hbWU6IHN0YXRlLmNyZWF0ZUpzeEVsZW1lbnROYW1lKG5vZGUudGFnTmFtZSksXG4gICAgICBzZWxmQ2xvc2luZzogY2hpbGRyZW4ubGVuZ3RoID09PSAwXG4gICAgfSxcbiAgICBjbG9zaW5nRWxlbWVudDpcbiAgICAgIGNoaWxkcmVuLmxlbmd0aCA+IDBcbiAgICAgICAgPyB7XG4gICAgICAgICAgICB0eXBlOiAnSlNYQ2xvc2luZ0VsZW1lbnQnLFxuICAgICAgICAgICAgbmFtZTogc3RhdGUuY3JlYXRlSnN4RWxlbWVudE5hbWUobm9kZS50YWdOYW1lKVxuICAgICAgICAgIH1cbiAgICAgICAgOiBudWxsLFxuICAgIGNoaWxkcmVuXG4gIH1cbiAgc3RhdGUuaW5oZXJpdChub2RlLCByZXN1bHQpXG4gIHJldHVybiByZXN1bHRcbn1cblxuLyoqXG4gKiBQYXJzZSBDU1MgcnVsZXMgYXMgYSBkZWNsYXJhdGlvbi5cbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gdmFsdWVcbiAqICAgQ1NTIHRleHQuXG4gKiBAcGFyYW0ge3N0cmluZ30gdGFnTmFtZVxuICogICBFbGVtZW50IG5hbWUuXG4gKiBAcmV0dXJucyB7U3R5bGV9XG4gKiAgIFByb3BzLlxuICovXG5mdW5jdGlvbiBwYXJzZVN0eWxlKHZhbHVlLCB0YWdOYW1lKSB7XG4gIC8qKiBAdHlwZSB7U3R5bGV9ICovXG4gIGNvbnN0IHJlc3VsdCA9IHt9XG5cbiAgdHJ5IHtcbiAgICBzdHlsZVRvT2JqZWN0KHZhbHVlLCBpdGVyYXRvcilcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zdCBjYXVzZSA9IC8qKiBAdHlwZSB7RXJyb3J9ICovIChlcnJvcilcbiAgICBjb25zdCBleGNlcHRpb24gPSBuZXcgRXJyb3IoXG4gICAgICAnQ291bGQgbm90IHBhcnNlIGBzdHlsZWAgYXR0cmlidXRlIG9uIGAnICsgdGFnTmFtZSArICdgJyxcbiAgICAgIHtjYXVzZX1cbiAgICApXG4gICAgdGhyb3cgZXhjZXB0aW9uXG4gIH1cblxuICByZXR1cm4gcmVzdWx0XG5cbiAgLyoqXG4gICAqIEFkZCBgbmFtZWAsIGFzIGEgQ1NTIHByb3AsIHRvIGByZXN1bHRgLlxuICAgKlxuICAgKiBAcGFyYW0ge3N0cmluZ30gbmFtZVxuICAgKiAgIEtleS5cbiAgICogQHBhcmFtIHtzdHJpbmd9IHZhbHVlXG4gICAqICAgVmFsdWUuXG4gICAqIEByZXR1cm5zIHt1bmRlZmluZWR9XG4gICAqICAgTm90aGluZy5cbiAgICovXG4gIGZ1bmN0aW9uIGl0ZXJhdG9yKG5hbWUsIHZhbHVlKSB7XG4gICAgbGV0IGtleSA9IG5hbWVcblxuICAgIGlmIChrZXkuc2xpY2UoMCwgMikgIT09ICctLScpIHtcbiAgICAgIC8vIFNlZTogPGh0dHBzOi8vYWxhbmhvZ2FuLmNvbS9jb2RlL3ZlbmRvci1wcmVmaXhlZC1jc3MtcHJvcGVydHktbmFtZXMtaW4tamF2YXNjcmlwdD5cbiAgICAgIGlmIChrZXkuc2xpY2UoMCwgNCkgPT09ICctbXMtJykga2V5ID0gJ21zLScgKyBrZXkuc2xpY2UoNClcbiAgICAgIGtleSA9IGtleS5yZXBsYWNlKGRhc2hTb21ldGhpbmcsIHRvQ2FtZWwpXG4gICAgfVxuXG4gICAgcmVzdWx0W2tleV0gPSB2YWx1ZVxuICB9XG59XG5cbi8qKlxuICogVHJhbnNmb3JtIGEgRE9NIGNhc2luZyBzdHlsZSBvYmplY3QgdG8gYSBDU1MgY2FzaW5nIHN0eWxlIG9iamVjdC5cbiAqXG4gKiBAcGFyYW0ge1N0eWxlfSBkb21DYXNpbmdcbiAqIEByZXR1cm5zIHtTdHlsZX1cbiAqL1xuZnVuY3Rpb24gdHJhbnNmb3JtU3R5bGVzVG9Dc3NDYXNpbmcoZG9tQ2FzaW5nKSB7XG4gIC8qKiBAdHlwZSB7U3R5bGV9ICovXG4gIGNvbnN0IGNzc0Nhc2luZyA9IHt9XG4gIC8qKiBAdHlwZSB7c3RyaW5nfSAqL1xuICBsZXQgZnJvbVxuXG4gIGZvciAoZnJvbSBpbiBkb21DYXNpbmcpIHtcbiAgICBpZiAob3duLmNhbGwoZG9tQ2FzaW5nLCBmcm9tKSkge1xuICAgICAgY3NzQ2FzaW5nW3RyYW5zZm9ybVN0eWxlVG9Dc3NDYXNpbmcoZnJvbSldID0gZG9tQ2FzaW5nW2Zyb21dXG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGNzc0Nhc2luZ1xufVxuXG4vKipcbiAqIFRyYW5zZm9ybSBhIERPTSBjYXNpbmcgc3R5bGUgcHJvcCB0byBhIENTUyBjYXNpbmcgc3R5bGUgcHJvcC5cbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gZnJvbVxuICogQHJldHVybnMge3N0cmluZ31cbiAqL1xuZnVuY3Rpb24gdHJhbnNmb3JtU3R5bGVUb0Nzc0Nhc2luZyhmcm9tKSB7XG4gIGxldCB0byA9IGZyb20ucmVwbGFjZShjYXAsIHRvRGFzaClcbiAgLy8gSGFuZGxlIGBtcy14eHhgIC0+IGAtbXMteHh4YC5cbiAgaWYgKHRvLnNsaWNlKDAsIDMpID09PSAnbXMtJykgdG8gPSAnLScgKyB0b1xuICByZXR1cm4gdG9cbn1cblxuLyoqXG4gKiBNYWtlIGAkMWAgY2FwaXRhbGl6ZWQuXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IF9cbiAqICAgV2hhdGV2ZXIuXG4gKiBAcGFyYW0ge3N0cmluZ30gJDFcbiAqICAgU2luZ2xlIEFTQ0lJIGFscGhhYmV0aWNhbC5cbiAqIEByZXR1cm5zIHtzdHJpbmd9XG4gKiAgIENhcGl0YWxpemVkIGAkMWAuXG4gKi9cbmZ1bmN0aW9uIHRvQ2FtZWwoXywgJDEpIHtcbiAgcmV0dXJuICQxLnRvVXBwZXJDYXNlKClcbn1cblxuLyoqXG4gKiBNYWtlIGAkMGAgZGFzaCBjYXNlZC5cbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gJDBcbiAqICAgQ2FwaXRhbGl6ZWQgQVNDSUkgbGV0ZXIuXG4gKiBAcmV0dXJucyB7c3RyaW5nfVxuICogICBEYXNoIGFuZCBsb3dlciBsZXR0ZXIuXG4gKi9cbmZ1bmN0aW9uIHRvRGFzaCgkMCkge1xuICByZXR1cm4gJy0nICsgJDAudG9Mb3dlckNhc2UoKVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/hast-util-to-estree@3.1.0/node_modules/hast-util-to-estree/lib/handlers/element.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/hast-util-to-estree@3.1.0/node_modules/hast-util-to-estree/lib/handlers/index.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/hast-util-to-estree@3.1.0/node_modules/hast-util-to-estree/lib/handlers/index.js ***!
  \*************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   handlers: () => (/* binding */ handlers)\n/* harmony export */ });\n/* harmony import */ var _comment_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./comment.js */ \"(rsc)/./node_modules/.pnpm/hast-util-to-estree@3.1.0/node_modules/hast-util-to-estree/lib/handlers/comment.js\");\n/* harmony import */ var _element_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./element.js */ \"(rsc)/./node_modules/.pnpm/hast-util-to-estree@3.1.0/node_modules/hast-util-to-estree/lib/handlers/element.js\");\n/* harmony import */ var _mdx_expression_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./mdx-expression.js */ \"(rsc)/./node_modules/.pnpm/hast-util-to-estree@3.1.0/node_modules/hast-util-to-estree/lib/handlers/mdx-expression.js\");\n/* harmony import */ var _mdx_jsx_element_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./mdx-jsx-element.js */ \"(rsc)/./node_modules/.pnpm/hast-util-to-estree@3.1.0/node_modules/hast-util-to-estree/lib/handlers/mdx-jsx-element.js\");\n/* harmony import */ var _mdxjs_esm_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./mdxjs-esm.js */ \"(rsc)/./node_modules/.pnpm/hast-util-to-estree@3.1.0/node_modules/hast-util-to-estree/lib/handlers/mdxjs-esm.js\");\n/* harmony import */ var _root_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./root.js */ \"(rsc)/./node_modules/.pnpm/hast-util-to-estree@3.1.0/node_modules/hast-util-to-estree/lib/handlers/root.js\");\n/* harmony import */ var _text_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./text.js */ \"(rsc)/./node_modules/.pnpm/hast-util-to-estree@3.1.0/node_modules/hast-util-to-estree/lib/handlers/text.js\");\n\n\n\n\n\n\n\n\nconst handlers = {\n  comment: _comment_js__WEBPACK_IMPORTED_MODULE_0__.comment,\n  doctype: ignore,\n  element: _element_js__WEBPACK_IMPORTED_MODULE_1__.element,\n  mdxFlowExpression: _mdx_expression_js__WEBPACK_IMPORTED_MODULE_2__.mdxExpression,\n  mdxJsxFlowElement: _mdx_jsx_element_js__WEBPACK_IMPORTED_MODULE_3__.mdxJsxElement,\n  mdxJsxTextElement: _mdx_jsx_element_js__WEBPACK_IMPORTED_MODULE_3__.mdxJsxElement,\n  mdxTextExpression: _mdx_expression_js__WEBPACK_IMPORTED_MODULE_2__.mdxExpression,\n  mdxjsEsm: _mdxjs_esm_js__WEBPACK_IMPORTED_MODULE_4__.mdxjsEsm,\n  root: _root_js__WEBPACK_IMPORTED_MODULE_5__.root,\n  text: _text_js__WEBPACK_IMPORTED_MODULE_6__.text\n}\n\n/**\n * Handle a node that is ignored.\n *\n * @returns {undefined}\n *   Nothing.\n */\nfunction ignore() {}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vaGFzdC11dGlsLXRvLWVzdHJlZUAzLjEuMC9ub2RlX21vZHVsZXMvaGFzdC11dGlsLXRvLWVzdHJlZS9saWIvaGFuZGxlcnMvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBb0M7QUFDQTtBQUNhO0FBQ0M7QUFDWDtBQUNUO0FBQ0E7O0FBRXZCO0FBQ1AsU0FBUztBQUNUO0FBQ0EsU0FBUztBQUNULHFCQUFxQiw2REFBYTtBQUNsQyxxQkFBcUIsOERBQWE7QUFDbEMscUJBQXFCLDhEQUFhO0FBQ2xDLHFCQUFxQiw2REFBYTtBQUNsQyxVQUFVO0FBQ1YsTUFBTTtBQUNOLE1BQU07QUFDTjs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2JtXzIwMjQvLi9ub2RlX21vZHVsZXMvLnBucG0vaGFzdC11dGlsLXRvLWVzdHJlZUAzLjEuMC9ub2RlX21vZHVsZXMvaGFzdC11dGlsLXRvLWVzdHJlZS9saWIvaGFuZGxlcnMvaW5kZXguanM/MDQ5YiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge2NvbW1lbnR9IGZyb20gJy4vY29tbWVudC5qcydcbmltcG9ydCB7ZWxlbWVudH0gZnJvbSAnLi9lbGVtZW50LmpzJ1xuaW1wb3J0IHttZHhFeHByZXNzaW9ufSBmcm9tICcuL21keC1leHByZXNzaW9uLmpzJ1xuaW1wb3J0IHttZHhKc3hFbGVtZW50fSBmcm9tICcuL21keC1qc3gtZWxlbWVudC5qcydcbmltcG9ydCB7bWR4anNFc219IGZyb20gJy4vbWR4anMtZXNtLmpzJ1xuaW1wb3J0IHtyb290fSBmcm9tICcuL3Jvb3QuanMnXG5pbXBvcnQge3RleHR9IGZyb20gJy4vdGV4dC5qcydcblxuZXhwb3J0IGNvbnN0IGhhbmRsZXJzID0ge1xuICBjb21tZW50LFxuICBkb2N0eXBlOiBpZ25vcmUsXG4gIGVsZW1lbnQsXG4gIG1keEZsb3dFeHByZXNzaW9uOiBtZHhFeHByZXNzaW9uLFxuICBtZHhKc3hGbG93RWxlbWVudDogbWR4SnN4RWxlbWVudCxcbiAgbWR4SnN4VGV4dEVsZW1lbnQ6IG1keEpzeEVsZW1lbnQsXG4gIG1keFRleHRFeHByZXNzaW9uOiBtZHhFeHByZXNzaW9uLFxuICBtZHhqc0VzbSxcbiAgcm9vdCxcbiAgdGV4dFxufVxuXG4vKipcbiAqIEhhbmRsZSBhIG5vZGUgdGhhdCBpcyBpZ25vcmVkLlxuICpcbiAqIEByZXR1cm5zIHt1bmRlZmluZWR9XG4gKiAgIE5vdGhpbmcuXG4gKi9cbmZ1bmN0aW9uIGlnbm9yZSgpIHt9XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/hast-util-to-estree@3.1.0/node_modules/hast-util-to-estree/lib/handlers/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/hast-util-to-estree@3.1.0/node_modules/hast-util-to-estree/lib/handlers/mdx-expression.js":
/*!**********************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/hast-util-to-estree@3.1.0/node_modules/hast-util-to-estree/lib/handlers/mdx-expression.js ***!
  \**********************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   mdxExpression: () => (/* binding */ mdxExpression)\n/* harmony export */ });\n/* harmony import */ var estree_util_attach_comments__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! estree-util-attach-comments */ \"(rsc)/./node_modules/.pnpm/estree-util-attach-comments@3.0.0/node_modules/estree-util-attach-comments/lib/index.js\");\n/**\n * @typedef {import('estree').Expression} Expression\n *\n * @typedef {import('estree-jsx').JSXEmptyExpression} JsxEmptyExpression\n * @typedef {import('estree-jsx').JSXExpressionContainer} JsxExpressionContainer\n *\n * @typedef {import('mdast-util-mdx-expression').MdxFlowExpressionHast} MdxFlowExpression\n * @typedef {import('mdast-util-mdx-expression').MdxTextExpressionHast} MdxTextExpression\n *\n * @typedef {import('../state.js').State} State\n */\n\n\n\n/**\n * Turn an MDX expression node into an estree node.\n *\n * @param {MdxFlowExpression | MdxTextExpression} node\n *   hast node to transform.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {JsxExpressionContainer}\n *   estree expression.\n */\nfunction mdxExpression(node, state) {\n  const estree = node.data && node.data.estree\n  const comments = (estree && estree.comments) || []\n  /** @type {Expression | JsxEmptyExpression | undefined} */\n  let expression\n\n  if (estree) {\n    state.comments.push(...comments)\n    ;(0,estree_util_attach_comments__WEBPACK_IMPORTED_MODULE_0__.attachComments)(estree, estree.comments)\n    expression =\n      (estree.body[0] &&\n        estree.body[0].type === 'ExpressionStatement' &&\n        estree.body[0].expression) ||\n      undefined\n  }\n\n  if (!expression) {\n    expression = {type: 'JSXEmptyExpression'}\n    state.patch(node, expression)\n  }\n\n  /** @type {JsxExpressionContainer} */\n  const result = {type: 'JSXExpressionContainer', expression}\n  state.inherit(node, result)\n  return result\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vaGFzdC11dGlsLXRvLWVzdHJlZUAzLjEuMC9ub2RlX21vZHVsZXMvaGFzdC11dGlsLXRvLWVzdHJlZS9saWIvaGFuZGxlcnMvbWR4LWV4cHJlc3Npb24uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBLGFBQWEsNkJBQTZCO0FBQzFDO0FBQ0EsYUFBYSx5Q0FBeUM7QUFDdEQsYUFBYSw2Q0FBNkM7QUFDMUQ7QUFDQSxhQUFhLDJEQUEyRDtBQUN4RSxhQUFhLDJEQUEyRDtBQUN4RTtBQUNBLGFBQWEsNkJBQTZCO0FBQzFDOztBQUUwRDs7QUFFMUQ7QUFDQTtBQUNBO0FBQ0EsV0FBVyx1Q0FBdUM7QUFDbEQ7QUFDQSxXQUFXLE9BQU87QUFDbEI7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBLGFBQWEsNkNBQTZDO0FBQzFEOztBQUVBO0FBQ0E7QUFDQSxJQUFJLDRFQUFjO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGtCQUFrQjtBQUNsQjtBQUNBOztBQUVBLGFBQWEsd0JBQXdCO0FBQ3JDLGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jYm1fMjAyNC8uL25vZGVfbW9kdWxlcy8ucG5wbS9oYXN0LXV0aWwtdG8tZXN0cmVlQDMuMS4wL25vZGVfbW9kdWxlcy9oYXN0LXV0aWwtdG8tZXN0cmVlL2xpYi9oYW5kbGVycy9tZHgtZXhwcmVzc2lvbi5qcz8wZDUzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQHR5cGVkZWYge2ltcG9ydCgnZXN0cmVlJykuRXhwcmVzc2lvbn0gRXhwcmVzc2lvblxuICpcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ2VzdHJlZS1qc3gnKS5KU1hFbXB0eUV4cHJlc3Npb259IEpzeEVtcHR5RXhwcmVzc2lvblxuICogQHR5cGVkZWYge2ltcG9ydCgnZXN0cmVlLWpzeCcpLkpTWEV4cHJlc3Npb25Db250YWluZXJ9IEpzeEV4cHJlc3Npb25Db250YWluZXJcbiAqXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdtZGFzdC11dGlsLW1keC1leHByZXNzaW9uJykuTWR4Rmxvd0V4cHJlc3Npb25IYXN0fSBNZHhGbG93RXhwcmVzc2lvblxuICogQHR5cGVkZWYge2ltcG9ydCgnbWRhc3QtdXRpbC1tZHgtZXhwcmVzc2lvbicpLk1keFRleHRFeHByZXNzaW9uSGFzdH0gTWR4VGV4dEV4cHJlc3Npb25cbiAqXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCcuLi9zdGF0ZS5qcycpLlN0YXRlfSBTdGF0ZVxuICovXG5cbmltcG9ydCB7YXR0YWNoQ29tbWVudHN9IGZyb20gJ2VzdHJlZS11dGlsLWF0dGFjaC1jb21tZW50cydcblxuLyoqXG4gKiBUdXJuIGFuIE1EWCBleHByZXNzaW9uIG5vZGUgaW50byBhbiBlc3RyZWUgbm9kZS5cbiAqXG4gKiBAcGFyYW0ge01keEZsb3dFeHByZXNzaW9uIHwgTWR4VGV4dEV4cHJlc3Npb259IG5vZGVcbiAqICAgaGFzdCBub2RlIHRvIHRyYW5zZm9ybS5cbiAqIEBwYXJhbSB7U3RhdGV9IHN0YXRlXG4gKiAgIEluZm8gcGFzc2VkIGFyb3VuZCBhYm91dCB0aGUgY3VycmVudCBzdGF0ZS5cbiAqIEByZXR1cm5zIHtKc3hFeHByZXNzaW9uQ29udGFpbmVyfVxuICogICBlc3RyZWUgZXhwcmVzc2lvbi5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIG1keEV4cHJlc3Npb24obm9kZSwgc3RhdGUpIHtcbiAgY29uc3QgZXN0cmVlID0gbm9kZS5kYXRhICYmIG5vZGUuZGF0YS5lc3RyZWVcbiAgY29uc3QgY29tbWVudHMgPSAoZXN0cmVlICYmIGVzdHJlZS5jb21tZW50cykgfHwgW11cbiAgLyoqIEB0eXBlIHtFeHByZXNzaW9uIHwgSnN4RW1wdHlFeHByZXNzaW9uIHwgdW5kZWZpbmVkfSAqL1xuICBsZXQgZXhwcmVzc2lvblxuXG4gIGlmIChlc3RyZWUpIHtcbiAgICBzdGF0ZS5jb21tZW50cy5wdXNoKC4uLmNvbW1lbnRzKVxuICAgIGF0dGFjaENvbW1lbnRzKGVzdHJlZSwgZXN0cmVlLmNvbW1lbnRzKVxuICAgIGV4cHJlc3Npb24gPVxuICAgICAgKGVzdHJlZS5ib2R5WzBdICYmXG4gICAgICAgIGVzdHJlZS5ib2R5WzBdLnR5cGUgPT09ICdFeHByZXNzaW9uU3RhdGVtZW50JyAmJlxuICAgICAgICBlc3RyZWUuYm9keVswXS5leHByZXNzaW9uKSB8fFxuICAgICAgdW5kZWZpbmVkXG4gIH1cblxuICBpZiAoIWV4cHJlc3Npb24pIHtcbiAgICBleHByZXNzaW9uID0ge3R5cGU6ICdKU1hFbXB0eUV4cHJlc3Npb24nfVxuICAgIHN0YXRlLnBhdGNoKG5vZGUsIGV4cHJlc3Npb24pXG4gIH1cblxuICAvKiogQHR5cGUge0pzeEV4cHJlc3Npb25Db250YWluZXJ9ICovXG4gIGNvbnN0IHJlc3VsdCA9IHt0eXBlOiAnSlNYRXhwcmVzc2lvbkNvbnRhaW5lcicsIGV4cHJlc3Npb259XG4gIHN0YXRlLmluaGVyaXQobm9kZSwgcmVzdWx0KVxuICByZXR1cm4gcmVzdWx0XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/hast-util-to-estree@3.1.0/node_modules/hast-util-to-estree/lib/handlers/mdx-expression.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/hast-util-to-estree@3.1.0/node_modules/hast-util-to-estree/lib/handlers/mdx-jsx-element.js":
/*!***********************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/hast-util-to-estree@3.1.0/node_modules/hast-util-to-estree/lib/handlers/mdx-jsx-element.js ***!
  \***********************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   mdxJsxElement: () => (/* binding */ mdxJsxElement)\n/* harmony export */ });\n/* harmony import */ var estree_util_attach_comments__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! estree-util-attach-comments */ \"(rsc)/./node_modules/.pnpm/estree-util-attach-comments@3.0.0/node_modules/estree-util-attach-comments/lib/index.js\");\n/* harmony import */ var property_information__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! property-information */ \"(rsc)/./node_modules/.pnpm/property-information@6.5.0/node_modules/property-information/index.js\");\n/**\n * @typedef {import('estree').Expression} Expression\n *\n * @typedef {import('estree-jsx').JSXAttribute} JsxAttribute\n * @typedef {import('estree-jsx').JSXElement} JsxElement\n * @typedef {import('estree-jsx').JSXFragment} JsxFragment\n * @typedef {import('estree-jsx').JSXSpreadAttribute} JsxSpreadAttribute\n *\n * @typedef {import('mdast-util-mdx-jsx').MdxJsxFlowElementHast} MdxJsxFlowElement\n * @typedef {import('mdast-util-mdx-jsx').MdxJsxTextElementHast} MdxJsxTextElement\n *\n * @typedef {import('../state.js').State} State\n */\n\n\n\n\n/**\n * Turn an MDX JSX element node into an estree node.\n *\n * @param {MdxJsxFlowElement | MdxJsxTextElement} node\n *   hast node to transform.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {JsxElement | JsxFragment}\n *   JSX element or fragment.\n */\n// eslint-disable-next-line complexity\nfunction mdxJsxElement(node, state) {\n  const parentSchema = state.schema\n  let schema = parentSchema\n  const attrs = node.attributes || []\n  let index = -1\n\n  if (\n    node.name &&\n    parentSchema.space === 'html' &&\n    node.name.toLowerCase() === 'svg'\n  ) {\n    schema = property_information__WEBPACK_IMPORTED_MODULE_0__.svg\n    state.schema = schema\n  }\n\n  const children = state.all(node)\n  /** @type {Array<JsxAttribute | JsxSpreadAttribute>} */\n  const attributes = []\n\n  while (++index < attrs.length) {\n    const attr = attrs[index]\n    const value = attr.value\n    /** @type {JsxAttribute['value']} */\n    let attributeValue\n\n    if (attr.type === 'mdxJsxAttribute') {\n      if (value === null || value === undefined) {\n        attributeValue = null\n        // Empty.\n      }\n      // `MdxJsxAttributeValueExpression`.\n      else if (typeof value === 'object') {\n        const estree = value.data && value.data.estree\n        const comments = (estree && estree.comments) || []\n        /** @type {Expression | undefined} */\n        let expression\n\n        if (estree) {\n          state.comments.push(...comments)\n          ;(0,estree_util_attach_comments__WEBPACK_IMPORTED_MODULE_1__.attachComments)(estree, estree.comments)\n          // Should exist.\n          /* c8 ignore next 5 */\n          expression =\n            (estree.body[0] &&\n              estree.body[0].type === 'ExpressionStatement' &&\n              estree.body[0].expression) ||\n            undefined\n        }\n\n        attributeValue = {\n          type: 'JSXExpressionContainer',\n          expression: expression || {type: 'JSXEmptyExpression'}\n        }\n        state.inherit(value, attributeValue)\n      }\n      // Anything else.\n      else {\n        attributeValue = {type: 'Literal', value: String(value)}\n      }\n\n      /** @type {JsxAttribute} */\n      const attribute = {\n        type: 'JSXAttribute',\n        name: state.createJsxAttributeName(attr.name),\n        value: attributeValue\n      }\n\n      state.inherit(attr, attribute)\n      attributes.push(attribute)\n    }\n    // MdxJsxExpressionAttribute.\n    else {\n      const estree = attr.data && attr.data.estree\n      const comments = (estree && estree.comments) || []\n      /** @type {JsxSpreadAttribute['argument'] | undefined} */\n      let argumentValue\n\n      if (estree) {\n        state.comments.push(...comments)\n        ;(0,estree_util_attach_comments__WEBPACK_IMPORTED_MODULE_1__.attachComments)(estree, estree.comments)\n        // Should exist.\n        /* c8 ignore next 10 */\n        argumentValue =\n          (estree.body[0] &&\n            estree.body[0].type === 'ExpressionStatement' &&\n            estree.body[0].expression &&\n            estree.body[0].expression.type === 'ObjectExpression' &&\n            estree.body[0].expression.properties &&\n            estree.body[0].expression.properties[0] &&\n            estree.body[0].expression.properties[0].type === 'SpreadElement' &&\n            estree.body[0].expression.properties[0].argument) ||\n          undefined\n      }\n\n      /** @type {JsxSpreadAttribute} */\n      const attribute = {\n        type: 'JSXSpreadAttribute',\n        argument: argumentValue || {type: 'ObjectExpression', properties: []}\n      }\n      state.inherit(attr, attribute)\n      attributes.push(attribute)\n    }\n  }\n\n  // Restore parent schema.\n  state.schema = parentSchema\n\n  /** @type {JsxElement | JsxFragment} */\n  const result = node.name\n    ? {\n        type: 'JSXElement',\n        openingElement: {\n          type: 'JSXOpeningElement',\n          attributes,\n          name: state.createJsxElementName(node.name),\n          selfClosing: children.length === 0\n        },\n        closingElement:\n          children.length > 0\n            ? {\n                type: 'JSXClosingElement',\n                name: state.createJsxElementName(node.name)\n              }\n            : null,\n        children\n      }\n    : {\n        type: 'JSXFragment',\n        openingFragment: {type: 'JSXOpeningFragment'},\n        closingFragment: {type: 'JSXClosingFragment'},\n        children\n      }\n\n  state.inherit(node, result)\n  return result\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/hast-util-to-estree@3.1.0/node_modules/hast-util-to-estree/lib/handlers/mdx-jsx-element.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/hast-util-to-estree@3.1.0/node_modules/hast-util-to-estree/lib/handlers/mdxjs-esm.js":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/hast-util-to-estree@3.1.0/node_modules/hast-util-to-estree/lib/handlers/mdxjs-esm.js ***!
  \*****************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   mdxjsEsm: () => (/* binding */ mdxjsEsm)\n/* harmony export */ });\n/* harmony import */ var estree_util_attach_comments__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! estree-util-attach-comments */ \"(rsc)/./node_modules/.pnpm/estree-util-attach-comments@3.0.0/node_modules/estree-util-attach-comments/lib/index.js\");\n/**\n * @typedef {import('mdast-util-mdxjs-esm').MdxjsEsmHast} MdxjsEsm\n *\n * @typedef {import('../state.js').State} State\n */\n\n\n\n/**\n * Handle an MDX ESM node.\n *\n * @param {MdxjsEsm} node\n *   hast node to transform.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction mdxjsEsm(node, state) {\n  const estree = node.data && node.data.estree\n  const comments = (estree && estree.comments) || []\n\n  if (estree) {\n    state.comments.push(...comments)\n    ;(0,estree_util_attach_comments__WEBPACK_IMPORTED_MODULE_0__.attachComments)(estree, comments)\n    state.esm.push(...estree.body)\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vaGFzdC11dGlsLXRvLWVzdHJlZUAzLjEuMC9ub2RlX21vZHVsZXMvaGFzdC11dGlsLXRvLWVzdHJlZS9saWIvaGFuZGxlcnMvbWR4anMtZXNtLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQSxhQUFhLDZDQUE2QztBQUMxRDtBQUNBLGFBQWEsNkJBQTZCO0FBQzFDOztBQUUwRDs7QUFFMUQ7QUFDQTtBQUNBO0FBQ0EsV0FBVyxVQUFVO0FBQ3JCO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDTztBQUNQO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLElBQUksNEVBQWM7QUFDbEI7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2JtXzIwMjQvLi9ub2RlX21vZHVsZXMvLnBucG0vaGFzdC11dGlsLXRvLWVzdHJlZUAzLjEuMC9ub2RlX21vZHVsZXMvaGFzdC11dGlsLXRvLWVzdHJlZS9saWIvaGFuZGxlcnMvbWR4anMtZXNtLmpzP2I1OTQiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdtZGFzdC11dGlsLW1keGpzLWVzbScpLk1keGpzRXNtSGFzdH0gTWR4anNFc21cbiAqXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCcuLi9zdGF0ZS5qcycpLlN0YXRlfSBTdGF0ZVxuICovXG5cbmltcG9ydCB7YXR0YWNoQ29tbWVudHN9IGZyb20gJ2VzdHJlZS11dGlsLWF0dGFjaC1jb21tZW50cydcblxuLyoqXG4gKiBIYW5kbGUgYW4gTURYIEVTTSBub2RlLlxuICpcbiAqIEBwYXJhbSB7TWR4anNFc219IG5vZGVcbiAqICAgaGFzdCBub2RlIHRvIHRyYW5zZm9ybS5cbiAqIEBwYXJhbSB7U3RhdGV9IHN0YXRlXG4gKiAgIEluZm8gcGFzc2VkIGFyb3VuZCBhYm91dCB0aGUgY3VycmVudCBzdGF0ZS5cbiAqIEByZXR1cm5zIHt1bmRlZmluZWR9XG4gKiAgIE5vdGhpbmcuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBtZHhqc0VzbShub2RlLCBzdGF0ZSkge1xuICBjb25zdCBlc3RyZWUgPSBub2RlLmRhdGEgJiYgbm9kZS5kYXRhLmVzdHJlZVxuICBjb25zdCBjb21tZW50cyA9IChlc3RyZWUgJiYgZXN0cmVlLmNvbW1lbnRzKSB8fCBbXVxuXG4gIGlmIChlc3RyZWUpIHtcbiAgICBzdGF0ZS5jb21tZW50cy5wdXNoKC4uLmNvbW1lbnRzKVxuICAgIGF0dGFjaENvbW1lbnRzKGVzdHJlZSwgY29tbWVudHMpXG4gICAgc3RhdGUuZXNtLnB1c2goLi4uZXN0cmVlLmJvZHkpXG4gIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/hast-util-to-estree@3.1.0/node_modules/hast-util-to-estree/lib/handlers/mdxjs-esm.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/hast-util-to-estree@3.1.0/node_modules/hast-util-to-estree/lib/handlers/root.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/hast-util-to-estree@3.1.0/node_modules/hast-util-to-estree/lib/handlers/root.js ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   root: () => (/* binding */ root)\n/* harmony export */ });\n/* harmony import */ var hast_util_whitespace__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! hast-util-whitespace */ \"(rsc)/./node_modules/.pnpm/hast-util-whitespace@3.0.0/node_modules/hast-util-whitespace/lib/index.js\");\n/**\n * @typedef {import('estree-jsx').JSXFragment} JsxFragment\n *\n * @typedef {import('hast').Root} HastRoot\n *\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * @typedef {JsxFragment['children'][number]} JsxChild\n */\n\n\n\n/**\n * Turn a hast root node into an estree node.\n *\n * @param {HastRoot} node\n *   hast node to transform.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {JsxFragment}\n *   estree JSX fragment.\n */\nfunction root(node, state) {\n  const children = state.all(node)\n  /** @type {Array<JsxChild>} */\n  const cleanChildren = []\n  let index = -1\n  /** @type {Array<JsxChild> | undefined} */\n  let queue\n\n  // Remove surrounding whitespace nodes from the fragment.\n  while (++index < children.length) {\n    const child = children[index]\n\n    if (\n      child.type === 'JSXExpressionContainer' &&\n      child.expression.type === 'Literal' &&\n      (0,hast_util_whitespace__WEBPACK_IMPORTED_MODULE_0__.whitespace)(String(child.expression.value))\n    ) {\n      if (queue) queue.push(child)\n    } else {\n      if (queue) cleanChildren.push(...queue)\n      cleanChildren.push(child)\n      queue = []\n    }\n  }\n\n  /** @type {JsxFragment} */\n  const result = {\n    type: 'JSXFragment',\n    openingFragment: {type: 'JSXOpeningFragment'},\n    closingFragment: {type: 'JSXClosingFragment'},\n    children: cleanChildren\n  }\n  state.inherit(node, result)\n  return result\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vaGFzdC11dGlsLXRvLWVzdHJlZUAzLjEuMC9ub2RlX21vZHVsZXMvaGFzdC11dGlsLXRvLWVzdHJlZS9saWIvaGFuZGxlcnMvcm9vdC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0EsYUFBYSxrQ0FBa0M7QUFDL0M7QUFDQSxhQUFhLHFCQUFxQjtBQUNsQztBQUNBLGFBQWEsNkJBQTZCO0FBQzFDOztBQUVBO0FBQ0EsYUFBYSxpQ0FBaUM7QUFDOUM7O0FBRStDOztBQUUvQztBQUNBO0FBQ0E7QUFDQSxXQUFXLFVBQVU7QUFDckI7QUFDQSxXQUFXLE9BQU87QUFDbEI7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNPO0FBQ1A7QUFDQSxhQUFhLGlCQUFpQjtBQUM5QjtBQUNBO0FBQ0EsYUFBYSw2QkFBNkI7QUFDMUM7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLE1BQU0sZ0VBQVU7QUFDaEI7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGFBQWEsYUFBYTtBQUMxQjtBQUNBO0FBQ0Esc0JBQXNCLDJCQUEyQjtBQUNqRCxzQkFBc0IsMkJBQTJCO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jYm1fMjAyNC8uL25vZGVfbW9kdWxlcy8ucG5wbS9oYXN0LXV0aWwtdG8tZXN0cmVlQDMuMS4wL25vZGVfbW9kdWxlcy9oYXN0LXV0aWwtdG8tZXN0cmVlL2xpYi9oYW5kbGVycy9yb290LmpzP2FjYmEiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdlc3RyZWUtanN4JykuSlNYRnJhZ21lbnR9IEpzeEZyYWdtZW50XG4gKlxuICogQHR5cGVkZWYge2ltcG9ydCgnaGFzdCcpLlJvb3R9IEhhc3RSb290XG4gKlxuICogQHR5cGVkZWYge2ltcG9ydCgnLi4vc3RhdGUuanMnKS5TdGF0ZX0gU3RhdGVcbiAqL1xuXG4vKipcbiAqIEB0eXBlZGVmIHtKc3hGcmFnbWVudFsnY2hpbGRyZW4nXVtudW1iZXJdfSBKc3hDaGlsZFxuICovXG5cbmltcG9ydCB7d2hpdGVzcGFjZX0gZnJvbSAnaGFzdC11dGlsLXdoaXRlc3BhY2UnXG5cbi8qKlxuICogVHVybiBhIGhhc3Qgcm9vdCBub2RlIGludG8gYW4gZXN0cmVlIG5vZGUuXG4gKlxuICogQHBhcmFtIHtIYXN0Um9vdH0gbm9kZVxuICogICBoYXN0IG5vZGUgdG8gdHJhbnNmb3JtLlxuICogQHBhcmFtIHtTdGF0ZX0gc3RhdGVcbiAqICAgSW5mbyBwYXNzZWQgYXJvdW5kIGFib3V0IHRoZSBjdXJyZW50IHN0YXRlLlxuICogQHJldHVybnMge0pzeEZyYWdtZW50fVxuICogICBlc3RyZWUgSlNYIGZyYWdtZW50LlxuICovXG5leHBvcnQgZnVuY3Rpb24gcm9vdChub2RlLCBzdGF0ZSkge1xuICBjb25zdCBjaGlsZHJlbiA9IHN0YXRlLmFsbChub2RlKVxuICAvKiogQHR5cGUge0FycmF5PEpzeENoaWxkPn0gKi9cbiAgY29uc3QgY2xlYW5DaGlsZHJlbiA9IFtdXG4gIGxldCBpbmRleCA9IC0xXG4gIC8qKiBAdHlwZSB7QXJyYXk8SnN4Q2hpbGQ+IHwgdW5kZWZpbmVkfSAqL1xuICBsZXQgcXVldWVcblxuICAvLyBSZW1vdmUgc3Vycm91bmRpbmcgd2hpdGVzcGFjZSBub2RlcyBmcm9tIHRoZSBmcmFnbWVudC5cbiAgd2hpbGUgKCsraW5kZXggPCBjaGlsZHJlbi5sZW5ndGgpIHtcbiAgICBjb25zdCBjaGlsZCA9IGNoaWxkcmVuW2luZGV4XVxuXG4gICAgaWYgKFxuICAgICAgY2hpbGQudHlwZSA9PT0gJ0pTWEV4cHJlc3Npb25Db250YWluZXInICYmXG4gICAgICBjaGlsZC5leHByZXNzaW9uLnR5cGUgPT09ICdMaXRlcmFsJyAmJlxuICAgICAgd2hpdGVzcGFjZShTdHJpbmcoY2hpbGQuZXhwcmVzc2lvbi52YWx1ZSkpXG4gICAgKSB7XG4gICAgICBpZiAocXVldWUpIHF1ZXVlLnB1c2goY2hpbGQpXG4gICAgfSBlbHNlIHtcbiAgICAgIGlmIChxdWV1ZSkgY2xlYW5DaGlsZHJlbi5wdXNoKC4uLnF1ZXVlKVxuICAgICAgY2xlYW5DaGlsZHJlbi5wdXNoKGNoaWxkKVxuICAgICAgcXVldWUgPSBbXVxuICAgIH1cbiAgfVxuXG4gIC8qKiBAdHlwZSB7SnN4RnJhZ21lbnR9ICovXG4gIGNvbnN0IHJlc3VsdCA9IHtcbiAgICB0eXBlOiAnSlNYRnJhZ21lbnQnLFxuICAgIG9wZW5pbmdGcmFnbWVudDoge3R5cGU6ICdKU1hPcGVuaW5nRnJhZ21lbnQnfSxcbiAgICBjbG9zaW5nRnJhZ21lbnQ6IHt0eXBlOiAnSlNYQ2xvc2luZ0ZyYWdtZW50J30sXG4gICAgY2hpbGRyZW46IGNsZWFuQ2hpbGRyZW5cbiAgfVxuICBzdGF0ZS5pbmhlcml0KG5vZGUsIHJlc3VsdClcbiAgcmV0dXJuIHJlc3VsdFxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/hast-util-to-estree@3.1.0/node_modules/hast-util-to-estree/lib/handlers/root.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/hast-util-to-estree@3.1.0/node_modules/hast-util-to-estree/lib/handlers/text.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/hast-util-to-estree@3.1.0/node_modules/hast-util-to-estree/lib/handlers/text.js ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   text: () => (/* binding */ text)\n/* harmony export */ });\n/**\n * @typedef {import('estree').Literal} Literal\n *\n * @typedef {import('estree-jsx').JSXExpressionContainer} JsxExpressionContainer\n *\n * @typedef {import('hast').Text} HastText\n *\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn a hast text node into an estree node.\n *\n * @param {HastText} node\n *   hast node to transform.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {JsxExpressionContainer | undefined}\n *   JSX expression.\n */\nfunction text(node, state) {\n  const value = String(node.value || '')\n\n  if (value) {\n    /** @type {Literal} */\n    const result = {type: 'Literal', value}\n    state.inherit(node, result)\n    /** @type {JsxExpressionContainer} */\n    const container = {type: 'JSXExpressionContainer', expression: result}\n    state.patch(node, container)\n    return container\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vaGFzdC11dGlsLXRvLWVzdHJlZUAzLjEuMC9ub2RlX21vZHVsZXMvaGFzdC11dGlsLXRvLWVzdHJlZS9saWIvaGFuZGxlcnMvdGV4dC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQSxhQUFhLDBCQUEwQjtBQUN2QztBQUNBLGFBQWEsNkNBQTZDO0FBQzFEO0FBQ0EsYUFBYSxxQkFBcUI7QUFDbEM7QUFDQSxhQUFhLDZCQUE2QjtBQUMxQzs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsVUFBVTtBQUNyQjtBQUNBLFdBQVcsT0FBTztBQUNsQjtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ087QUFDUDs7QUFFQTtBQUNBLGVBQWUsU0FBUztBQUN4QixvQkFBb0I7QUFDcEI7QUFDQSxlQUFlLHdCQUF3QjtBQUN2Qyx1QkFBdUI7QUFDdkI7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jYm1fMjAyNC8uL25vZGVfbW9kdWxlcy8ucG5wbS9oYXN0LXV0aWwtdG8tZXN0cmVlQDMuMS4wL25vZGVfbW9kdWxlcy9oYXN0LXV0aWwtdG8tZXN0cmVlL2xpYi9oYW5kbGVycy90ZXh0LmpzPzExYTkiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdlc3RyZWUnKS5MaXRlcmFsfSBMaXRlcmFsXG4gKlxuICogQHR5cGVkZWYge2ltcG9ydCgnZXN0cmVlLWpzeCcpLkpTWEV4cHJlc3Npb25Db250YWluZXJ9IEpzeEV4cHJlc3Npb25Db250YWluZXJcbiAqXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdoYXN0JykuVGV4dH0gSGFzdFRleHRcbiAqXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCcuLi9zdGF0ZS5qcycpLlN0YXRlfSBTdGF0ZVxuICovXG5cbi8vIE1ha2UgVlMgQ29kZSBzaG93IHJlZmVyZW5jZXMgdG8gdGhlIGFib3ZlIHR5cGVzLlxuJydcblxuLyoqXG4gKiBUdXJuIGEgaGFzdCB0ZXh0IG5vZGUgaW50byBhbiBlc3RyZWUgbm9kZS5cbiAqXG4gKiBAcGFyYW0ge0hhc3RUZXh0fSBub2RlXG4gKiAgIGhhc3Qgbm9kZSB0byB0cmFuc2Zvcm0uXG4gKiBAcGFyYW0ge1N0YXRlfSBzdGF0ZVxuICogICBJbmZvIHBhc3NlZCBhcm91bmQgYWJvdXQgdGhlIGN1cnJlbnQgc3RhdGUuXG4gKiBAcmV0dXJucyB7SnN4RXhwcmVzc2lvbkNvbnRhaW5lciB8IHVuZGVmaW5lZH1cbiAqICAgSlNYIGV4cHJlc3Npb24uXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB0ZXh0KG5vZGUsIHN0YXRlKSB7XG4gIGNvbnN0IHZhbHVlID0gU3RyaW5nKG5vZGUudmFsdWUgfHwgJycpXG5cbiAgaWYgKHZhbHVlKSB7XG4gICAgLyoqIEB0eXBlIHtMaXRlcmFsfSAqL1xuICAgIGNvbnN0IHJlc3VsdCA9IHt0eXBlOiAnTGl0ZXJhbCcsIHZhbHVlfVxuICAgIHN0YXRlLmluaGVyaXQobm9kZSwgcmVzdWx0KVxuICAgIC8qKiBAdHlwZSB7SnN4RXhwcmVzc2lvbkNvbnRhaW5lcn0gKi9cbiAgICBjb25zdCBjb250YWluZXIgPSB7dHlwZTogJ0pTWEV4cHJlc3Npb25Db250YWluZXInLCBleHByZXNzaW9uOiByZXN1bHR9XG4gICAgc3RhdGUucGF0Y2gobm9kZSwgY29udGFpbmVyKVxuICAgIHJldHVybiBjb250YWluZXJcbiAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/hast-util-to-estree@3.1.0/node_modules/hast-util-to-estree/lib/handlers/text.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/hast-util-to-estree@3.1.0/node_modules/hast-util-to-estree/lib/index.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/.pnpm/hast-util-to-estree@3.1.0/node_modules/hast-util-to-estree/lib/index.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   toEstree: () => (/* binding */ toEstree)\n/* harmony export */ });\n/* harmony import */ var _state_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./state.js */ \"(rsc)/./node_modules/.pnpm/hast-util-to-estree@3.1.0/node_modules/hast-util-to-estree/lib/state.js\");\n/**\n * Register MDX nodes in tree:\n *\n * @typedef {import('mdast-util-mdx-expression')}\n * @typedef {import('mdast-util-mdx-jsx')}\n * @typedef {import('mdast-util-mdxjs-esm')}\n */\n\n/**\n * @typedef {import('estree').ExpressionStatement} ExpressionStatement\n * @typedef {import('estree').Program} Program\n *\n * @typedef {import('hast').Nodes} HastNodes\n *\n * @typedef {import('./state.js').Options} Options\n */\n\n\n\n/**\n * Transform a hast tree (with embedded MDX nodes) into an estree.\n *\n * ##### Notes\n *\n * ###### Comments\n *\n * Comments are attached to the tree in their neighbouring nodes (`recast`,\n * `babel` style) and also added as a `comments` array on the program node\n * (`espree` style).\n * You may have to do `program.comments = undefined` for certain compilers.\n *\n * ###### Frameworks\n *\n * There are differences between what JSX frameworks accept, such as whether they\n * accept `class` or `className`, or `background-color` or `backgroundColor`.\n *\n * For JSX components written in MDX, the author has to be aware of this\n * difference and write code accordingly.\n * For hast elements transformed by this project, this will be handled through\n * options.\n *\n * | Framework | `elementAttributeNameCase` | `stylePropertyNameCase` |\n * | --------- | -------------------------- | ----------------------- |\n * | Preact    | `'html'`                   | `'dom'`                 |\n * | React     | `'react'`                  | `'dom'`                 |\n * | Solid     | `'html'`                   | `'css'`                 |\n * | Vue       | `'html'`                   | `'dom'`                 |\n *\n * @param {HastNodes} tree\n *   hast tree.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {Program}\n *   estree program node.\n *\n *   The program’s last child in `body` is most likely an `ExpressionStatement`,\n *   whose expression is a `JSXFragment` or a `JSXElement`.\n *\n *   Typically, there is only one node in `body`, however, this utility also\n *   supports embedded MDX nodes in the HTML (when `mdast-util-mdx` is used\n *   with mdast to parse markdown before passing its nodes through to hast).\n *   When MDX ESM import/exports are used, those nodes are added before the\n *   fragment or element in body.\n *\n *   There aren’t many great estree serializers out there that support JSX.\n *   To do that, you can use `estree-util-to-js`.\n *   Or, use `estree-util-build-jsx` to turn JSX into function calls, and then\n *   serialize with whatever (`astring`, `escodegen`).\n */\nfunction toEstree(tree, options) {\n  const state = (0,_state_js__WEBPACK_IMPORTED_MODULE_0__.createState)(options || {})\n  let result = state.handle(tree)\n  const body = state.esm\n\n  if (result) {\n    if (result.type !== 'JSXFragment' && result.type !== 'JSXElement') {\n      result = {\n        type: 'JSXFragment',\n        openingFragment: {type: 'JSXOpeningFragment'},\n        closingFragment: {type: 'JSXClosingFragment'},\n        children: [result]\n      }\n      state.patch(tree, result)\n    }\n\n    /** @type {ExpressionStatement} */\n    // @ts-expect-error: `estree` types don’t allow JSX.\n    const statement = {type: 'ExpressionStatement', expression: result}\n    state.patch(tree, statement)\n    body.push(statement)\n  }\n\n  /** @type {Program} */\n  const program = {\n    type: 'Program',\n    body,\n    sourceType: 'module',\n    comments: state.comments\n  }\n  state.patch(tree, program)\n  return program\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vaGFzdC11dGlsLXRvLWVzdHJlZUAzLjEuMC9ub2RlX21vZHVsZXMvaGFzdC11dGlsLXRvLWVzdHJlZS9saWIvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2IsYUFBYTtBQUNiLGFBQWE7QUFDYjs7QUFFQTtBQUNBLGFBQWEsc0NBQXNDO0FBQ25ELGFBQWEsMEJBQTBCO0FBQ3ZDO0FBQ0EsYUFBYSxzQkFBc0I7QUFDbkM7QUFDQSxhQUFhLDhCQUE4QjtBQUMzQzs7QUFFc0M7O0FBRXRDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFdBQVc7QUFDdEI7QUFDQSxXQUFXLDRCQUE0QjtBQUN2QztBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsZ0JBQWdCLHNEQUFXLGNBQWM7QUFDekM7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQiwyQkFBMkI7QUFDckQsMEJBQTBCLDJCQUEyQjtBQUNyRDtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxlQUFlLHFCQUFxQjtBQUNwQztBQUNBLHVCQUF1QjtBQUN2QjtBQUNBO0FBQ0E7O0FBRUEsYUFBYSxTQUFTO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2NibV8yMDI0Ly4vbm9kZV9tb2R1bGVzLy5wbnBtL2hhc3QtdXRpbC10by1lc3RyZWVAMy4xLjAvbm9kZV9tb2R1bGVzL2hhc3QtdXRpbC10by1lc3RyZWUvbGliL2luZGV4LmpzPzBkMzEiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBSZWdpc3RlciBNRFggbm9kZXMgaW4gdHJlZTpcbiAqXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdtZGFzdC11dGlsLW1keC1leHByZXNzaW9uJyl9XG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdtZGFzdC11dGlsLW1keC1qc3gnKX1cbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ21kYXN0LXV0aWwtbWR4anMtZXNtJyl9XG4gKi9cblxuLyoqXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdlc3RyZWUnKS5FeHByZXNzaW9uU3RhdGVtZW50fSBFeHByZXNzaW9uU3RhdGVtZW50XG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdlc3RyZWUnKS5Qcm9ncmFtfSBQcm9ncmFtXG4gKlxuICogQHR5cGVkZWYge2ltcG9ydCgnaGFzdCcpLk5vZGVzfSBIYXN0Tm9kZXNcbiAqXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCcuL3N0YXRlLmpzJykuT3B0aW9uc30gT3B0aW9uc1xuICovXG5cbmltcG9ydCB7Y3JlYXRlU3RhdGV9IGZyb20gJy4vc3RhdGUuanMnXG5cbi8qKlxuICogVHJhbnNmb3JtIGEgaGFzdCB0cmVlICh3aXRoIGVtYmVkZGVkIE1EWCBub2RlcykgaW50byBhbiBlc3RyZWUuXG4gKlxuICogIyMjIyMgTm90ZXNcbiAqXG4gKiAjIyMjIyMgQ29tbWVudHNcbiAqXG4gKiBDb21tZW50cyBhcmUgYXR0YWNoZWQgdG8gdGhlIHRyZWUgaW4gdGhlaXIgbmVpZ2hib3VyaW5nIG5vZGVzIChgcmVjYXN0YCxcbiAqIGBiYWJlbGAgc3R5bGUpIGFuZCBhbHNvIGFkZGVkIGFzIGEgYGNvbW1lbnRzYCBhcnJheSBvbiB0aGUgcHJvZ3JhbSBub2RlXG4gKiAoYGVzcHJlZWAgc3R5bGUpLlxuICogWW91IG1heSBoYXZlIHRvIGRvIGBwcm9ncmFtLmNvbW1lbnRzID0gdW5kZWZpbmVkYCBmb3IgY2VydGFpbiBjb21waWxlcnMuXG4gKlxuICogIyMjIyMjIEZyYW1ld29ya3NcbiAqXG4gKiBUaGVyZSBhcmUgZGlmZmVyZW5jZXMgYmV0d2VlbiB3aGF0IEpTWCBmcmFtZXdvcmtzIGFjY2VwdCwgc3VjaCBhcyB3aGV0aGVyIHRoZXlcbiAqIGFjY2VwdCBgY2xhc3NgIG9yIGBjbGFzc05hbWVgLCBvciBgYmFja2dyb3VuZC1jb2xvcmAgb3IgYGJhY2tncm91bmRDb2xvcmAuXG4gKlxuICogRm9yIEpTWCBjb21wb25lbnRzIHdyaXR0ZW4gaW4gTURYLCB0aGUgYXV0aG9yIGhhcyB0byBiZSBhd2FyZSBvZiB0aGlzXG4gKiBkaWZmZXJlbmNlIGFuZCB3cml0ZSBjb2RlIGFjY29yZGluZ2x5LlxuICogRm9yIGhhc3QgZWxlbWVudHMgdHJhbnNmb3JtZWQgYnkgdGhpcyBwcm9qZWN0LCB0aGlzIHdpbGwgYmUgaGFuZGxlZCB0aHJvdWdoXG4gKiBvcHRpb25zLlxuICpcbiAqIHwgRnJhbWV3b3JrIHwgYGVsZW1lbnRBdHRyaWJ1dGVOYW1lQ2FzZWAgfCBgc3R5bGVQcm9wZXJ0eU5hbWVDYXNlYCB8XG4gKiB8IC0tLS0tLS0tLSB8IC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIHwgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gfFxuICogfCBQcmVhY3QgICAgfCBgJ2h0bWwnYCAgICAgICAgICAgICAgICAgICB8IGAnZG9tJ2AgICAgICAgICAgICAgICAgIHxcbiAqIHwgUmVhY3QgICAgIHwgYCdyZWFjdCdgICAgICAgICAgICAgICAgICAgfCBgJ2RvbSdgICAgICAgICAgICAgICAgICB8XG4gKiB8IFNvbGlkICAgICB8IGAnaHRtbCdgICAgICAgICAgICAgICAgICAgIHwgYCdjc3MnYCAgICAgICAgICAgICAgICAgfFxuICogfCBWdWUgICAgICAgfCBgJ2h0bWwnYCAgICAgICAgICAgICAgICAgICB8IGAnZG9tJ2AgICAgICAgICAgICAgICAgIHxcbiAqXG4gKiBAcGFyYW0ge0hhc3ROb2Rlc30gdHJlZVxuICogICBoYXN0IHRyZWUuXG4gKiBAcGFyYW0ge09wdGlvbnMgfCBudWxsIHwgdW5kZWZpbmVkfSBbb3B0aW9uc11cbiAqICAgQ29uZmlndXJhdGlvbiAob3B0aW9uYWwpLlxuICogQHJldHVybnMge1Byb2dyYW19XG4gKiAgIGVzdHJlZSBwcm9ncmFtIG5vZGUuXG4gKlxuICogICBUaGUgcHJvZ3JhbeKAmXMgbGFzdCBjaGlsZCBpbiBgYm9keWAgaXMgbW9zdCBsaWtlbHkgYW4gYEV4cHJlc3Npb25TdGF0ZW1lbnRgLFxuICogICB3aG9zZSBleHByZXNzaW9uIGlzIGEgYEpTWEZyYWdtZW50YCBvciBhIGBKU1hFbGVtZW50YC5cbiAqXG4gKiAgIFR5cGljYWxseSwgdGhlcmUgaXMgb25seSBvbmUgbm9kZSBpbiBgYm9keWAsIGhvd2V2ZXIsIHRoaXMgdXRpbGl0eSBhbHNvXG4gKiAgIHN1cHBvcnRzIGVtYmVkZGVkIE1EWCBub2RlcyBpbiB0aGUgSFRNTCAod2hlbiBgbWRhc3QtdXRpbC1tZHhgIGlzIHVzZWRcbiAqICAgd2l0aCBtZGFzdCB0byBwYXJzZSBtYXJrZG93biBiZWZvcmUgcGFzc2luZyBpdHMgbm9kZXMgdGhyb3VnaCB0byBoYXN0KS5cbiAqICAgV2hlbiBNRFggRVNNIGltcG9ydC9leHBvcnRzIGFyZSB1c2VkLCB0aG9zZSBub2RlcyBhcmUgYWRkZWQgYmVmb3JlIHRoZVxuICogICBmcmFnbWVudCBvciBlbGVtZW50IGluIGJvZHkuXG4gKlxuICogICBUaGVyZSBhcmVu4oCZdCBtYW55IGdyZWF0IGVzdHJlZSBzZXJpYWxpemVycyBvdXQgdGhlcmUgdGhhdCBzdXBwb3J0IEpTWC5cbiAqICAgVG8gZG8gdGhhdCwgeW91IGNhbiB1c2UgYGVzdHJlZS11dGlsLXRvLWpzYC5cbiAqICAgT3IsIHVzZSBgZXN0cmVlLXV0aWwtYnVpbGQtanN4YCB0byB0dXJuIEpTWCBpbnRvIGZ1bmN0aW9uIGNhbGxzLCBhbmQgdGhlblxuICogICBzZXJpYWxpemUgd2l0aCB3aGF0ZXZlciAoYGFzdHJpbmdgLCBgZXNjb2RlZ2VuYCkuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB0b0VzdHJlZSh0cmVlLCBvcHRpb25zKSB7XG4gIGNvbnN0IHN0YXRlID0gY3JlYXRlU3RhdGUob3B0aW9ucyB8fCB7fSlcbiAgbGV0IHJlc3VsdCA9IHN0YXRlLmhhbmRsZSh0cmVlKVxuICBjb25zdCBib2R5ID0gc3RhdGUuZXNtXG5cbiAgaWYgKHJlc3VsdCkge1xuICAgIGlmIChyZXN1bHQudHlwZSAhPT0gJ0pTWEZyYWdtZW50JyAmJiByZXN1bHQudHlwZSAhPT0gJ0pTWEVsZW1lbnQnKSB7XG4gICAgICByZXN1bHQgPSB7XG4gICAgICAgIHR5cGU6ICdKU1hGcmFnbWVudCcsXG4gICAgICAgIG9wZW5pbmdGcmFnbWVudDoge3R5cGU6ICdKU1hPcGVuaW5nRnJhZ21lbnQnfSxcbiAgICAgICAgY2xvc2luZ0ZyYWdtZW50OiB7dHlwZTogJ0pTWENsb3NpbmdGcmFnbWVudCd9LFxuICAgICAgICBjaGlsZHJlbjogW3Jlc3VsdF1cbiAgICAgIH1cbiAgICAgIHN0YXRlLnBhdGNoKHRyZWUsIHJlc3VsdClcbiAgICB9XG5cbiAgICAvKiogQHR5cGUge0V4cHJlc3Npb25TdGF0ZW1lbnR9ICovXG4gICAgLy8gQHRzLWV4cGVjdC1lcnJvcjogYGVzdHJlZWAgdHlwZXMgZG9u4oCZdCBhbGxvdyBKU1guXG4gICAgY29uc3Qgc3RhdGVtZW50ID0ge3R5cGU6ICdFeHByZXNzaW9uU3RhdGVtZW50JywgZXhwcmVzc2lvbjogcmVzdWx0fVxuICAgIHN0YXRlLnBhdGNoKHRyZWUsIHN0YXRlbWVudClcbiAgICBib2R5LnB1c2goc3RhdGVtZW50KVxuICB9XG5cbiAgLyoqIEB0eXBlIHtQcm9ncmFtfSAqL1xuICBjb25zdCBwcm9ncmFtID0ge1xuICAgIHR5cGU6ICdQcm9ncmFtJyxcbiAgICBib2R5LFxuICAgIHNvdXJjZVR5cGU6ICdtb2R1bGUnLFxuICAgIGNvbW1lbnRzOiBzdGF0ZS5jb21tZW50c1xuICB9XG4gIHN0YXRlLnBhdGNoKHRyZWUsIHByb2dyYW0pXG4gIHJldHVybiBwcm9ncmFtXG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/hast-util-to-estree@3.1.0/node_modules/hast-util-to-estree/lib/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/hast-util-to-estree@3.1.0/node_modules/hast-util-to-estree/lib/state.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/.pnpm/hast-util-to-estree@3.1.0/node_modules/hast-util-to-estree/lib/state.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createState: () => (/* binding */ createState)\n/* harmony export */ });\n/* harmony import */ var devlop__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! devlop */ \"(rsc)/./node_modules/.pnpm/devlop@1.1.0/node_modules/devlop/lib/development.js\");\n/* harmony import */ var property_information__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! property-information */ \"(rsc)/./node_modules/.pnpm/property-information@6.5.0/node_modules/property-information/index.js\");\n/* harmony import */ var unist_util_position__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! unist-util-position */ \"(rsc)/./node_modules/.pnpm/unist-util-position@5.0.0/node_modules/unist-util-position/lib/index.js\");\n/* harmony import */ var zwitch__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! zwitch */ \"(rsc)/./node_modules/.pnpm/zwitch@2.0.4/node_modules/zwitch/index.js\");\n/* harmony import */ var _handlers_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./handlers/index.js */ \"(rsc)/./node_modules/.pnpm/hast-util-to-estree@3.1.0/node_modules/hast-util-to-estree/lib/handlers/index.js\");\n/**\n * @typedef {import('estree').Comment} Comment\n * @typedef {import('estree').Directive} Directive\n * @typedef {import('estree').ModuleDeclaration} ModuleDeclaration\n * @typedef {import('estree').Node} EstreeNode\n * @typedef {import('estree').Statement} Statement\n *\n * @typedef {import('estree-jsx').JSXAttribute} JsxAttribute\n * @typedef {import('estree-jsx').JSXElement} JsxElement\n * @typedef {import('estree-jsx').JSXIdentifier} JsxIdentifier\n * @typedef {import('estree-jsx').JSXMemberExpression} JsxMemberExpression\n * @typedef {import('estree-jsx').JSXNamespacedName} JsxNamespacedName\n *\n * @typedef {import('mdast-util-mdx-jsx').MdxJsxAttribute} MdxJsxAttribute\n * @typedef {import('mdast-util-mdx-jsx').MdxJsxAttributeValueExpression} MdxJsxAttributeValueExpression\n * @typedef {import('mdast-util-mdx-jsx').MdxJsxExpressionAttribute} MdxJsxExpressionAttribute\n *\n * @typedef {import('hast').Nodes} HastNodes\n * @typedef {import('hast').Parents} HastParents\n *\n * @typedef {import('property-information').Schema} Schema\n */\n\n/**\n * @typedef {JsxElement['openingElement']['name']} JsxElementName\n * @typedef {JsxAttribute['name']} JsxAttributeName\n * @typedef {JsxElement['children'][number]} JsxChild\n */\n\n/**\n * @typedef {'html' | 'react'} ElementAttributeNameCase\n *   Specify casing to use for attribute names.\n *\n *   HTML casing is for example `class`, `stroke-linecap`, `xml:lang`.\n *   React casing is for example `className`, `strokeLinecap`, `xmlLang`.\n *\n * @callback Handle\n *   Turn a hast node into an estree node.\n * @param {any} node\n *   Expected hast node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {JsxChild | null | undefined}\n *   estree node.\n *\n * @typedef Options\n *   Configuration.\n * @property {ElementAttributeNameCase | null | undefined} [elementAttributeNameCase='react']\n *   Specify casing to use for attribute names (default: `'react'`).\n *\n *   This casing is used for hast elements, not for embedded MDX JSX nodes\n *   (components that someone authored manually).\n * @property {Record<string, Handle | null | undefined> | null | undefined} [handlers={}]\n *   Custom handlers (optional).\n * @property {Space | null | undefined} [space='html']\n *   Which space the document is in (default: `'html'`).\n *\n *   When an `<svg>` element is found in the HTML space, this package already\n *   automatically switches to and from the SVG space when entering and exiting\n *   it.\n * @property {StylePropertyNameCase | null | undefined} [stylePropertyNameCase='dom']\n *   Specify casing to use for property names in `style` objects (default: `'dom'`).\n *\n *   This casing is used for hast elements, not for embedded MDX JSX nodes\n *   (components that someone authored manually).\n * @property {boolean | null | undefined} [tableCellAlignToStyle=true]\n *   Turn obsolete `align` props on `td` and `th` into CSS `style` props\n *   (default: `true`).\n *\n * @typedef {'html' | 'svg'} Space\n *   Namespace.\n *\n * @typedef {'css' | 'dom'} StylePropertyNameCase\n *   Casing to use for property names in `style` objects.\n *\n *   CSS casing is for example `background-color` and `-webkit-line-clamp`.\n *   DOM casing is for example `backgroundColor` and `WebkitLineClamp`.\n *\n * @typedef State\n *   Info passed around about the current state.\n * @property {(parent: HastParents) => Array<JsxChild>} all\n *   Transform children of a hast parent to estree.\n * @property {Array<Comment>} comments\n *   List of estree comments.\n * @property {(name: string) => JsxAttributeName} createJsxAttributeName\n *   Create a JSX attribute name.\n * @property {(name: string) => JsxElementName} createJsxElementName\n *   Create a JSX element name.\n * @property {ElementAttributeNameCase} elementAttributeNameCase\n *   Casing to use for attribute names.\n * @property {Array<Directive | ModuleDeclaration | Statement>} esm\n *   List of top-level estree nodes.\n * @property {(node: any) => JsxChild | null | undefined} handle\n *   Transform a hast node to estree.\n * @property {(from: HastNodes | MdxJsxAttribute | MdxJsxAttributeValueExpression | MdxJsxExpressionAttribute, to: Comment | EstreeNode) => undefined} inherit\n *   Take positional info and data from `from` (use `patch` if you don’t want data).\n * @property {(from: HastNodes, to: Comment | EstreeNode) => undefined} patch\n *   Take positional info from `from` (use `inherit` if you also want data).\n * @property {Schema} schema\n *   Current schema.\n * @property {StylePropertyNameCase} stylePropertyNameCase\n *   Casing to use for property names in `style` objects.\n * @property {boolean} tableCellAlignToStyle\n *   Turn obsolete `align` props on `td` and `th` into CSS `style` props.\n */\n\n\n\n\n\n\n\nconst own = {}.hasOwnProperty\n\n// `react-dom` triggers a warning for *any* white space in tables.\n// To follow GFM, `mdast-util-to-hast` injects line endings between elements.\n// Other tools might do so too, but they don’t do here, so we remove all of\n// that.\n//\n// See: <https://github.com/facebook/react/pull/7081>.\n// See: <https://github.com/facebook/react/pull/7515>.\n// See: <https://github.com/remarkjs/remark-react/issues/64>.\n// See: <https://github.com/rehypejs/rehype-react/pull/29>.\n// See: <https://github.com/rehypejs/rehype-react/pull/32>.\n// See: <https://github.com/rehypejs/rehype-react/pull/45>.\n// See: <https://github.com/mdx-js/mdx/issues/2000>\nconst tableElements = new Set(['table', 'tbody', 'thead', 'tfoot', 'tr'])\n\n/**\n * Create a state from options.\n *\n * @param {Options} options\n *   Configuration.\n * @returns {State}\n *   Info passed around about the current state.\n */\n\nfunction createState(options) {\n  /** @type {Handle} */\n  const one = (0,zwitch__WEBPACK_IMPORTED_MODULE_0__.zwitch)('type', {\n    invalid,\n    unknown,\n    handlers: {..._handlers_index_js__WEBPACK_IMPORTED_MODULE_1__.handlers, ...options.handlers}\n  })\n\n  return {\n    // Current space.\n    elementAttributeNameCase: options.elementAttributeNameCase || 'react',\n    schema: options.space === 'svg' ? property_information__WEBPACK_IMPORTED_MODULE_2__.svg : property_information__WEBPACK_IMPORTED_MODULE_2__.html,\n    stylePropertyNameCase: options.stylePropertyNameCase || 'dom',\n    tableCellAlignToStyle: options.tableCellAlignToStyle !== false,\n    // Results.\n    comments: [],\n    esm: [],\n    // Useful functions.\n    all,\n    createJsxAttributeName,\n    createJsxElementName,\n    handle,\n    inherit,\n    patch\n  }\n\n  /**\n   * @this {State}\n   * @param {any} node\n   * @returns {JsxChild | null | undefined}\n   */\n  function handle(node) {\n    return one(node, this)\n  }\n}\n\n/**\n * Crash on an invalid value.\n *\n * @param {unknown} value\n *   Non-node.\n * @returns {never}\n *   Nothing (crashes).\n */\nfunction invalid(value) {\n  throw new Error('Cannot handle value `' + value + '`, expected node')\n}\n\n/**\n * Crash on an unknown node.\n *\n * @param {unknown} node\n *   Unknown node.\n * @returns {never}\n *   Nothing (crashes).\n */\nfunction unknown(node) {\n  (0,devlop__WEBPACK_IMPORTED_MODULE_3__.ok)(node && typeof node === 'object')\n  ;(0,devlop__WEBPACK_IMPORTED_MODULE_3__.ok)('type' in node)\n  throw new Error('Cannot handle unknown node `' + node.type + '`')\n}\n\n/**\n * @this {State} state\n *   Info passed around about the current state.\n * @param {HastParents} parent\n *   hast node whose children to transform.\n * @returns {Array<JsxChild>}\n *   estree nodes.\n */\nfunction all(parent) {\n  const children = parent.children || []\n  let index = -1\n  /** @type {Array<JsxChild>} */\n  const results = []\n  const ignoreLineBreak =\n    this.schema.space === 'html' &&\n    parent.type === 'element' &&\n    tableElements.has(parent.tagName.toLowerCase())\n\n  while (++index < children.length) {\n    const child = children[index]\n\n    if (ignoreLineBreak && child.type === 'text' && child.value === '\\n') {\n      continue\n    }\n\n    const result = this.handle(child)\n\n    if (Array.isArray(result)) {\n      results.push(...result)\n    } else if (result) {\n      results.push(result)\n    }\n  }\n\n  return results\n}\n\n/**\n * Take positional info and data from `hast`.\n *\n * Use `patch` if you don’t want data.\n *\n * @param {HastNodes | MdxJsxAttribute | MdxJsxAttributeValueExpression | MdxJsxExpressionAttribute} from\n *   hast node to take positional info and data from.\n * @param {Comment | EstreeNode} to\n *   estree node to add positional info and data to.\n * @returns {undefined}\n *   Nothing.\n */\nfunction inherit(from, to) {\n  const left = /** @type {Record<string, unknown> | undefined} */ (from.data)\n  /** @type {Record<string, unknown> | undefined} */\n  let right\n  /** @type {string} */\n  let key\n\n  patch(from, to)\n\n  if (left) {\n    for (key in left) {\n      if (own.call(left, key) && key !== 'estree') {\n        if (!right) right = {}\n        right[key] = left[key]\n      }\n    }\n\n    if (right) {\n      // @ts-expect-error `esast` extension.\n      to.data = right\n    }\n  }\n}\n\n/**\n * Take positional info from `from`.\n *\n * Use `inherit` if you also want data.\n *\n * @param {HastNodes | MdxJsxAttribute | MdxJsxAttributeValueExpression | MdxJsxExpressionAttribute} from\n *   hast node to take positional info from.\n * @param {Comment | EstreeNode} to\n *   estree node to add positional info to.\n * @returns {undefined}\n *   Nothing.\n */\nfunction patch(from, to) {\n  const p = (0,unist_util_position__WEBPACK_IMPORTED_MODULE_4__.position)(from)\n\n  if (p && p.start.offset !== undefined && p.end.offset !== undefined) {\n    // @ts-expect-error acorn-style.\n    to.start = p.start.offset\n    // @ts-expect-error acorn-style.\n    to.end = p.end.offset\n    to.loc = {\n      start: {line: p.start.line, column: p.start.column - 1},\n      end: {line: p.end.line, column: p.end.column - 1}\n    }\n    to.range = [p.start.offset, p.end.offset]\n  }\n}\n\n/**\n * Create a JSX attribute name.\n *\n * @param {string} name\n * @returns {JsxAttributeName}\n */\nfunction createJsxAttributeName(name) {\n  const node = createJsxNameFromString(name)\n\n  // MDX never generates this.\n  /* c8 ignore next 3 */\n  if (node.type === 'JSXMemberExpression') {\n    throw new Error('Member expressions in attribute names are not supported')\n  }\n\n  return node\n}\n\n/**\n * Create a JSX element name.\n *\n * @param {string} name\n * @returns {JsxElementName}\n */\nfunction createJsxElementName(name) {\n  return createJsxNameFromString(name)\n}\n\n/**\n * Create a JSX name from a string.\n *\n * @param {string} name\n *   Name.\n * @returns {JsxIdentifier | JsxMemberExpression | JsxNamespacedName}\n *   Node.\n */\nfunction createJsxNameFromString(name) {\n  if (name.includes('.')) {\n    const names = name.split('.')\n    let part = names.shift()\n    ;(0,devlop__WEBPACK_IMPORTED_MODULE_3__.ok)(part, 'Expected `part` to be defined')\n    /** @type {JsxIdentifier | JsxMemberExpression} */\n    let node = {type: 'JSXIdentifier', name: part}\n\n    while ((part = names.shift())) {\n      node = {\n        type: 'JSXMemberExpression',\n        object: node,\n        property: {type: 'JSXIdentifier', name: part}\n      }\n    }\n\n    return node\n  }\n\n  if (name.includes(':')) {\n    const parts = name.split(':')\n    return {\n      type: 'JSXNamespacedName',\n      namespace: {type: 'JSXIdentifier', name: parts[0]},\n      name: {type: 'JSXIdentifier', name: parts[1]}\n    }\n  }\n\n  return {type: 'JSXIdentifier', name}\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/hast-util-to-estree@3.1.0/node_modules/hast-util-to-estree/lib/state.js\n");

/***/ })

};
;